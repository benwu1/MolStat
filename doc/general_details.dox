/* This file is a part of MolStat, which is distributed under the Creative
   Commons Attribution-NonCommercial 4.0 International Public License.
   MolStat (c) 2014, Northwestern University. */
/**
\page page_general_details General Mathematical Ideas

In this section we discuss general mathematical concepts underlying MolStat.
First is information on probability density functions and elements of
probability theory. Second is random number distributions, focusing on the
MolStat interface for using them. Finally is a discussion on histograms,
including some comments on binning styles.

\todo Add a section on binning styles, histograms, etc.

\section sec_pdf Probability Density Functions
Probability density functions and, more generally, the idea of a random
variable, are central to MolStat. In this section we summarize some elements of
probability theory that are used, in various forms, throughout. Standard texts
on probability, such as \cite bk:ghahramani-2000, should be consulted for
additional information.

A random variable is a quantity whose value is unknown until measured. When a
measurement is performed, the probability density function describes the
likelihood of measuring a particular value. For example, \f[
P(x) = \frac{1}{\sqrt{2\pi\sigma^2}} \exp\left[ - \frac{(x-\bar{x})^2}{2\sigma^2} \right]
\f] is the probability density function for a normal random variable with
average \f$ \bar{x} \f$ and variance \f$\sigma^2\f$. When the random variable
\f$\hat{x}\f$ is measured, \f$P(x)\mathrm{d}x\f$ gives the probability that
\f$\hat{x}\f$ has a value between \f$x\f$ and \f$x+\mathrm{d}x\f$. Finally,
\f$P(x)\ge 0\f$ for all \f$x\f$ in the domain.

\note For now, we only consider continuous random variables with continuous
probability density functions. See \cite bk:ghahramani-2000 for other
possibilities.

\subsection subsec_pdf_props Properties of Probability Density Functions
We now detail a few general properties of probability density functions.
-# _Normalization_. The probability density function \f$P(x)\f$ is normalized
if
\f[
\int \mathrm{d}x P(x) = 1,
\f]
where the bounds of integration cover the domain of the random variable.

-# _Moments_. Let \f$\hat{x}\f$ be a random variable with probability density
function \f$P(x)\f$. The expected value, or first moment, of \f$\hat{x}\f$ is
\f[ \left< \hat{x} \right> = \int \mathrm{d}x x P(x). \f]
More generally, the \f$n^\mathrm{th}\f$ moment of \f$\hat{x}\f$ is
\f[ \left< \hat{x}^n \right> = \int \mathrm{d}x x^n P(x), \f]
and the expected value of a function of \f$\hat{x}\f$ is
\f[ \left< f(\hat{x}) \right> = \int \mathrm{d}x f(x) P(x). \f]

-# _Change of variable_. As before, let \f$\hat{x}\f$ be a random variable with
probability density function \f$P_{\hat{x}}(x)\f$. Now consider a random
variable \f$ \hat{y} \f$ given by \f$ \hat{x} = f(\hat{y}) \f$, for some
differentiable function \f$f\f$. The probability density function for
\f$\hat{y}\f$ is then given by
\f[ P_{\hat{y}}(y) = P_{\hat{x}}(f(y)) \left| \frac{\mathrm{d}}{\mathrm{d} y} f(y) \right|. \f]
In this way, it can be verified, using integration by parts, that
\f[ \int \mathrm{d}x P_{\hat{x}}(x) = \int \mathrm{d}y P_{\hat{y}}(y). \f]

\section sec_rng Random Number Distributions
The theories for single-molecule behavior that underlie MolStat assume that
the various physical parameters are random variables. When simulating
single-molecule behavior, it is thus necessary to specify the probability
density function for each of these random variables. In this section we list
the implemented random number distributions, along with how each is invoked in
the input file.

All random number distributions have a common syntax:
\verbatim
variable-name distribution [distribution-parameters]
\endverbatim
where
   - `variable-name` is the name of the model variable.
   - `distribution` is the name of the distribution (see below).
   - `[distribution-parameters]` are the parameter(s) required by the specified
     distribution.

The implemented random distributions are
   - Constant distribution: \f$ P(x) = \delta(x-x_c)\f$.
      - `distribution-name` is `Constant`
      - `[distribution-parameters]` are `value`
         - `value` is \f$x_c\f$.
      - Implemented by the class ConstantDistribution.

   - Uniform distribution: \f$ P(x) = 1/(b-a) \f$ for \f$a\le x \le b\f$.
      - `distribution-name` is `Uniform`
      - `[distribution-parameters]` are `lower upper`
         - `lower` is \f$a\f$.
         - `upper` is \f$b\f$.
      - Implemented by the class UniformDistribution.

   - Normal distribution: \f$ P(x) = (2\pi \sigma^2)^{-1/2} \exp\left[ - (x-x_0)^2 / (2 \sigma^2) \right] \f$.
      - `distribution-name` is `Normal` or `Gaussian`
      - `[distribution-parameters]` are `average stdev`
         - `average` is \f$ x_0 \f$.
         - `stdev` is \f$\sigma\f$.
      - Implemented by the class NormalDistribution.

   - Lognormal distribution: \f$ P(x) = \frac{1}{x \sqrt{2\pi \sigma^2}} \exp\left[ - \frac{(\ln(x) - \zeta)^2}{2\sigma^2} \right] \f$.
      - `distribution-name` is `Lognormal`
      - `[distribution-parameters]` are `zeta sigma`
         - `zeta` is \f$ \zeta \f$, the mean (in log-space).
         - `sigma` is \f$\sigma\f$, the standard deviation (in log-space).
      - Implemented by the class LognormalDistribution.

	- Gamma distribution: \f$ P(x) = \frac{1}{\Gamma(a) b^a} x^{a-1} e^{-x/b} \f$.
      - `distribution-name` is `Gamma`
      - `[distribution-parameters]` are `a b`
         - `a` is \f$ a \f$, the shape factor.
         - `b` is \f$b\f$, the scale factor.
      - Implemented by the class GammaDistribution.

\subsection add_rnd_subsec Adding Random Distributions
Random number distributions are computationally described by the
RandomDistribution class. Adding a new random number distribution requires
a class derived from RandomDistribution that implements the `sample` function.
This function takes in a `gsl_rng` construct from GSL and returns a random
number from the distribution.

Finally, the new random number distribution needs to be added to the
::distribution_from_tokens function so that it is processed from input. In this
function, the `distribution` tag for the input deck is defined and the code for
processing `[distribution-parameters]` is implemented. The distributions
listed above should provide sufficient examples. Note that the name of the
distribution should be in lowercase.

\section sec_histograms Histograms
*/
