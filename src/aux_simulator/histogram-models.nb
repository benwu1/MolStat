(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    322567,       6799]
NotebookOptionsPosition[    314912,       6526]
NotebookOutlinePosition[    315347,       6543]
CellTagsIndexPosition[    315304,       6540]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/mgreuter/Documents/Research/histogram-voltage\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.586680888573414*^9, 3.586680918361854*^9}, {
  3.586680968608871*^9, 3.5866809702806787`*^9}}],

Cell[CellGroupData[{

Cell["Model Development", "Section",
 CellChangeTimes->{{3.603652512335588*^9, 3.603652516166339*^9}, {
  3.6085715981586657`*^9, 3.60857160008716*^9}}],

Cell[CellGroupData[{

Cell["Symmetric, One-Site", "Subsection",
 CellChangeTimes->{{3.60649367066607*^9, 3.606493672888548*^9}, {
  3.6085716039590597`*^9, 3.608571611134603*^9}, {3.608571708859617*^9, 
  3.608571714258999*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}], "^", "2"}], "+", 
      RowBox[{"b", "^", "2"}]}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.605880803083725*^9, 3.6058808158050117`*^9}, {
  3.605880878809272*^9, 3.605880879599484*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "b"}], " ", 
  RowBox[{"ArcTan", "[", 
   FractionBox[
    RowBox[{"a", "-", "x"}], "b"], "]"}]}]], "Output",
 CellChangeTimes->{3.6058808164416847`*^9, 3.605880879953362*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"trans", "[", 
    RowBox[{"e_", ",", "eps_", ",", "gamma_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"gamma", "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"e", "-", "eps"}], ")"}], "^", "2"}], "+", 
      RowBox[{"gamma", "^", "2"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conductance", "[", 
    RowBox[{"V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "gamma_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"eta", " ", 
     RowBox[{"trans", "[", 
      RowBox[{
       RowBox[{"efermi", "+", 
        RowBox[{"eta", " ", "V"}]}], ",", "eps", ",", "gamma"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "eta"}], ")"}], 
     RowBox[{"trans", "[", 
      RowBox[{
       RowBox[{"efermi", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"eta", "-", "1"}], ")"}], " ", "V"}]}], ",", "eps", ",", 
       "gamma"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nondiffconductance", "[", 
    RowBox[{"V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "gamma_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"gamma", "/", "V"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"efermi", "+", 
          RowBox[{"eta", " ", "V"}], "-", "eps"}], ")"}], "/", "gamma"}], 
       "]"}], "-", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"efermi", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"eta", "-", "1"}], ")"}], "V"}], "-", "eps"}], ")"}], "/",
         "gamma"}], "]"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.603652518027505*^9, 3.6036525406481943`*^9}, {
  3.603652578918126*^9, 3.6036526443479424`*^9}, {3.6036526787987337`*^9, 
  3.603652696383789*^9}, {3.605881185634755*^9, 3.605881202041005*^9}, {
  3.605881238932898*^9, 3.6058812690449543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "=", 
     RowBox[{"efermi", "-", "eps"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"conductance", "[", 
      RowBox[{"V", ",", "efermi", ",", "eta", ",", "eps", ",", "gamma"}], 
      "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "^", "2"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"eta", " ", "V"}]}], ")"}], "^", "2"}]}], "-", 
        RowBox[{"2", "eta", " ", "V", " ", 
         RowBox[{"gamma", "^", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"z", "+", 
           RowBox[{"eta", " ", "V"}]}], ")"}]}], "+", 
        RowBox[{"eta", " ", 
         RowBox[{"V", "^", "2"}], 
         RowBox[{"gamma", "^", "2"}]}], "+", 
        RowBox[{"gamma", "^", "4"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z", "+", 
           RowBox[{"eta", " ", "V"}]}], ")"}], "^", "4"}], "-", 
        RowBox[{"2", "V", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"eta", " ", "V"}]}], ")"}], "^", "3"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"V", "^", "2"}], "+", 
           RowBox[{"2", 
            RowBox[{"gamma", "^", "2"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"eta", " ", "V"}]}], ")"}], "^", "2"}]}], "-", 
        RowBox[{"2", "V", " ", 
         RowBox[{"gamma", "^", "2"}], 
         RowBox[{"(", 
          RowBox[{"z", "+", 
           RowBox[{"eta", " ", "V"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"V", "^", "2"}], 
         RowBox[{"gamma", "^", "2"}]}], "+", 
        RowBox[{"gamma", "^", "4"}]}], ")"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604857547565556*^9, 3.604857686327105*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.604857686831092*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "=", 
     RowBox[{"efermi", "-", "eps"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"conductance", "[", 
      RowBox[{"V", ",", "efermi", ",", "eta", ",", "eps", ",", "gamma"}], 
      "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"V", "^", "2"}], "eta", 
         RowBox[{"(", 
          RowBox[{"1", "-", "eta"}], ")"}], 
         RowBox[{"gamma", "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"gamma", "^", "2"}], 
         RowBox[{"z", "^", "2"}]}], "+", 
        RowBox[{"gamma", "^", "4"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z", "+", 
           RowBox[{"eta", " ", "V"}]}], ")"}], "^", "4"}], "-", 
        RowBox[{"2", "V", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"eta", " ", "V"}]}], ")"}], "^", "3"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"V", "^", "2"}], "+", 
           RowBox[{"2", 
            RowBox[{"gamma", "^", "2"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"eta", " ", "V"}]}], ")"}], "^", "2"}]}], "-", 
        RowBox[{"2", "V", " ", 
         RowBox[{"gamma", "^", "2"}], 
         RowBox[{"(", 
          RowBox[{"z", "+", 
           RowBox[{"eta", " ", "V"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"V", "^", "2"}], 
         RowBox[{"gamma", "^", "2"}]}], "+", 
        RowBox[{"gamma", "^", "4"}]}], ")"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604857547565556*^9, 3.604857686327105*^9}, {
  3.604857719047593*^9, 3.604857733358918*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6048577339874*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Asymmetric, One-Site", "Subsection",
 CellChangeTimes->{{3.606493698304967*^9, 3.606493702071616*^9}, {
  3.608571613142915*^9, 3.60857161489474*^9}, {3.608571718667098*^9, 
  3.608571722994588*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"gammaL", ">", "0"}], "&&", 
    RowBox[{"gammaR", ">", "0"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"4", "gammaL", " ", 
      RowBox[{"gammaR", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"gammaL", "+", "gammaR"}], ")"}], "^", "2"}]}], ")"}]}]}], 
     ",", "z"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606493732329092*^9, 3.606493778237041*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "gammaL", " ", "gammaR", " ", 
    RowBox[{"ArcTan", "[", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"eps", "-", "z"}], ")"}]}], 
      RowBox[{"gammaL", "+", "gammaR"}]], "]"}]}], 
   RowBox[{"gammaL", "+", "gammaR"}]]}]], "Output",
 CellChangeTimes->{3.606493778728342*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Symmetric, One-Site, Voltage-Dependent\
\>", "Subsection",
 CellChangeTimes->{{3.604007318370078*^9, 3.604007323035749*^9}, {
  3.608571639174135*^9, 3.6085716501494007`*^9}, {3.608571724484041*^9, 
  3.608571728850903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"g", ">", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"z", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"z", "^", "2"}], "+", 
          RowBox[{"g", "^", "2"}]}], ")"}], "^", "2"}]}], ",", "z"}], "]"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604007338841915*^9, 3.604007340019487*^9}, {
  3.604007456069676*^9, 3.6040074843292637`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["g", "2"], "+", 
      SuperscriptBox["z", "2"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.60400748494637*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"trans", "[", 
    RowBox[{"V_", ",", "e_", ",", "eps_", ",", "gamma_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"gamma", "^", "2"}], " ", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"e", "-", "eps", "-", "V"}], ")"}], "^", "2"}], "+", 
      RowBox[{"gamma", "^", "2"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conductance", "[", 
    RowBox[{"V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "gamma_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"eta", "-", "1"}], ")"}], " ", 
     RowBox[{"trans", "[", 
      RowBox[{"V", ",", 
       RowBox[{"efermi", "+", 
        RowBox[{"eta", " ", "V"}]}], ",", "eps", ",", "gamma"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", "eta"}], ")"}], " ", 
     RowBox[{"trans", "[", 
      RowBox[{"V", ",", 
       RowBox[{"efermi", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", "eps", ",", 
       "gamma"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nondiffconductance", "[", 
    RowBox[{"V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "gamma_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"gamma", "/", "V"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"efermi", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"eta", "-", "1"}], ")"}], "V"}], "-", "eps"}], ")"}], "/",
         "gamma"}], "]"}], "-", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"efermi", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"eta", "-", "2"}], ")"}], "V"}], "-", "eps"}], ")"}], "/",
         "gamma"}], "]"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.603653132443617*^9, 3.603653280971141*^9}, {
   3.603653381029085*^9, 3.603653533850463*^9}, {3.603653567660575*^9, 
   3.603653657640761*^9}, {3.60400784049061*^9, 3.604008009491971*^9}, {
   3.604834894922503*^9, 3.6048348982407827`*^9}, {3.604835380806346*^9, 
   3.604835409542388*^9}, {3.604836449782261*^9, 3.604836462020392*^9}, 
   3.604836505320063*^9, {3.6058815980275087`*^9, 3.605881647649914*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Symmetric, Two-Site", "Subsection",
 CellChangeTimes->{{3.608571923440621*^9, 3.608571926057891*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gamma", ">", "0"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[NotEqual]", "0"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"z", "^", "2"}]}], "-", 
            RowBox[{"gamma", "^", "2"}], "-", 
            RowBox[{"4", 
             RowBox[{"beta", "^", "2"}]}]}], ")"}], "^", "2"}], "+", 
         RowBox[{"16", 
          RowBox[{"gamma", "^", "2"}], " ", 
          RowBox[{"z", "^", "2"}]}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}], ",", "z"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.60857192803577*^9, 3.608571929290156*^9}, {
  3.608571993687063*^9, 3.6085720525019417`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "beta"}], "+", 
       "gamma"}], ")"}], " ", 
     RowBox[{"ArcTanh", "[", 
      FractionBox[
       RowBox[{"2", " ", "z"}], 
       RowBox[{
        RowBox[{"2", " ", "beta"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "gamma"}]}]], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "beta"}], "+", "gamma"}], 
      ")"}], " ", 
     RowBox[{"ArcTanh", "[", 
      FractionBox[
       RowBox[{"2", " ", "z"}], 
       RowBox[{
        RowBox[{"2", " ", "beta"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "gamma"}]}]], "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"16", " ", "beta", " ", "gamma", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["beta", "2"]}], "+", 
      SuperscriptBox["gamma", "2"]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.608572038538827*^9, 3.608572053169881*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Asymmetric, Two-Site", "Subsection",
 CellChangeTimes->{{3.608571923440621*^9, 3.608571926057891*^9}, {
  3.608650840737006*^9, 3.608650842671219*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gammaL", ">", "0"}], "&&", 
     RowBox[{"gammaR", ">", "0"}], "&&", 
     RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
     RowBox[{"beta", "\[NotEqual]", "0"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{"z", "^", "2"}]}], "-", 
             RowBox[{"gammaL", " ", "gammaR"}], "-", 
             RowBox[{"4", 
              RowBox[{"beta", "^", "2"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{"4", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"gammaL", "+", "gammaR"}], ")"}], "^", "2"}], " ", 
           RowBox[{"z", "^", "2"}]}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}]}], ",", "z"}], "]"}], "]"}]}], "]"}], "//",
   "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.60857192803577*^9, 3.608571929290156*^9}, {
  3.608571993687063*^9, 3.6085720525019417`*^9}, {3.608650851529564*^9, 
  3.60865087278144*^9}, {3.608651105619377*^9, 3.608651111256276*^9}, {
  3.608651161354703*^9, 3.608651163536035*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "z"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "8"}], " ", 
             SuperscriptBox["beta", "2"]}], "+", 
            SuperscriptBox["gammaL", "2"], "-", 
            RowBox[{"gammaL", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", 
                SuperscriptBox["beta", "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]]}], "-", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", 
                SuperscriptBox["beta", "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]], " ", 
             "gammaR"}], "+", 
            SuperscriptBox["gammaR", "2"]}], ")"}]}], ")"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", 
           SuperscriptBox["beta", "2"]}], "+", 
          SuperscriptBox["gammaL", "2"], "-", 
          RowBox[{"gammaL", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "16"}], " ", 
              SuperscriptBox["beta", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]]}], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "16"}], " ", 
              SuperscriptBox["beta", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]], " ", 
           "gammaR"}], "+", 
          SuperscriptBox["gammaR", "2"]}], ")"}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "z"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "8"}], " ", 
             SuperscriptBox["beta", "2"]}], "+", 
            SuperscriptBox["gammaL", "2"], "+", 
            RowBox[{"gammaL", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", 
                SuperscriptBox["beta", "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]]}], "+", 
            RowBox[{"gammaR", " ", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "16"}], " ", 
                  SuperscriptBox["beta", "2"]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]], "+", 
               "gammaR"}], ")"}]}]}], ")"}]}], ")"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", 
           SuperscriptBox["beta", "2"]}], "+", 
          SuperscriptBox["gammaL", "2"], "+", 
          RowBox[{"gammaL", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "16"}], " ", 
              SuperscriptBox["beta", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]]}], "+", 
          RowBox[{"gammaR", " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", 
                SuperscriptBox["beta", "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]], "+", 
             "gammaR"}], ")"}]}]}], ")"}]}], ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SqrtBox["2"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "16"}], " ", 
        SuperscriptBox["beta", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"gammaL", "+", "gammaR"}], ")"}]}], ")"}]}],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.608572038538827*^9, 3.608572053169881*^9}, 
   3.608650891871744*^9, 3.608651128202862*^9, 3.608651165874424*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Symmetric, Two-Site, Voltage-Dependent\
\>", "Subsection",
 CellChangeTimes->{{3.603634054282886*^9, 3.6036340581220627`*^9}, {
  3.60857166115695*^9, 3.60857167184457*^9}, {3.6085717305305433`*^9, 
  3.608571735530466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "[", "z_", "]"}], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gamma", "\[Element]", "Reals"}], "&&", 
     RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
     RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
     RowBox[{"V", "\[Element]", "Reals"}], "&&", 
     RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"H", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eps", "-", 
              RowBox[{"V", "/", "2"}]}], ",", "beta"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"beta", ",", 
             RowBox[{"eps", "+", 
              RowBox[{"V", "/", "2"}]}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"sigmaL", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"sigmaR", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"gammaL", "=", 
           RowBox[{"I", 
            RowBox[{"(", 
             RowBox[{"sigmaL", "-", 
              RowBox[{"ConjugateTranspose", "[", "sigmaL", "]"}]}], ")"}]}]}],
           ",", "\[IndentingNewLine]", 
          RowBox[{"gammaR", "=", 
           RowBox[{"I", 
            RowBox[{"(", 
             RowBox[{"sigmaR", "-", 
              RowBox[{"ConjugateTranspose", "[", "sigmaR", "]"}]}], 
             ")"}]}]}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "G", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"G", "=", 
            RowBox[{"Inverse", "[", 
             RowBox[{
              RowBox[{"z", " ", 
               RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "-", "H", "-", 
              "sigmaL", "-", "sigmaR"}], "]"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"FullSimplify", "[", 
            RowBox[{"Tr", "[", 
             RowBox[{"G", ".", "gammaL", ".", 
              RowBox[{"ConjugateTranspose", "[", "G", "]"}], ".", "gammaR"}], 
             "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.603634060282874*^9, 3.603634259204934*^9}, {
  3.603634295018052*^9, 3.603634407573082*^9}, {3.603635313970296*^9, 
  3.603635318669284*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"16", " ", 
    SuperscriptBox["beta", "2"], " ", 
    SuperscriptBox["gamma", "2"]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["beta", "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "eps"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "gamma"}], "-", "V", "-", 
         RowBox[{"2", " ", "z"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "eps"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "gamma"}], "+", "V", "-", 
         RowBox[{"2", " ", "z"}]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["beta", "2"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["eps", "2"]}], "+", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "eps", " ", "gamma"}], "+", 
      SuperscriptBox["gamma", "2"], "+", 
      SuperscriptBox["V", "2"], "+", 
      RowBox[{"8", " ", "eps", " ", "z"}], "-", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "gamma", " ", "z"}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.603634186237835*^9, {3.603634232076045*^9, 3.6036342595255527`*^9}, {
   3.603634401323518*^9, 3.603634408004807*^9}, 3.603635319257845*^9, 
   3.604838819040007*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gamma", "\[Element]", "Reals"}], "&&", 
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"V", "\[Element]", "Reals"}], "&&", 
    RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"T", "[", "z", "]"}], "\[Equal]", 
     RowBox[{"16", 
      RowBox[{"gamma", "^", "2"}], 
      RowBox[{
       RowBox[{"beta", "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
            RowBox[{"4", 
             RowBox[{"beta", "^", "2"}]}], "-", 
            RowBox[{"gamma", "^", "2"}], "-", 
            RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
         RowBox[{"16", 
          RowBox[{"gamma", "^", "2"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}]}], ")"}]}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.603634447176813*^9, 3.603634522835226*^9}, {
  3.603635325087061*^9, 3.6036353263974457`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.603634516518385*^9, 3.60363452390265*^9}, 
   3.603635327458684*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gamma", ">", "0"}], "&&", 
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"V", "\[Element]", "Reals"}], "&&", 
    RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"16", 
       RowBox[{"gamma", "^", "2"}], 
       RowBox[{
        RowBox[{"beta", "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
             RowBox[{"4", 
              RowBox[{"beta", "^", "2"}]}], "-", 
             RowBox[{"gamma", "^", "2"}], "-", 
             RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{"16", 
           RowBox[{"gamma", "^", "2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}]}], ")"}]}]}], ",",
       "z"}], "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.603634447176813*^9, 3.603634522835226*^9}, {
  3.603635325087061*^9, 3.6036353263974457`*^9}, {3.605885458391588*^9, 
  3.605885468782434*^9}, {3.6058858151079693`*^9, 3.6058858291648006`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["beta", "2"]}], "+", 
     SuperscriptBox["V", "2"]}]]], 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["beta", "2"], " ", "gamma", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"eps", "-", "z"}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["beta", "2"]}], "+", 
          SuperscriptBox["gamma", "2"], "-", 
          SuperscriptBox["V", "2"], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "gamma", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["beta", "2"]}], "+", 
             SuperscriptBox["V", "2"]}]]}]}]]], "]"}], 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["beta", "2"]}], "+", 
        SuperscriptBox["gamma", "2"], "-", 
        SuperscriptBox["V", "2"], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "gamma", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["beta", "2"]}], "+", 
           SuperscriptBox["V", "2"]}]]}]}]]], "-", 
     FractionBox[
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"eps", "-", "z"}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["beta", "2"]}], "+", 
          SuperscriptBox["gamma", "2"], "-", 
          SuperscriptBox["V", "2"], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "gamma", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["beta", "2"]}], "+", 
             SuperscriptBox["V", "2"]}]]}]}]]], "]"}], 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["beta", "2"]}], "+", 
        SuperscriptBox["gamma", "2"], "-", 
        SuperscriptBox["V", "2"], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "gamma", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["beta", "2"]}], "+", 
           SuperscriptBox["V", "2"]}]]}]}]]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.605885480536848*^9, 3.605885833907527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gamma", "\[Element]", "Reals"}], "&&", 
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"V", "\[Element]", "Reals"}], "&&", 
    RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"T", "[", "z", "]"}], ",", "V"}], "]"}], "\[Equal]", 
     RowBox[{"64", "V", " ", 
      RowBox[{"gamma", "^", "2"}], 
      RowBox[{"beta", "^", "2"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
         RowBox[{"4", 
          RowBox[{"beta", "^", "2"}]}], "-", 
         RowBox[{"gamma", "^", "2"}], "-", 
         RowBox[{"V", "^", "2"}]}], ")"}], "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
             RowBox[{"4", 
              RowBox[{"beta", "^", "2"}]}], "-", 
             RowBox[{"gamma", "^", "2"}], "-", 
             RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{"16", 
           RowBox[{"gamma", "^", "2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}]}], ")"}], "^", 
        "2"}]}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.603634447176813*^9, 3.603634522835226*^9}, {
  3.603635325087061*^9, 3.603635387458599*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.603635388236912*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "\[Element]", "Reals"}], "&&", 
     RowBox[{"b", "\[Element]", "Reals"}], "&&", 
     RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", 
           RowBox[{"z", "^", "2"}]}], "-", "a"}], ")"}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"z", "^", "2"}]}], "-", "a"}], ")"}], "^", "2"}], "+", 
           
           RowBox[{"b", " ", 
            RowBox[{"z", "^", "2"}]}]}], ")"}], "^", "2"}]}], ",", "z"}], 
      "]"}], "]"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6036364861578617`*^9, 3.603636586732463*^9}, {
  3.6036366452811403`*^9, 3.603636645920951*^9}, {3.6036367185642023`*^9, 
  3.603636727366598*^9}, {3.603637655021934*^9, 3.603637655163163*^9}, {
  3.604842310786615*^9, 3.604842314822654*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", "a"}]], 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "12"}], " ", "a"}], "+", "b", "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["z", "2"]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"16", " ", "a"}], "-", "b"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["a", "2"], "-", 
        RowBox[{"8", " ", "a", " ", 
         SuperscriptBox["z", "2"]}], "+", 
        RowBox[{"b", " ", 
         SuperscriptBox["z", "2"]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["z", "4"]}]}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "a"}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
         SqrtBox["b"]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "b"}]}], ")"}], " ", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"4", " ", 
         SqrtBox["2"], " ", "z"}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", "a"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
           SqrtBox["b"]}], "+", "b"}]]], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", "a"}], "-", "b"}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox["b"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "8"}], " ", "a"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
         SqrtBox["b"]}], "+", "b"}]]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "32"}], " ", "\[ImaginaryI]", " ", "a"}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
         SqrtBox["b"]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "b"}]}], ")"}], " ", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"4", " ", 
         SqrtBox["2"], " ", "z"}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", "a"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
           SqrtBox["b"]}], "+", "b"}]]], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", "a"}], "-", "b"}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox["b"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "8"}], " ", "a"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
         SqrtBox["b"]}], "+", "b"}]]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.60363656292829*^9, 3.6036366419377337`*^9, {3.603636715577381*^9, 
   3.603636731464571*^9}, 3.603637694859007*^9, 3.6048423438876123`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"trans", "[", 
     RowBox[{"V_", ",", "e_", ",", "eps_", ",", "beta_", ",", "gamma_"}], 
     "]"}], ":=", 
    RowBox[{"16", 
     RowBox[{"gamma", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"beta", "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"e", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
           RowBox[{"4", 
            RowBox[{"beta", "^", "2"}]}], "-", 
           RowBox[{"gamma", "^", "2"}], "-", 
           RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
        RowBox[{"16", 
         RowBox[{"gamma", "^", "2"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"e", "-", "eps"}], ")"}], "^", "2"}]}]}], ")"}]}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"transderiv", "[", 
     RowBox[{"V_", ",", "z_", ",", "beta_", ",", "gamma_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bv", "=", 
         RowBox[{
          RowBox[{"4", 
           RowBox[{"beta", "^", "2"}]}], "+", 
          RowBox[{"V", "^", "2"}]}]}], ",", 
        RowBox[{"atan", "=", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"2", 
           RowBox[{"z", "/", 
            RowBox[{"(", 
             RowBox[{"gamma", "-", 
              RowBox[{"I", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"beta", "^", "2"}]}], "+", 
                 RowBox[{"V", "^", "2"}]}], "]"}]}]}], ")"}]}]}], "]"}]}]}], 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"8", "V", " ", 
        RowBox[{"beta", "^", "2"}], " ", 
        RowBox[{"gamma", "^", "2"}], " ", "z", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", 
            RowBox[{"z", "^", "2"}]}], "+", 
           RowBox[{"gamma", "^", "2"}], "-", 
           RowBox[{"3", "bv"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"bv", 
           RowBox[{"(", 
            RowBox[{"bv", "+", 
             RowBox[{"gamma", "^", "2"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"16", 
              RowBox[{"z", "^", "4"}]}], "+", 
             RowBox[{"8", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"gamma", "^", "2"}], "-", "bv"}], ")"}], 
              RowBox[{"z", "^", "2"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"bv", "+", 
                RowBox[{"gamma", "^", "2"}]}], ")"}], "^", "2"}]}], ")"}]}], 
          ")"}]}]}], "-", 
       RowBox[{"8", "V", " ", "gamma", " ", 
        RowBox[{
         RowBox[{"beta", "^", "2"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"bv", "+", 
            RowBox[{"gamma", "^", "2"}]}], ")"}], "^", "2"}]}], 
        RowBox[{"Re", "[", "atan", "]"}]}], "-", 
       RowBox[{"4", "V", " ", 
        RowBox[{"gamma", "^", "2"}], 
        RowBox[{"beta", "^", "2"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", "bv"}], "+", 
           RowBox[{"gamma", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"bv", "+", 
              RowBox[{"gamma", "^", "2"}]}], ")"}], "^", "2"}], 
           RowBox[{"bv", "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}]}], 
        RowBox[{"Im", "[", "atan", "]"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conductance", "[", 
    RowBox[{
    "V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "beta_", ",", 
     "gamma_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eta", " ", 
     RowBox[{"trans", "[", 
      RowBox[{"V", ",", 
       RowBox[{"efermi", "+", 
        RowBox[{"eta", " ", "V"}]}], ",", "eps", ",", "beta", ",", "gamma"}], 
      "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "eta"}], ")"}], 
     RowBox[{"trans", "[", 
      RowBox[{"V", ",", 
       RowBox[{"efermi", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", "eps", ",", "beta", 
       ",", "gamma"}], "]"}]}], "+", 
    RowBox[{"transderiv", "[", 
     RowBox[{"V", ",", 
      RowBox[{"efermi", "-", "eps", "+", 
       RowBox[{"eta", " ", "V"}]}], ",", "beta", ",", "gamma"}], "]"}], "-", 
    RowBox[{"transderiv", "[", 
     RowBox[{"V", ",", 
      RowBox[{"efermi", "-", "eps", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", "beta", ",", 
      "gamma"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.603653132443617*^9, 3.603653280971141*^9}, {
  3.603653381029085*^9, 3.603653533850463*^9}, {3.603653567660575*^9, 
  3.603653657640761*^9}, {3.604839516703463*^9, 3.604839568935096*^9}, {
  3.6048397250933723`*^9, 3.604839762727162*^9}, {3.60484808171591*^9, 
  3.604848331496345*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nondiffintegral", "[", 
     RowBox[{"V_", ",", "z_", ",", "beta_", ",", "gamma_"}], "]"}], ":=", 
    RowBox[{"4", 
     RowBox[{"beta", "^", "2"}], 
     RowBox[{"gamma", "/", 
      RowBox[{"(", 
       RowBox[{"V", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"4", 
           RowBox[{"beta", "^", "2"}]}], "+", 
          RowBox[{"V", "^", "2"}]}], "]"}]}], ")"}]}], 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{"2", 
         RowBox[{"z", "/", 
          RowBox[{"(", 
           RowBox[{"gamma", "-", 
            RowBox[{"I", " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"4", 
                RowBox[{"beta", "^", "2"}]}], "+", 
               RowBox[{"V", "^", "2"}]}], "]"}]}]}], ")"}]}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"gamma", "-", 
         RowBox[{"I", " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"beta", "^", "2"}]}], "+", 
            RowBox[{"V", "^", "2"}]}], "]"}]}]}], ")"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nondiffconductance", "[", 
    RowBox[{
    "V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "beta_", ",", 
     "gamma_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nondiffintegral", "[", 
     RowBox[{"V", ",", 
      RowBox[{"efermi", "-", "eps", "+", 
       RowBox[{"eta", " ", "V"}]}], ",", "beta", ",", "gamma"}], "]"}], "-", 
    RowBox[{"nondiffintegral", "[", 
     RowBox[{"V", ",", 
      RowBox[{"efermi", "-", "eps", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", "beta", ",", 
      "gamma"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.605886337750194*^9, 3.605886361657446*^9}, {
  3.605886423312127*^9, 3.6058865320156107`*^9}, {3.605886615006022*^9, 
  3.605886617493279*^9}, {3.60604322155763*^9, 3.606043268431484*^9}, {
  3.6060434539679623`*^9, 3.606043463882023*^9}, {3.606046278072075*^9, 
  3.6060462854224367`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Asymmetric, Two-Site, Voltage-Dependent\
\>", "Subsection",
 CellChangeTimes->{{3.606058272889146*^9, 3.6060582803120813`*^9}, {
  3.608571689339877*^9, 3.608571697803735*^9}, {3.60857173731574*^9, 
  3.6085717413784*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gammaL", ">", "0"}], "&&", 
    RowBox[{"gammaR", ">", "0"}], "&&", 
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"V", "\[Element]", "Reals"}], "&&", 
    RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"H", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"eps", "-", 
               RowBox[{"V", "/", "2"}]}], ",", "beta"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"beta", ",", 
              RowBox[{"eps", "+", 
               RowBox[{"V", "/", "2"}]}]}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"sigmaL", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "I"}], " ", 
               RowBox[{"gammaL", "/", "2"}]}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"sigmaR", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", "I"}], " ", 
               RowBox[{"gammaR", "/", "2"}]}]}], "}"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GammaL", "=", 
            RowBox[{"I", 
             RowBox[{"(", 
              RowBox[{"sigmaL", "-", 
               RowBox[{"ConjugateTranspose", "[", "sigmaL", "]"}]}], 
              ")"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"GammaR", "=", 
            RowBox[{"I", 
             RowBox[{"(", 
              RowBox[{"sigmaR", "-", 
               RowBox[{"ConjugateTranspose", "[", "sigmaR", "]"}]}], 
              ")"}]}]}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "G", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"G", "=", 
             RowBox[{"Inverse", "[", 
              RowBox[{
               RowBox[{"z", " ", 
                RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "-", "H", "-", 
               "sigmaL", "-", "sigmaR"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"FullSimplify", "[", 
             RowBox[{"Tr", "[", 
              RowBox[{"G", ".", "GammaL", ".", 
               RowBox[{"ConjugateTranspose", "[", "G", "]"}], ".", "GammaR"}],
               "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
      "]"}], "\[Equal]", 
     RowBox[{"16", "gammaL", " ", "gammaR", " ", 
      RowBox[{
       RowBox[{"beta", "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
            RowBox[{"4", 
             RowBox[{"beta", "^", "2"}]}], "-", 
            RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "+", 
            RowBox[{"V", "^", "2"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"gammaL", "^", "2"}], "+", 
            RowBox[{"gammaR", "^", "2"}]}], ")"}]}], "-", 
         RowBox[{"4", "V", 
          RowBox[{"(", 
           RowBox[{"z", "-", "eps"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"gammaL", "^", "2"}], "-", 
            RowBox[{"gammaR", "^", "2"}]}], ")"}]}], "+", 
         RowBox[{"8", 
          RowBox[{"beta", "^", "2"}], " ", "gammaL", " ", "gammaR"}], "+", 
         RowBox[{
          RowBox[{"gammaL", "^", "2"}], " ", 
          RowBox[{"gammaR", "^", "2"}]}]}], ")"}]}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.603634060282874*^9, 3.603634259204934*^9}, {
  3.603634295018052*^9, 3.603634407573082*^9}, {3.603635313970296*^9, 
  3.603635318669284*^9}, {3.60605830473608*^9, 3.6060583947397003`*^9}, {
  3.6060584730069437`*^9, 3.606058571495715*^9}, {3.606058919063517*^9, 
  3.606058919158718*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.606058546066111*^9, 3.606058919608432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gammaL", ">", "0"}], "&&", 
    RowBox[{"gammaR", ">", "0"}], "&&", 
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"V", "\[Element]", "Reals"}], "&&", 
    RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"16", "gammaL", " ", "gammaR", " ", 
       RowBox[{
        RowBox[{"beta", "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
             RowBox[{"4", 
              RowBox[{"beta", "^", "2"}]}], "-", 
             RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "+", 
             RowBox[{"V", "^", "2"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"gammaL", "^", "2"}], "+", 
             RowBox[{"gammaR", "^", "2"}]}], ")"}]}], "-", 
          RowBox[{"4", "V", 
           RowBox[{"(", 
            RowBox[{"z", "-", "eps"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"gammaL", "^", "2"}], "-", 
             RowBox[{"gammaR", "^", "2"}]}], ")"}]}], "+", 
          RowBox[{"8", 
           RowBox[{"beta", "^", "2"}], " ", "gammaL", " ", "gammaR"}], "+", 
          RowBox[{
           RowBox[{"gammaL", "^", "2"}], " ", 
           RowBox[{"gammaR", "^", "2"}]}]}], ")"}]}]}], ",", "z"}], "]"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603634060282874*^9, 3.603634259204934*^9}, {
  3.603634295018052*^9, 3.603634407573082*^9}, {3.603635313970296*^9, 
  3.603635318669284*^9}, {3.60605830473608*^9, 3.6060583947397003`*^9}, {
  3.6060584730069437`*^9, 3.606058571495715*^9}, {3.606058919063517*^9, 
  3.606058948248536*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", 
  SuperscriptBox["beta", "2"], " ", "gammaL", " ", "gammaR", " ", 
  RowBox[{"RootSum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"16", " ", 
       SuperscriptBox["beta", "4"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["beta", "2"], " ", "gammaL", " ", "gammaR"}], "+", 
      RowBox[{
       SuperscriptBox["gammaL", "2"], " ", 
       SuperscriptBox["gammaR", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["beta", "2"], " ", 
       SuperscriptBox["V", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["gammaL", "2"], " ", 
       SuperscriptBox["V", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["gammaR", "2"], " ", 
       SuperscriptBox["V", "2"]}], "+", 
      SuperscriptBox["V", "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["gammaL", "2"], " ", "V", " ", "#1"}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["gammaR", "2"], " ", "V", " ", "#1"}], "-", 
      RowBox[{"32", " ", 
       SuperscriptBox["beta", "2"], " ", 
       SuperscriptBox["#1", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["gammaL", "2"], " ", 
       SuperscriptBox["#1", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["gammaR", "2"], " ", 
       SuperscriptBox["#1", "2"]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["V", "2"], " ", 
       SuperscriptBox["#1", "2"]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["#1", "4"]}]}], "&"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"eps", "-", "z", "-", "#1"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["gammaL", "2"], " ", "V"}], "-", 
        RowBox[{
         SuperscriptBox["gammaR", "2"], " ", "V"}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["beta", "2"], " ", "#1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["gammaL", "2"], " ", "#1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["gammaR", "2"], " ", "#1"}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["V", "2"], " ", "#1"}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["#1", "3"]}]}], ")"}]}], "&"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.606058961925592*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests for the Code", "Section",
 CellChangeTimes->{{3.6085591912218513`*^9, 3.6085591933715973`*^9}}],

Cell["\<\
If needed, h can be a function of v (lowercase)\
\>", "Text",
 CellChangeTimes->{{3.608560278862884*^9, 3.6085602877564373`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CodeTest", "[", 
    RowBox[{
    "h_", ",", "sigmaL_", ",", "sigmaR_", ",", "eta_", ",", "V_", ",", 
     "EF_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gammaL", ",", "gammaR", ",", "t", ",", "n"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "h", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"gammaL", "=", 
       RowBox[{"I", 
        RowBox[{"(", 
         RowBox[{"sigmaL", "-", 
          RowBox[{"ConjugateTranspose", "[", "sigmaL", "]"}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"gammaR", "=", 
       RowBox[{"I", 
        RowBox[{"(", 
         RowBox[{"sigmaR", "-", 
          RowBox[{"ConjugateTranspose", "[", "sigmaR", "]"}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Get", " ", "the", " ", "transmission", " ", "as", " ", "a", " ", 
         "function", " ", "of", " ", "energy"}], ",", " ", "z"}], " ", "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", "[", "z_", "]"}], "=", 
       RowBox[{"Assuming", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"z", "\[Element]", "Reals"}], "&&", 
          RowBox[{"v", "\[Element]", "Reals"}]}], ",", 
         RowBox[{"FullSimplify", "[", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"G", "=", 
              RowBox[{"Inverse", "[", 
               RowBox[{
                RowBox[{"z", " ", 
                 RowBox[{"IdentityMatrix", "[", "n", "]"}]}], "-", "h", "-", 
                "sigmaL", "-", "sigmaR"}], "]"}]}], "}"}], ",", 
            RowBox[{"Tr", "[", 
             RowBox[{"G", ".", "gammaL", ".", 
              RowBox[{"ConjugateTranspose", "[", "G", "]"}], ".", "gammaR"}], 
             "]"}]}], "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Zero", "-", 
        RowBox[{"bias", " ", "conductance"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Zero bias: \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{"t", "[", "EF", "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{"v", "\[Rule]", "V"}], "}"}]}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Static", " ", "conductance"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Static: \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Re", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"NIntegrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"t", "[", "z", "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"v", "\[Rule]", "V"}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"z", ",", 
                RowBox[{"EF", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", 
                RowBox[{"EF", "+", 
                 RowBox[{"eta", " ", "V"}]}]}], "}"}]}], "]"}], "/", "V"}], 
           ")"}], "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Differential", " ", "conductance"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Differential: \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"eta", " ", 
                RowBox[{"t", "[", 
                 RowBox[{"EF", "+", 
                  RowBox[{"eta", " ", "V"}]}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "eta"}], ")"}], 
                RowBox[{"t", "[", 
                 RowBox[{"EF", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], "]"}]}]}], 
              ")"}], "/.", 
             RowBox[{"{", 
              RowBox[{"v", "\[Rule]", "V"}], "}"}]}], ")"}], "+", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{"FullSimplify", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"t", "[", "z", "]"}], ",", "v"}], "]"}], ")"}], "/.", 
               RowBox[{"{", 
                RowBox[{"v", "\[Rule]", "V"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"z", ",", 
               RowBox[{"EF", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", 
               RowBox[{"EF", "+", 
                RowBox[{"eta", " ", "V"}]}]}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6085592043176527`*^9, 3.60855934335443*^9}, {
   3.6085594275887957`*^9, 3.608559469521986*^9}, {3.608559506721665*^9, 
   3.60855958147011*^9}, {3.608559613786031*^9, 3.608559617334228*^9}, {
   3.608559647777194*^9, 3.608559649368678*^9}, 3.608559770638941*^9, {
   3.608560049609082*^9, 3.608560117942684*^9}, {3.6085601581396112`*^9, 
   3.6085602162670116`*^9}, {3.608560292786639*^9, 3.608560425175728*^9}, {
   3.6085619119623747`*^9, 3.608561912969488*^9}, {3.608561983530912*^9, 
   3.6085619932340612`*^9}, {3.6085620553619223`*^9, 3.608562062217628*^9}, {
   3.608562207830041*^9, 3.608562216220642*^9}, {3.608562284152171*^9, 
   3.608562292797234*^9}, {3.608562364423594*^9, 3.60856239245321*^9}, {
   3.60856244329643*^9, 3.6085624446382103`*^9}, {3.608562607725037*^9, 
   3.6085626288480253`*^9}, {3.608562839637931*^9, 3.6085628852689257`*^9}, {
   3.608565098349894*^9, 3.608565099089189*^9}, {3.608565762161375*^9, 
   3.608565857460856*^9}}],

Cell[CellGroupData[{

Cell["Symmetric, One-Site", "Subsection",
 CellChangeTimes->{{3.608559657965395*^9, 3.608559662699814*^9}, 
   3.608571745026094*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gamma", "=", "0.8"}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.0384615\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9}],

Cell[BoxData["\<\"Static: 0.0390172\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.608560607596312*^9}],

Cell[BoxData["\<\"Differential: 0.0401438\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.6085606076308937`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "9."}]}], ",", 
     RowBox[{"gamma", "=", "0.4"}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00159744\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}}],

Cell[BoxData["\<\"Static: 0.00163709\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.608560648366104*^9}}],

Cell[BoxData["\<\"Differential: 0.00167814\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.608560648401084*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "17."}]}], ",", 
     RowBox[{"gamma", "=", "0.67"}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", "3."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00112099\"\>"], "Print",
 CellChangeTimes->{3.608561091222733*^9}],

Cell[BoxData["\<\"Static: 0.00118115\"\>"], "Print",
 CellChangeTimes->{3.608561091223535*^9}],

Cell[BoxData["\<\"Differential: 0.00124526\"\>"], "Print",
 CellChangeTimes->{3.60856109125744*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Asymmetric, One-Site", "Subsection",
 CellChangeTimes->{{3.608559657965395*^9, 3.608559662699814*^9}, {
   3.608561292043438*^9, 3.608561292915244*^9}, 3.608571746394112*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gammaL", "=", "0.8"}], ",", 
     RowBox[{"gammaR", "=", "1.0"}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaL", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaR", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9, {
   3.608561297164441*^9, 3.608561311075807*^9}, {3.608561496385501*^9, 
   3.6085614965427713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.0475907\"\>"], "Print",
 CellChangeTimes->{3.608561311694998*^9, 3.608561497051201*^9}],

Cell[BoxData["\<\"Static: 0.0482617\"\>"], "Print",
 CellChangeTimes->{3.608561311694998*^9, 3.608561497052268*^9}],

Cell[BoxData["\<\"Differential: 0.0496212\"\>"], "Print",
 CellChangeTimes->{3.608561311694998*^9, 3.608561497086829*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "9."}]}], ",", 
     RowBox[{"gammaL", "=", "0.4"}], ",", 
     RowBox[{"gammaR", "=", "0.2"}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaL", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaR", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561566186021*^9, 3.608561576049532*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.000799281\"\>"], "Print",
 CellChangeTimes->{3.6085615764950857`*^9}],

Cell[BoxData["\<\"Static: 0.000819131\"\>"], "Print",
 CellChangeTimes->{3.608561576495863*^9}],

Cell[BoxData["\<\"Differential: 0.000839689\"\>"], "Print",
 CellChangeTimes->{3.608561576547785*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "17."}]}], ",", 
     RowBox[{"gammaL", "=", "0.67"}], ",", 
     RowBox[{"gammaR", "=", "1.98"}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", "3."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaL", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaR", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}, {
  3.608561621305478*^9, 3.608561633135004*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00330201\"\>"], "Print",
 CellChangeTimes->{3.608561633442235*^9}],

Cell[BoxData["\<\"Static: 0.00347858\"\>"], "Print",
 CellChangeTimes->{3.608561633443009*^9}],

Cell[BoxData["\<\"Differential: 0.00366672\"\>"], "Print",
 CellChangeTimes->{3.608561633493264*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Symmetric, One-Site, Voltage-Dependent\
\>", "Subsection",
 CellChangeTimes->{{3.6085618310168047`*^9, 3.60856183825518*^9}, {
  3.608571756449953*^9, 3.608571760689451*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gamma", "=", "0.8"}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"eps", "+", "v"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9, {
   3.608561869026668*^9, 3.60856187006143*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.06639\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9}],

Cell[BoxData["\<\"Static: 0.0679934\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860949708*^9}],

Cell[BoxData["\<\"Differential: 0.114507\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860951642*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "9."}]}], ",", 
     RowBox[{"gamma", "=", "0.4"}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"eps", "+", "v"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561871904711*^9, 3.60856187204823*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.0014771\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9}],

Cell[BoxData["\<\"Static: 0.00151231\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868115507*^9}],

Cell[BoxData["\<\"Differential: 0.00143116\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868117034*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "17."}]}], ",", 
     RowBox[{"gamma", "=", "0.67"}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", "3."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"eps", "+", "v"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}, {
  3.60856187446447*^9, 3.608561874624112*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00129587\"\>"], "Print",
 CellChangeTimes->{3.608561091222733*^9, 3.60856294359204*^9, 
  3.60856586886353*^9}],

Cell[BoxData["\<\"Static: 0.001371\"\>"], "Print",
 CellChangeTimes->{3.608561091222733*^9, 3.60856294359204*^9, 
  3.608565868865465*^9}],

Cell[BoxData["\<\"Differential: 0.00166364\"\>"], "Print",
 CellChangeTimes->{3.608561091222733*^9, 3.60856294359204*^9, 
  3.608565868913623*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symmetric, Two-Site", "Subsection",
 CellChangeTimes->{{3.6085618310168047`*^9, 3.60856183825518*^9}, {
   3.60856688943511*^9, 3.608566889673839*^9}, {3.608571764473648*^9, 
   3.6085717673455257`*^9}, 3.608572464659236*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gamma", "=", "0.8"}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "3."}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9, {
   3.608561869026668*^9, 3.60856187006143*^9}, {3.6085669227783127`*^9, 
   3.608566953497655*^9}, {3.60857246779872*^9, 3.608572470997814*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.101007\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.6085669577670803`*^9, 
   3.608572473241787*^9}],

Cell[BoxData["\<\"Static: 0.127042\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.6085669577670803`*^9, 
   3.608572473266419*^9}],

Cell[BoxData["\<\"Differential: 0.186815\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.6085669577670803`*^9, 
   3.608572473268015*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "3."}]}], ",", 
     RowBox[{"gamma", "=", "0.4"}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "0.8"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561871904711*^9, 3.60856187204823*^9}, {
  3.608567123188352*^9, 3.6085671709820766`*^9}, {3.608572492437396*^9, 
  3.60857249486935*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00043159\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172027678*^9}, 3.608572495543988*^9}],

Cell[BoxData["\<\"Static: 0.000494645\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172027678*^9}, 3.6085724955807457`*^9}],

Cell[BoxData["\<\"Differential: 0.000568266\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172027678*^9}, 3.608572495582803*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", "1.1"}], ",", 
     RowBox[{"gamma", "=", "0.67"}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", "3."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "1.6"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}, {
  3.60856187446447*^9, 3.608561874624112*^9}, {3.6085671276450663`*^9, 
  3.608567138346734*^9}, {3.6085672016315737`*^9, 3.608567213897045*^9}, {
  3.608572513972678*^9, 3.6085725155166903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.459683\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.6085672143617487`*^9}, 
   3.608572516208329*^9}],

Cell[BoxData["\<\"Static: 0.560554\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.6085672143617487`*^9}, 
   3.608572516229681*^9}],

Cell[BoxData["\<\"Differential: 0.230111\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.6085672143617487`*^9}, 
   3.608572516231256*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Asymmetric, Two-Site", "Subsection",
 CellChangeTimes->{{3.608559657965395*^9, 3.608559662699814*^9}, {
   3.608561292043438*^9, 3.608561292915244*^9}, 3.608571746394112*^9, {
   3.608653062637244*^9, 3.608653062891259*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gammaL", "=", "0.8"}], ",", 
     RowBox[{"gammaR", "=", "1.0"}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "3."}]}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaL", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaR", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9, {
   3.608561297164441*^9, 3.608561311075807*^9}, {3.608561496385501*^9, 
   3.6085614965427713`*^9}, {3.60865307270079*^9, 3.608653113872177*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.121622\"\>"], "Print",
 CellChangeTimes->{3.608653114276626*^9}],

Cell[BoxData["\<\"Static: 0.149936\"\>"], "Print",
 CellChangeTimes->{3.6086531143138638`*^9}],

Cell[BoxData["\<\"Differential: 0.213248\"\>"], "Print",
 CellChangeTimes->{3.608653114316226*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "3."}]}], ",", 
     RowBox[{"gammaL", "=", "0.4"}], ",", 
     RowBox[{"gammaR", "=", "0.2"}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "0.8"}]}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaL", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaR", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561566186021*^9, 3.608561576049532*^9}, {
  3.608654127331006*^9, 3.608654155718215*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.000216257\"\>"], "Print",
 CellChangeTimes->{
  3.6085615764950857`*^9, {3.608654139337287*^9, 3.608654167402419*^9}}],

Cell[BoxData["\<\"Static: 0.000247897\"\>"], "Print",
 CellChangeTimes->{
  3.6085615764950857`*^9, {3.608654139337287*^9, 3.60865416742727*^9}}],

Cell[BoxData["\<\"Differential: 0.000284847\"\>"], "Print",
 CellChangeTimes->{
  3.6085615764950857`*^9, {3.608654139337287*^9, 3.608654167429421*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", "5."}], ",", 
     RowBox[{"gammaL", "=", "0.67"}], ",", 
     RowBox[{"gammaR", "=", "1.98"}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "1.6"}]}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", 
      RowBox[{"-", "1."}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaL", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaR", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}, {
  3.608561621305478*^9, 3.608561633135004*^9}, {3.608654326686021*^9, 
  3.608654373899062*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00292927\"\>"], "Print",
 CellChangeTimes->{
  3.608561633442235*^9, {3.608654329191028*^9, 3.6086543741169767`*^9}}],

Cell[BoxData["\<\"Static: 0.00217835\"\>"], "Print",
 CellChangeTimes->{
  3.608561633442235*^9, {3.608654329191028*^9, 3.608654374118792*^9}}],

Cell[BoxData["\<\"Differential: 0.00164361\"\>"], "Print",
 CellChangeTimes->{
  3.608561633442235*^9, {3.608654329191028*^9, 3.608654374120946*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Symmetric, Two-Site, Voltage-Dependent\
\>", "Subsection",
 CellChangeTimes->{{3.6085618310168047`*^9, 3.60856183825518*^9}, {
  3.60856688943511*^9, 3.608566889673839*^9}, {3.608571764473648*^9, 
  3.6085717673455257`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gamma", "=", "0.8"}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "3."}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"eps", "-", 
          RowBox[{"v", "/", "2"}]}], ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", 
         RowBox[{"eps", "+", 
          RowBox[{"v", "/", "2"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9, {
   3.608561869026668*^9, 3.60856187006143*^9}, {3.6085669227783127`*^9, 
   3.608566953497655*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.107326\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.6085669577670803`*^9}],

Cell[BoxData["\<\"Static: 0.136415\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.608566957792622*^9}],

Cell[BoxData["\<\"Differential: 0.222768\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.608566957831621*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "3."}]}], ",", 
     RowBox[{"gamma", "=", "0.4"}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "0.8"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"eps", "-", 
          RowBox[{"v", "/", "2"}]}], ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", 
         RowBox[{"eps", "+", 
          RowBox[{"v", "/", "2"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561871904711*^9, 3.60856187204823*^9}, {
  3.608567123188352*^9, 3.6085671709820766`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.000433828\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172027678*^9}}],

Cell[BoxData["\<\"Static: 0.000497406\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172063036*^9}}],

Cell[BoxData["\<\"Differential: 0.000577222\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172112912*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", "1.1"}], ",", 
     RowBox[{"gamma", "=", "0.67"}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", "3."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "1.6"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"eps", "-", 
          RowBox[{"v", "/", "2"}]}], ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", 
         RowBox[{"eps", "+", 
          RowBox[{"v", "/", "2"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}, {
  3.60856187446447*^9, 3.608561874624112*^9}, {3.6085671276450663`*^9, 
  3.608567138346734*^9}, {3.6085672016315737`*^9, 3.608567213897045*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.631062\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.6085672143617487`*^9}}],

Cell[BoxData["\<\"Static: 0.457519\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.608567214363552*^9}}],

Cell[BoxData["\<\"Differential: -0.0108761\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.60856721442752*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Look at Sample Data", "Section",
 CellChangeTimes->{{3.5866809247599163`*^9, 3.5866809276715612`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
    "\"\</Users/mgreuter/Documents/Research/Codes/histogram-fitter/master/src/\
data\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Real", ",", "Real", ",", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListDensityPlot", "[", "testdata", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{"conductance", "[", 
        RowBox[{"V", ",", "0.", ",", "0.5", ",", 
         RowBox[{"-", "6."}], ",", "0.4"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"V", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6035539278489933`*^9, 3.603553942902207*^9}, {
   3.6049301747949553`*^9, 3.604930175986545*^9}, {3.604930211295864*^9, 
   3.6049302662990932`*^9}, 3.606511073084403*^9, {3.606511128241623*^9, 
   3.606511131412725*^9}, {3.608575901673624*^9, 3.608575902352335*^9}, {
   3.608575952415876*^9, 3.608575975810545*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxE3X3013V9xnEihdTjXWOmdZLQplgZMZ03C4dm5V1pZoFrmrQSs0wN09Sp
6BaaJeKcVmpiZ2qxVuC8pWN5b1iRkXmLhWKkJt4XJpix7ZzrcX3++p3n/7/r
+/jnc17vcf98zIcPHzlixIhNth0x4v//fuaz733XRvPX3rzL0s/f/tzjr7tF
v3+P519+6e6hD1i507xXrx966oWnTl3nsqGnTb5j1AZnDX30t98z6fXHDH3C
h85eufnUoWeu+cXFYycPfdYVm+27zbZDn7f/oavfsfHQc697+J07/ml0+9uH
bbXs7x8ZesF6R87eY9HQN1yzYNLeC4a+843vnHHA14e++44vjJsyc+j7j75x
ySFHDP3I5iNP/+QBQz9x294TPrPz0C9tt+hTnx879F9+teGYE0cPPfq0j9x+
2nOj2huPv2TGrAeGfvOcLeadc/PQ2+w6bep/fGfod/7226MunjP0zrOfue5b
Xxx68s47Hv6dw4b+4NyrL56/19BT9l69z3UThv74i5NX3/iGoY/45pnzblu7
bvv416677CdPDH3q9/ebveQXQ5859fxJD9ww9LmveWjlby4b+uv/PfaSFWcN
feXr5y5ZeczQ83+4YuaLU4e+fvrbJ6yePPTNm8xYtnbboX/+xef/avQmQ983
bufbN3x5nfayn506Y8yjQz9+/B3j3nTX0M+N3eCX464a+tUzzx613TeGXnfi
kusmnD70Rg9vdvhOnx56s1mHjtntQ0P/zdMP7/PeXYbe/mtbrd73LUP/3e5H
zjvwdUP/w1MLph78/GuHPV3w0qjDHhz6o698YdL0W4Y+9MobVx41b+jpB4y8
5Ljzhj569d77nnzi0KdMWzTzjGlDz1p/owlf3nvo2dd+ZNm57xr6ax+/ZPaF
mw8993WPTfrmiKG/d8y0GZc/ObJ93RbfGffdJUP/6PZnlly1cOgff27H02/4
1tD33nv1dTd9eehfn7b6U3ceO/Tvxu8+ZvHBQz9zz5m337P70C+d8vMZD40f
ep0V+817dJOhNzz3/KlPvPya9l/v8tCoZx8desvHxl7/x7uGfsc+c1e+ctXQ
O/5hxcUjLxp6t0vfvu96Zwz9vr1mrN74yKH3f2HhvM0OHPqQg3de9uZdh/7U
yNNmv3Xc0J/73h2T3r7e0MdP2eDpiS+MaH/pR2eP2/Whoc85YsmSybcOfcGm
bzj9/f819KU3Hjrhg/8+9JWHX7HsoJOGvnbxVmP+6RND//CEI2//xD5D3/mW
q2Z8euLQP//pS+OO2WLohyceP/WE1wx91w1f3HDNPWtv1g9usO5Roy8f+veH
nf/TMccNveaasdtttef//R+sGbXNzusPfmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH50T/FD
80PzQ/Oje4ofmh+aH5ofmh/dU/zQ/ND80PzQ/ND80PzQ/ND86J7ih+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmR/cUPzQ/ND80PzQ/uqf4ofmh+dHfu/jRPcUP
zQ/ND80PzQ/Nj62+8pM3TZv+l/qh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH50T3FD80PzQ/N
j+4pfmh+aH5ofmh+dE/xQ/ND80PzQ/ND80PzQ/ND86N7ih+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh/dU/zQ/ND80PzQ/Oie4ofmh+ZHf+/iR/cUPzQ/ND80
PzQ/ND9O2+KcTc++7dX6ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+dE9xQ/ND80PzY/uKX5o
fmh+aH5ofnRP8UPzQ/ND80PzQ/ND80PzQ/Oje4ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5of3VP80PzQ/ND80PzonuKH5ofmR3/v4kf3FD80PzQ/ND80PzQ/
ls7bf/TVWw5+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRP8UPzQ/ND86N7ih+aH5ofmh+a
H91T/ND80PzQ/ND80PzQ/ND80PzonuKH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+ZH9xQ/ND80PzQ/ND+6p/ih+aH50d+7+NE9xQ/ND80PzQ/ND82PnXfZ9NWl
J/+5fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH50T/FD80PzQ/Oje4ofmh+aH5ofmh/dU/zQ
/ND80PzQ/ND80PzQ/ND86J7ih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR/cU
PzQ/ND80PzQ/uqf4ofmh+dHfu/jRPcUPzQ/ND80PzQ/Nj7l77Ll2nQdeqR+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5of3VP80PzQ/ND86J7ih+aH5ofmh+ZH9xQ/ND80PzQ/
ND80PzQ/ND80P7qn+KH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+dE9xQ/ND80P
zQ/Nj+4pfmh+aH709y5+dE/xQ/ND80PzQ/ND82PNknVXbb/D4Ifmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+ZH9xQ/ND80PzQ/uqf4ofmh+aH5ofnRPcUPzQ/ND80PzQ/ND80P
zQ/Nj+4pfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRP8UPzQ/ND80Pzo3uK
H5ofmh/9vYsf3VP80PzQ/ND80PzQ/Jg67a6npsxZUz80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/uqf4ofmh+aH50T3FD80PzQ/ND82P7il+aH5ofmh+aH5ofmh+aH5ofnRP
8UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND86N7ih+aH5ofmh+aH91T/ND80Pzo
71386J7ih+aH5ofmh+aH5sc1z33l0ZkrV9cPzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj+4p
fmh+aH5ofnRP8UPzQ/ND80Pzo3uKH5ofmh+aH5ofmh+aH5ofmh/dU/zQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzonuKH5ofmh+aH5kf3FD80PzQ/+nsXP7qn
+KH5ofmh+aH5ofmx8cwP3j9vr8EPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj+4pfmh+aH5o
fnRP8UPzQ/ND80Pzo3uKH5ofmh+aH5ofmh+aH5ofmh/dU/zQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzonuKH5ofmh+aH5kf3FD80PzQ/+nsXP7qn+KH5ofmh
+aH5ofnx2Y02WfzLy1+uH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh/dU/zQ/ND80PzonuKH
5ofmh+aH5kf3FD80PzQ/ND80PzQ/ND80PzQ/uqf4ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH50T3FD80PzQ/ND82P7il+aH5ofvT3Ln50T/FD80PzQ/ND80Pz
Y9Gl99y6Zu2f6ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/uqf4ofmh+aH5
ofnRPcUPzQ/ND80PzQ/ND80PzQ/Nj+4pfmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofnRP8UPzQ/ND80Pzo3uKH5ofmh/9vYsf3VP80PzQ/ND80PzQ/Nh6+wtv
2PqQwQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND82P7il+aH5ofmh+dE/xQ/ND80PzQ/Oje4of
mh+aH5ofmh+aH5ofmh+aH91T/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oie
4ofmh+aH5ofmR/cUPzQ/ND/6exc/uqf4ofmh+aH5ofmh+THzh1O//4GFL9UP
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/Nj+4pfmh+aH5ofnRP8UPzQ/ND80Pzo3uKH5ofmh+a
H5ofmh+aH5ofmh/dU/zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzonuKH5ofm
h+aH5kf3FD80PzQ/+nsXP7qn+KH5ofmh+aH5ofnx6/3eePnxYwY/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80P7qn+KH5ofmh+dE9xQ/ND80PzQ/Nj+4pfmh+aH5ofmh+aH5o
fmh+aH50T/FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oje4ofmh+aH5ofmh/d
U/zQ/ND86O9d/Oie4ofmh+aH5ofmh+bHLg//+htzj11VPzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND+6p/ih+aH5ofnRPcUPzQ/ND80PzY/uKX5ofmh+aH5ofmh+aH5ofmh+
dE/xQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pzo3uKH5ofmh+aH5of3VP80PzQ
/OjvXfzonuKH5ofmh+aH5ofmx2UrNrrkrsV/rB+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
3VP80PzQ/ND86J7ih+aH5ofmh+ZH9xQ/ND80PzQ/ND80PzQ/ND80P7qn+KH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+dE9xQ/ND80PzQ/Nj+4pfmh+aH709y5+
dE/xQ/ND80PzQ/ND8+OV43553gvjBz80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/uqf4ofmh
+aH50T3FD80PzQ/ND82P7il+aH5ofmh+aH5ofmh+aH5ofnRP8UPzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND86N7ih+aH5ofmh+aH91T/ND80Pzo71386J7ih+aH
5ofmh+aH5sfBr73gzDfO+kP90PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oie4ofmh+aH5kf3
FD80PzQ/ND80P7qn+KH5ofmh+aH5ofmh+aH5ofnRPcUPzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND82P7il+aH5ofmh+aH50T/FD80Pzo7938aN7ih+aH5ofmh+a
H5of154/5ZQ9l79YPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND+6p/ih+aH5ofnRPcUPzQ/N
D80PzY/uKX5ofmh+aH5ofmh+aH5ofmh+dE/xQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80Pzo3uKH5ofmh+aH5of3VP80PzQ/OjvXfzonuKH5ofmh+aH5ofmxyZb
bTHjqN0GPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND+6p/ih+aH5ofnRPcUPzQ/ND80PzY/u
KX5ofmh+aH5ofmh+aH5ofmh+dE/xQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
o3uKH5ofmh+aH5of3VP80PzQ/OjvXfzonuKH5ofmh+aH5ofmx1H/8/ARF170
Qv3Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND86J7ih+aH5ofmR/cUPzQ/ND80PzQ/uqf4ofmh
+aH5ofmh+aH5ofmh+dE9xQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY/uKX5o
fmh+aH5ofnRP8UPzQ/Ojv3fxo3uKH5ofmh+aH5ofmh937T730JtWPV8/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80P7qn+KH5ofmh+dE9xQ/ND80PzQ/Nj+4pfmh+aH5ofmh+
aH5ofmh+aH50T/FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oje4ofmh+aH5of
mh/dU/zQ/ND86O9d/Oie4ofmh+aH5ofmh+bHW5dMO+iJAwc/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80P7qn+KH5ofmh+dE9xQ/ND80PzQ/Nj+4pfmh+aH5ofmh+aH5ofmh+
aH50T/FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oje4ofmh+aH5ofmh/dU/zQ
/ND86O9d/Oie4ofmh+aH5ofmh+bHfx49ZYdxhzxXPzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND+6p/ih+aH5ofnRPcUPzQ/ND80PzY/uKX5ofmh+aH5ofmh+aH5ofmh+dE/x
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pzo3uKH5ofmh+aH5of3VP80PzQ/Ojv
XfzonuKH5ofmh+aH5ofmx5wZX/3IcWOerR+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of3VP8
0PzQ/ND86J7ih+aH5ofmh+ZH9xQ/ND80PzQ/ND80PzQ/ND80P7qn+KH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+dE9xQ/ND80PzQ/Nj+4pfmh+aH709y5+dE/x
Q/ND80PzQ/ND8+PUE245/s7FT9cPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj+4pfmh+aH5o
fnRP8UPzQ/ND80Pzo3uKH5ofmh+aH5ofmh+aH5ofmh/dU/zQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzonuKH5ofmh+aH5kf3FD80PzQ/+nsXP7qn+KH5ofmh
+aH5oft+1MmrvvaGWSuH96PSfT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej
0n0/Kt33o9J9Pyrd96PSfT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej0n0/
Kt33o9J9Pyrd96PSfT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej0n0/Kt33
o9J9Pyrd96PSfT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej0n0/Kt33o9J9
Pyrd96PSfT8q3fej0n0/Kt33o9J9P8qevB+V7vtR6b4fle77Ufbk/ah0349K
9/2odN+PSvf9KHvyflS670el+35Uuu9Hpft+VLrvR6X7flS670el+36UPXk/
Kt33o9J9Pyrd96PSfT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej0n0/yp68
H5Xu+1Hpvh+V7vtR6b4fZU/ej0r3/ah034/ye+f9KHvyflS670el+35Uuu9H
pft+VJof/3ja2xYeudtT9UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oje4ofmh+aH5of3VP8
0PzQ/ND80PzonuKH5ofmh+aH5ofmh+aH5ofmR/cUPzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80P7qn+KH5ofmh+aH50T3FD80PzY/+3sWP7il+aH5ofmh+aH5o
fmx66YLLb1z1ZP3Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND86J7ih+aH5ofmR/cUPzQ/ND80
PzQ/uqf4ofmh+aH5ofmh+aH5ofmh+dE9xQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzY/uKX5ofmh+aH5ofnRP8UPzQ/Ojv3fxo3uKH5ofmh+aH5ofmh9rv7Xi
jg3nP1E/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80P7qn+KH5ofmh+dE9xQ/ND80PzQ/Nj+4p
fmh+aH5ofmh+aH5ofmh+aH50T/FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oj
e4ofmh+aH5ofmh/dU/zQ/ND86O9d/Oie4ofmh+aH5ofmh+bHM1ds8fhh0x+v
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh/dU/zQ/ND80PzonuKH5ofmh+aH5kf3FD80PzQ/
ND80PzQ/ND80PzQ/uqf4ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH50T3FD80P
zQ/ND82P7il+aH5ofvT3Ln50T/FD80PzQ/ND80PzY+m8/UdfveXv6ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/uqf4ofmh+aH5ofnRPcUPzQ/ND80PzQ/N
D80PzQ/Nj+4pfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRP8UPzQ/ND80Pz
o3uKH5ofmh/9vYsf3VP80PzQ/ND80PzQvV/yvX8bv84Dvx3ul6R7vyTd+yXp
3i9J935JuvdL0r1fku79knTvl6R7vyTd+yXp3i9J935JuvdL0r1fku79knTv
l6R7vyTd+yXp3i9J935JuvdL0r1fku79knTvl6R7vyTd+yXp3i9J935JuvdL
0r1fku79knTvl6R7vyTd+yXp3i9J935JuvdL0r1fku79knTvl6R7vyTd+yXp
3i9J935JuvdL0r1fku79knTvl6R7vyTd+yXp3i9J935JuvdL7Mn9knTvl6R7
vyTd+yX25H5JuvdL0r1fku79knTvl9iT+yXp3i9J935JuvdL0r1fku79knTv
l6R7vyTd+yX25H5JuvdL0r1fku79knTvl6R7vyTd+yXp3i9J935JuvdL0r1f
ku79knTvl9iT+yXp3i9J935JuvdL0r1fYk/ul6R7vyTd+yV+79wvsSf3S9K9
X5Lu/ZJ075eke78kzY/rr1q4z5Q5j9UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj+4pfmh+
aH5ofnRP8UPzQ/ND80Pzo3uKH5ofmh+aH5ofmh+aH5ofmh/dU/zQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzonuKH5ofmh+aH5kf3FD80PzQ/+nsXP7qn+KH5
ofmh+aH5oflxxbXPfGbeXsvrh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kf3FD80PzQ/ND+6
p/ih+aH5ofmh+dE9xQ/ND80PzQ/ND80PzQ/ND82P7il+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+dE/xQ/ND80PzQ/Oje4ofmh+aH/29ix/dU/zQ/ND80PzQ
/ND82Prz79t81dpH6ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/uqf4ofmh
+aH5ofnRPcUPzQ/ND80PzQ/ND80PzQ/Nj+4pfmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofnRP8UPzQ/ND80Pzo3uKH5ofmh/9vYsf3VP80PzQ/ND80PzQ/X73
xAUfu+jY3wzf76b7/W663++m+/1uut/vpvv9brrf76b7/W663++m+/1uut/v
pvv9brrf76b7/W663++m+/1uut/vpvv9brrf76b7/W663++m+/1uut/vpvv9
brrf76b7/W663++m+/1uut/vpvv9brrf76b7/W663++m+/1uut/vpvv9brrf
76b7/W663++m+/1uut/vpvv9brrf76b7/W663++m+/1uut/vpvv9brrf76b7
/W663++m+/1uut/vpvv9rj35fjfd73fT/X433e937cn3u+l+v5vu97vpfr+b
7ve79uT73XS/3033+910v99N9/vddL/fTff73XS/3033+1178v1uut/vpvv9
brrf76b7/W663++m+/1uut/vpvv9brrf76b7/W663++m+/2uPfl+N93vd9P9
fjfd73fT/X7Xnny/m+73u+l+v+v3zve79uT73XS/3033+910v99N9/vdND8e
Pn2LS3dbvrR+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRP8UPzQ/ND86N7ih+aH5ofmh+a
H91T/ND80PzQ/ND80PzQ/ND80PzonuKH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+ZH9xQ/ND80PzQ/ND+6p/ih+aH50d+7+NE9xQ/ND80PzQ/ND82P/W7a+gvL
D3ywfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH50T/FD80PzQ/Oje4ofmh+aH5ofmh/dU/zQ
/ND80PzQ/ND80PzQ/ND86J7ih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR/cU
PzQ/ND80PzQ/uqf4ofmh+dHfu/jRPcUPzQ/ND80PzQ/Nj21/PPv6WbfdVz80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/uqf4ofmh+aH50T3FD80PzQ/ND82P7il+aH5ofmh+
aH5ofmh+aH5ofnRP8UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND86N7ih+aH5of
mh+aH91T/ND80Pzo71386J7ih+aH5ofmh+aH5sfIu//08nY7/Kp+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofnRP8UPzQ/ND86N7ih+aH5ofmh+aH91T/ND80PzQ/ND80PzQ
/ND80PzonuKH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/ND+6
p/ih+aH50d+7+NE9xQ/ND80PzQ/ND82PZfd94t13X76kfmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH50T/FD80PzQ/Oje4ofmh+aH5ofmh/dU/zQ/ND80PzQ/ND80PzQ/ND8
6J7ih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR/cUPzQ/ND80PzQ/uqf4ofmh
+dHfu/jRPcUPzQ/ND80PzQ/Nj+Nu/PorK8Yvrh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
3VP80PzQ/ND86J7ih+aH5ofmh+ZH9xQ/ND80PzQ/ND80PzQ/ND80P7qn+KH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+dE9xQ/ND80PzQ/Nj+4pfmh+aH709y5+
dE/xQ/ND80PzQ/ND8+NtP/vs6duvv6h+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRP8UPz
Q/ND86N7ih+aH5ofmh+aH91T/ND80PzQ/ND80PzQ/ND80PzonuKH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/ND+6p/ih+aH50d+7+NE9xQ/N
D80PzQ/ND82P5Usnr3vCylvrh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kf3FD80PzQ/ND+6
p/ih+aH5ofmh+dE9xQ/ND80PzQ/ND80PzQ/ND82P7il+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+dE/xQ/ND80PzQ/Oje4ofmh+aH/29ix/dU/zQ/ND80PzQ
/ND8mHfRHjedctEP6ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/uqf4ofmh
+aH5ofnRPcUPzQ/ND80PzQ/ND80PzQ/Nj+4pfmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofnRP8UPzQ/ND80Pzo3uKH5ofmh/9vYsf3VP80PzQ/ND80PzQ/Lhy
p2d2fdPC+fVD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pzo3uKH5ofmh+aH91T/ND80PzQ/ND8
6J7ih+aH5ofmh+aH5ofmh+aH5kf3FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND+6p/ih+aH5ofmh+dE9xQ/ND82P/t7Fj+4pfmh+aH5ofmh+aH48+ufl7znp
5Avqh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5kf3FD80PzQ/ND+6p/ih+aH5ofmh+dE9xQ/N
D80PzQ/ND80PzQ/ND82P7il+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+dE/x
Q/ND80PzQ/Oje4ofmh+aH/29ix/dU/zQ/ND80PzQ/ND8OPHP+7xnz3+5YDI/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80P7qn+KH5ofmh+dE9xQ/ND80PzQ/Nj+4pfmh+aH5o
fmh+aH5ofmh+aH50T/FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oje4ofmh+a
H5ofmh/dU/zQ/ND86O9d/Oie4ofmh+aH5ofmh+bHYTffO3vmwvn1Q/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND86N7ih+aH5ofmh/dU/zQ/ND80PzQ/Oie4ofmh+aH5ofmh+aH
5ofmh+ZH9xQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/uqf4ofmh+aH5ofnR
PcUPzQ/Nj/7exY/uKX5ofmh+aH5ofmh+HHTDRkcuuOgH9UPzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/Oje4ofmh+aH5of3VP80PzQ/ND80PzonuKH5ofmh+aH5ofmh+aH5ofm
R/cUPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P7qn+KH5ofmh+aH50T3FD80P
zY/+3sWP7il+aH5ofmh+aH5ofry43zUT5qy8tX5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
dE/xQ/ND80Pzo3uKH5ofmh+aH5of3VP80PzQ/ND80PzQ/ND80PzQ/Oie4ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5kf3FD80PzQ/ND80P7qn+KH5ofnR37v4
0T3FD80PzQ/ND80PzY93T3rku+9ff1H90PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oie4ofm
h+aH5kf3FD80PzQ/ND80P7qn+KH5ofmh+aH5ofmh+aH5ofnRPcUPzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND82P7il+aH5ofmh+aH50T/FD80Pzo7938aN7ih+a
H5ofmh+aH5ofX3rHBtv8Zfzi+qH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRPcUPzQ/ND82P
7il+aH5ofmh+aH50T/FD80PzQ/ND80PzQ/ND80Pzo3uKH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH91T/ND80PzQ/ND86J7ih+aH5kd/7+JH9xQ/ND80PzQ/
ND80P6afe8mSpZcvqR+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of3VP80PzQ/ND86J7ih+aH
5ofmh+ZH9xQ/ND80PzQ/ND80PzQ/ND80P7qn+KH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+dE9xQ/ND80PzQ/Nj+4pfmh+aH709y5+dE/xQ/ND80PzQ/ND8+Or
Z048d6cdflU/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P7qn+KH5ofmh+dE9xQ/ND80PzQ/N
j+4pfmh+aH5ofmh+aH5ofmh+aH50T/FD80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/Oje4ofmh+aH5ofmh/dU/zQ/ND86O9d/Oie4ofmh+aH5ofmh+bHgtMW7Xf+
bffVD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzY/uKX5ofmh+aH50T/FD80PzQ/ND86N7ih+a
H5ofmh+aH5ofmh+aH5of3VP80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND86J7i
h+aH5ofmh+ZH9xQ/ND80P/p7Fz+6p/ih+aH5ofmh+aH5ce8Jh6737IEP1g/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND82P7il+aH5ofmh+dE/xQ/ND80PzQ/Oje4ofmh+aH5of
mh+aH5ofmh+aH91T/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oie4ofmh+aH
5ofmR/cUPzQ/ND/6exc/uqf4ofmh+aH5ofmh+fHJXQ/6232XL60fmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH91T/ND80PzQ/Oie4ofmh+aH5ofmR/cUPzQ/ND80PzQ/ND80
PzQ/ND+6p/ih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRPcUPzQ/ND80PzY/u
KX5ofmh+9PcufnRP8UPzQ/ND80PzQ/PjrIm/f+7KY39TPzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND+6p/ih+aH5ofnRPcUPzQ/ND80PzY/uKX5ofmh+aH5ofmh+aH5ofmh+
dE/xQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pzo3uKH5ofmh+aH5of3VP80PzQ
/OjvXfzonuKH5ofmh+aH5ofmx/0X3Hz/iBGP1g/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82P
7il+aH5ofmh+dE/xQ/ND80PzQ/Oje4ofmh+aH5ofmh+aH5ofmh+aH91T/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oie4ofmh+aH5ofmR/cUPzQ/ND/6exc/
uqf4ofmh+aH5ofmh+fHkeV+5bv5ey+uH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR/cUPzQ/
ND80P7qn+KH5ofmh+aH50T3FD80PzQ/ND80PzQ/ND80PzY/uKX5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH50T/FD80PzQ/ND86N7ih+aH5of/b2LH91T/ND8
0PzQ/ND80PxYc85HLzhkzmP1Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND86N7ih+aH5ofmh/d
U/zQ/ND80PzQ/Oie4ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/uqf4ofmh+aH5ofnRPcUPzQ/Nj/7exY/uKX5ofmh+aH5o
fmh+bHj2W45b/4Hf1g/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82P7il+aH5ofmh+dE/xQ/ND
80PzQ/Oje4ofmh+aH5ofmh+aH5ofmh+aH91T/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/Oie4ofmh+aH5ofmR/cUPzQ/ND/6exc/uqf4ofmh+aH5ofmh+TF2
1soDF275u/qh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH50T3FD80PzQ/Nj+4pfmh+aH5ofmh+
dE/xQ/ND80PzQ/ND80PzQ/ND86N7ih+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh/dU/zQ/ND80PzQ/Oie4ofmh+ZHf+/iR/cUPzQ/ND80PzQ/ND8mnnH9u6ZP
f7x+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofnRP8UPzQ/ND86N7ih+aH5ofmh+aH91T/ND8
0PzQ/ND80PzQ/ND80PzonuKH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/
ND80PzQ/ND+6p/ih+aH50d+7+NE9xQ/ND80PzQ/ND82PPU89Y+Mx85+oH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh/dU/zQ/ND80PzonuKH5ofmh+aH5kf3FD80PzQ/ND80
PzQ/ND80PzQ/uqf4ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH50T3FD80PzQ/N
D82P7il+aH5ofvT3Ln50T/FD80PzQ/ND80Pz46MnfeDZW1c9WT80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/uqf4ofmh+aH50T3FD80PzQ/ND82P7il+aH5ofmh+aH5ofmh+
aH5ofnRP8UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND86N7ih+aH5ofmh+aH91T
/ND80Pzo71386J7ih+aH5ofmh+aH5selH1s08tjdnqofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH91T/ND80PzQ/Oie4ofmh+aH5ofmR/cUPzQ/ND80PzQ/ND80PzQ/ND+6
p/ih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRPcUPzQ/ND80PzY/uKX5ofmh+
9PcufnRP8UPzQ/ND80PzQ/d+4pTzl7951srhfmK69xPTvZ+Y7v3EdO8npns/
Md37ieneT0z3fmK69xPTvZ+Y7v3EdO8npns/Md37ieneT0z3fmK69xPTvZ+Y
7v3EdO8npns/Md37ieneT0z3fmK69xPTvZ+Y7v3EdO8npns/Md37ieneT0z3
fmK69xPTvZ+Y7v3EdO8npns/Md37ieneT0z3fmK69xPTvZ+Y7v3EdO8npns/
Md37ieneT0z3fmK69xPTvZ+Y7v3EdO8npns/0Z7cT0z3fmK69xPTvZ9oT+4n
pns/Md37ieneT0z3fqI9uZ+Y7v3EdO8npns/Md37ieneT0z3fmK69xPTvZ9o
T+4npns/Md37ieneT0z3fmK69xPTvZ+Y7v3EdO8npns/Md37ieneT0z3fqI9
uZ+Y7v3EdO8npns/Md37ifbkfmK69xPTvZ/o9879RHtyPzHd+4np3k9M935i
uvcT0/y49cOH3vKzxU/XD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY/uKX5ofmh+aH50T/FD
80PzQ/ND86N7ih+aH5ofmh+aH5ofmh+aH5of3VP80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND86J7ih+aH5ofmh+ZH9xQ/ND80P/p7Fz+6p/ih+aH5ofmh+aF7
f3f/8ZedNObZ4f5uuvd3072/m+793XTv76Z7fzfd+7vp3t9N9/5uuvd3072/
m+793XTv76Z7fzfd+7vp3t9N9/5uuvd3072/m+793XTv76Z7fzfd+7vp3t9N
9/5uuvd3072/m+793XTv76Z7fzfd+7vp3t9N9/5uuvd3072/m+793XTv76Z7
fzfd+7vp3t9N9/5uuvd3072/m+793XTv76Z7fzfd+7vp3t9N9/5uuvd3072/
m+793XTv76Z7f9ee3N9N9/5uuvd3072/a0/u76Z7fzfd+7vp3t9N9/6uPbm/
m+793XTv76Z7fzfd+7vp3t9N9/5uuvd3072/a0/u76Z7fzfd+7vp3t9N9/5u
uvd3072/m+793XTv76Z7fzfd+7vp3t9N9/6uPbm/m+793XTv76Z7fzfd+7v2
5P5uuvd3072/6/fO/V17cn833fu76d7fTff+brr3d9P8eHzfP5y67SHP1Q/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND82P7il+aH5ofmh+dE/xQ/ND80PzQ/Oje4ofmh+aH5of
mh+aH5ofmh+aH91T/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oie4ofmh+aH
5ofmR/cUPzQ/ND/6exc/uqf4ofmh+aH5ofmh+bHXPyw48akDn68fmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH91T/ND80PzQ/Oie4ofmh+aH5ofmR/cUPzQ/ND80PzQ/ND80
PzQ/ND+6p/ih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRPcUPzQ/ND80PzY/u
KX5ofmh+9PcufnRP8UPzQ/ND80PzQ/PjqflP/+utqwY/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80P7qn+KH5ofmh+dE9xQ/ND80PzQ/Nj+4pfmh+aH5ofmh+aH5ofmh+aH50
T/FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oje4ofmh+aH5ofmh/dU/zQ/ND8
6O9d/Oie4ofmh+aH5ofmh+bHuWPfNvsbF71QP/T/dnX3oKPPYRiHLUoslI4S
SknCciiDkpSXZLA4gxMWxdmwIZtkIS+L4aS8xKKYFItkMhlEOrJgQDLg8e4g
uq/7n2f8rL+6f9f09OWH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kf3FD80PzQ/ND+6p/ih+aH5
ofmh+dE9xQ/ND80PzQ/ND80PzQ/ND82P7il+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+dE/xQ/ND80PzQ/Oje4ofmh+aH/3fxY/uKX5ofmh+aH5ofmh+XPH0
vc/dd80P9UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oje4ofmh+aH5of3VP80PzQ/ND80Pzo
nuKH5ofmh+aH5ofmh+aH5ofmR/cUPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
P7qn+KH5ofmh+aH50T3FD80PzY/+7+JH9xQ/ND80PzQ/ND9034865ZUXb/z8
wA/d96PSfT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej0n0/Kt33o9J9Pyrd
96PSfT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej0n0/Kt33o9J9Pyrd96PS
fT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q
3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej
0n0/Kt33o+zJ+1Hpvh+V7vtR6b4fZU/ej0r3/ah0349K9/2odN+PsifvR6X7
flS670el+35Uuu9Hpft+VLrvR6X7flS670fZk/ej0n0/Kt33o9J9Pyrd96PS
fT8q3fej0n0/Kt33o9J9Pyrd96PSfT8q3fej7Mn7Uem+H5Xu+1Hpvh+V7vtR
9uT9qHTfj0r3/Sj/O+9H2ZP3o9J9Pyrd96PSfT8q3fej0vx4+IEvXjv/sR/r
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5kf3FD80PzQ/ND+6p/ih+aH5ofmh+dE9xQ/ND80P
zQ/ND80PzQ/ND82P7il+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+dE/xQ/ND
80PzQ/Oje4ofmh+aH/3fxY/uKX5ofmh+aH5ofmh+/PfdL5n6ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+dE9xQ/ND80PzY/uKX5ofmh+aH5ofnRP8UPzQ/ND80PzQ/ND80Pz
Q/Oje4ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of3VP80PzQ/ND80PzonuKH
5ofmR/938aN7ih+aH5ofmh+aH/r/9+ez7s9n3Z/Puj+fdX8+6/581v35rPvz
Wffns+7PZ92fz7o/n3V/Puv+fNb9+az781n357Puz2fdn8+6P591fz7r/nzW
/fms+/NZ9+ez7s9n3Z/Puj+fdX8+6/581v35rPvzWffns+7PZ92fz7o/n3V/
Puv+fNb9+az781n357Puz2fdn8+6P591fz7r/nzW/fms+/NZ9+ez7s9n3Z/P
uj+fdX8+6/581v35rPvzWffns+7PZ92fz7o/n3V/Puv+fNb9+az781n357Pu
z2fdn8+6P591fz7r/nzW/fms+/NZ9+ez7s9n3Z/Puj+fdX8+6/581v35rPvz
Wffns+7PZ92fz7o/n3V/Puv+fNb9+az781n357Puz2fdn8+6P591fz7r/nzW
/fms+/NZ9+ez7s9n3Z/Puj8/8OPozZe98+L9P9UPzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
j+4pfmh+aH5ofnRP8UPzQ/ND80Pzo3uKH5ofmh+aH5ofmh+aH5ofmh/dU/zQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzonuKH5ofmh+aH5kf3FD80PzQ/+r+L
H91T/ND80PzQ/ND80Pz46+1j7z949s/1Q/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND86N7ih+a
H5ofmh/dU/zQ/ND80PzQ/Oie4ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/uqf4ofmh+aH5ofnRPcUPzQ/Nj/7v4kf3FD80
PzQ/ND80PzQ/Xrr01Q9vfevAD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY/uKX5ofmh+aH50
T/FD80PzQ/ND86N7ih+aH5ofmh+aH5ofmh+aH5of3VP80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND86J7ih+aH5ofmh+ZH9xQ/ND80P/q/ix/dU/zQ/ND80PzQ
/ND8uOH4l59dfMcv9UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oje4ofmh+aH5of3VP80PzQ
/ND80PzonuKH5ofmh+aH5ofmh+aH5ofmR/cUPzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80P7qn+KH5ofmh+aH50T3FD80PzY/+7+JH9xQ/ND80PzQ/ND80P745
48KvTv594Ifmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/uqf4ofmh+aH5ofnR
PcUPzQ/ND80PzQ/ND80PzQ/Nj+4pfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fnRP8UPzQ/ND80Pzo3uKH5ofmh/938WP7il+aH5ofmh+aH5ofjz5yF3ff/Ty
r/VD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80Pzo3uKH5ofmh+aH91T/ND80PzQ/ND86J7ih+aH
5ofmh+aH5ofmh+aH5kf3FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND+6p/ih
+aH5ofmh+dE9xQ/ND82P/u/iR/cUPzQ/ND80PzQ/ND8Of3f8j9du+q1+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofnRP8UPzQ/ND86N7ih+aH5ofmh+aH91T/ND80PzQ/ND8
0PzQ/ND80PzonuKH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/
ND+6p/ih+aH50f9d/Oie4ofmh+aH5ofmh+bHx3eeOPXRbw/80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/Oie4ofmh+aH5kf3FD80PzQ/ND80P7qn+KH5ofmh+aH5ofmh+aH5
ofnRPcUPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82P7il+aH5ofmh+aH50T/FD
80Pzo/+7+NE9xQ/ND80PzQ/ND82Phz44dObRp36vH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh/dU/zQ/ND80PzonuKH5ofmh+aH5kf3FD80PzQ/ND80PzQ/ND80PzQ/uqf4
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH50T3FD80PzQ/ND82P7il+aH5ofvR/
Fz+6p/ih+aH5ofmh+aH5cd61t517+Mo/6ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/
ND80PzQ/uqf4ofmh+aH5ofnRPcUPzQ/ND80PzQ/ND80PzQ/Nj+4pfmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofnRP8UPzQ/ND80Pzo3uKH5ofmh/938WP7il+
aH5ofmh+aH5ofrz7xjMXnfbJgR+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of3VP80PzQ/ND8
6J7ih+aH5ofmh+ZH9xQ/ND80PzQ/ND80PzQ/ND80P7qn+KH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+dE9xQ/ND80PzQ/Nj+4pfmh+aH70fxc/uqf4ofmh+aH5
ofmh+XH7vz/ih/+sH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh/dU/zQ/ND80PzonuKH5ofm
h+aH5kf3FD80PzQ/ND80PzQ/ND80PzQ/uqf4ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH50T3FD80PzQ/ND82P7il+aH5ofvR/Fz+6p/ih+aH5ofmh+aH5cfLQ
85e/ecHJ+qH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRPcUPzQ/ND82P7il+aH5ofmh+aH50
T/FD80PzQ/ND80PzQ/ND80Pzo3uKH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H91T/ND80PzQ/ND86J7ih+aH5kf/d/Gje4ofmh+aH5ofmh+aHy88/ulVT7x3
4Ifmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/uqf4ofmh+aH5ofnRPcUPzQ/N
D80PzQ/ND80PzQ/Nj+4pfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRP8UPz
Q/ND80Pzo3uKH5ofmh/938WP7il+aH5ofmh+aH5oflz/6znX3X3PX/VD80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80Pzo3uKH5ofmh+aH91T/ND80PzQ/ND86J7ih+aH5ofmh+aH
5ofmh+aH5kf3FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND+6p/ih+aH5ofmh
+dE9xQ/ND82P/u/iR/cUPzQ/ND80PzQ/ND++PnbklqtP/7t+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofnRP8UPzQ/ND86N7ih+aH5ofmh+aH91T/ND80PzQ/ND80PzQ/ND8
0PzonuKH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/ND+6p/ih
+aH50f9d/Oie4ofmh+aH5ofmh+bHEyeePXLW6wd+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fnRP8UPzQ/ND86N7ih+aH5ofmh+aH91T/ND80PzQ/ND80PzQ/ND80PzonuKH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH9xQ/ND80PzQ/ND+6p/ih+aH50f9d
/Oie4ofmh+aH5ofmh+bHP0fq4uY=
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxMnXm8lmPX/vc93/eOUiIiMmXKlCmiSEWUKENISNJAmaJEJQ0UiQZRyJQx
lJlSppB5zPCYZ5nn2Xt+3/W9P3v/sT7nudY61rHWed3Xvs6Dx/v7bdRvWM+h
2Zqamsu61dTk0joz2R/JZiUbkIzcCTWRwz/RPWvefdZck2RnJlszWSVZOdlJ
1oPJiMN/Ro6B8gxONiRZybXsviLHya5l84OSFawf6B6eovtB7gfLQ/3QZLXJ
Tk92RrI1kq2WrEGyYe5PSba666nuVzNP7MJkrZJt5mwnyzlMnqFaA+NwNJSH
no3tO9w9sUbOtIbPsLH5RtaepjWUr5E+NZOd50LPO8gz8zuc5W+xVrIRyUZq
Zydb27WZ+7XMrW1dU2vXSzYm2fpimso1wj3YUfLANzpZ82TnWtvcGBxj5Vmv
Xmwd689x30x/HWPr+kyGe6bzkrWQa1KyTZJNTLZBsnHJNkx2frKW7se7P9/8
+cYv8JltJlcLZ9vAHuPct9DfSB74NrXvJPeT5JtofGPjF8hP7QTjG8kxQZto
fHN/R37Pq5LtlmxuTbzzL9XEe3Zxsi2TXZRsK/cX67PfItn0ZNsluyzZ9u6J
TRG3hTni29p3ivHN7Y+/TbJLxVxqzbZywjcj2SXJWifb2nmm1ttfrD9V3NZy
TpPv8mSzk+2k7WiM70+bZDsYY8+3aEVNfDO2yYTfRuxfyf6Wa4C4E51vpjzb
6+9gjx3rcT4rfmc5rjA20Pgg98/VxN/cGzXxdzfAeVZYt7Pn2MZnMk1r7fmf
kwfuK5PNSbZrsueTvVATf7PE2honNsT4IHHsX66J78vJ4naRb5A9npcDrur7
82JNvEO718R7dZX+y/LgX23+Rfu+YO0QY23lo76d+GuSXZusfbI9XfGvE0N+
j5r4Nr5aE9/Pq83tbvwVc1d6lit8llfoz5MDLr4pfE/WtW6oZ9hTzDx/I76R
r2vsX7PXUOvaO2MHc6c62zzn39OZXjO+fSZ+t+0y8U061xlOs8cb2sqaeDf2
TnZDshtr4rvFN/5NY+T2StY12X7Jbk92U7JOyfaR4wx5rrdmL+vPMD/fGvBv
18Q3+Ew5iN+c7C1zZ4rv6Dx7u3Z0trfE7GMM7DtyUv9eTXzX362Jb/7/auKe
6JKsc7JbtFuNjbAe3Jc18X2bYPwsc7dYe7Mz36z/rr3g3zfZbfWe0X76o8S8
5/79mvhNbrWmi73frcdzq7VfONMEz/6m54d/gb/J/u7vSPahv/UHxokdUBN3
17nmP3DPDNwTY5N9Isf+cr4vDsydcsD1UbKPa+IevCtZ92TdrB9rrru5hfb9
0LrRrmOsOUDuUT4bei5KdqC19yY7ONk9yXoYJ/9ZTd3d+Kn+OHN3i6X2vmQ9
nWeh9ec566fuP7WWuoOsHe9zn+D+c/2DnOVgeQ+2z3jn+VzM3eI+N/6Zs/Sy
jruIu+lXjf0vyR5Idkiy+2vifl5VE/dxL2PkHk52eLKHauLe+7Ym7r6vauK9
5V05zPzh8kw038s57rcWLfGNxv5r49/I+7VxZjjU/g/I+ZXz4T9o/jD39OYu
/aEm7tJHkh2ZbEmy72riTmfmxcmOSNbbdbGYb8WB4Z7i/uPO/N7a73wOi63t
7VkfrqnTFmCPsi/9f6yJO22qmO+d7wdzxPeqie/r9c6zpF79Uvke9JyHev6v
fT7k+4jhDv25JjTD0ckeTfaY1tcYmJ/E/eRszMG7wTvxm3Vgl8m9TJ935TL5
j0n2eLJjkz3hin9cvdh0+WY4wzHO8bNcVZ7HrP29JnQI+KeSPZ2sf7JtM6Fl
Lk3WL/lPJlteE//sNdO6J4zTv5/54z3vJZ61j8+L8/RNXH/Kcb3P/zo5+snz
lBxw8R7wPlCzwpme9Xy/OzNx5iT3h9hZrpe77y8n3HyzxtbEd4ma7eTsl9Z/
mSETGgWtwr3KPf9PTdz//7r+Y/5ZMegO/uERnbJjJvRIG2v/Fs+KzzsO/w6Z
0DD/1UR9VQ/9J1dGvhr54N0pE7jqLM/bfwdn/08e/Dbyo6OoQ4egGXbNhG5g
j9bYxV7ZTGgfsDuLJ4auIU4M/Mv6zJZxNmroc401uUzwvmIdcWLz7EuOOfLG
cu4LmdA3GHFi3IsN09ooWdtM6Bnmfy/9A/vZyd7NxlmZg/PCcZ0cpUy8Z8VM
6J/d0rp7JjTL9ebx22XqNNLr4rh398yExrhOjuvNgWEW6svy7ZGJ+xou9Esl
E1rlLXNw1Rqr2HOlPdtZi1+2/gZ/q7b+XtQ2yIR+Wj0TzwTdQAx9Qhzt0iH5
e2VixW9vHtxqPhueUVGu+XIzX3vP295a9tRShybaOxN3N9qFHvjsmeOWenPd
Zux/4t41d4tc7xgnD1/HtN/HOn5n9E6PtB6Uie8uGPJohjXS2jgT+qVTpk7j
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
8rwjDz2pGynu3WSfZ+JO/SwT3Dyvxtm4Vz8z91EmtMS5/u5oo/eSrZkN7dPE
mib65N4XCyc5tNkC93eYPydTp4HwP0j2oX3YN03YtbKhWd6zLzPfZW/y6Kk7
9Inf6f5cuT7yebxrPXzoITRQs7RfJxs6hHhVH60thtgnmdAvH2dCjzQTP8bY
WOOLrBttfIxxYtSAg+tTjedb1U+f+qw/9jkzM7oFXbSuM7K/R+x59l3XOPnm
ydbLRt195oj9nIl78adM5NEbaJUvMqEfxrvifynmfjlWZeK7wvdlg2zokAd9
Z76wdrzvyOfm4F8/GzXooa+0VZm67xT7r+VEtzzkDF9as75zMstXxr6Un1yL
bOgTajfMhn5AS2yc9htlY49m+SYT+oNei8W2zEaM3LfGiS1xtq+t2dDZmBHc
ZOMt7bHE+inmNrYvuSnmvkv2fSa00Xdiv9Mv+b0tOv8m2dA5nI2enHWpvOQu
kuuHTNyl3KmbZ0OzEPsxE7oX3bKpcWLomQuTP1lNDJbcxfbc1L6PWv+YNT/6
zhyZDQ21JBv96NvKOmqo/VXcb+bAPGb9tEydHoPnSHm2yMY58I+ytq93B9qD
GLqFOJqFfZ9saCNqt9S2MtZH/FGe8WKfM1qI/FbeQdf77Lew7gn5qT9aYw5m
2DobmucpMUcbf9pca/uzf0rccnuhbTjLMXKARRMRPzYbWuXJtPZLdlyybZJt
m417/lhjYIihR4gTQ9cQ5y4elI33p382dEWN9fTZxhnof6wccG2XDT1D3+Oz
oYPQRtvr95cHfwfz/ex7nLX/GoMTPuqJH28tmojaNtnQIztnQz8QJ4ZOQf8M
yIb2YH+C/o7mwXFHcXd1cBbqmecEz9vf2oz19KIWDp4P+magxv7EbMwCbidn
wkfjnCgm5ww7iRtgHXHm2Mu5tvfc29lroL8HNtjfBc2ya1rbZkOr8N4NyUaM
XFWP0X+XFNs9W6dHBouHZxdrwA4xTn43a8CfnA2dUpGDeLtkJ2UjVxGPrmpr
/7b6ZXEVe73icxkqJ/WnZkM/nJINrTIsG7oDDYMu2iMbtqexBtaDa2j9adbW
mqNupbXtrMc/xV7wo4HaZ+veg3f0G4o51T3cjexPDTMMc94qDzlqT8+GzgHf
LRt3S/X+w++e7AwxYNEOe2dDgzQ2Tv6sbGiNM7OhVzplQ3OA5z2hpqmYs3x3
yPH+nCY3M1CH/tnHtZN8neWr5unfMRszDM+G3uroXHsbP8PccOcCg67YNxv6
g/+9HU0yMhs640P7jDSO5hmhz55cF7HoLP4dGP8u7SM54W7q+UZ43hHW7msd
9WigUdnQKsyxX1q7ZmP9RC589A0+92TP5PeyltnOdn+2XGf6bKvPofr8zsnW
6SZ01f7Z0CfoodHZ0BXsz9U/wPz+4pmD/YHZ0B/dxcJ5jrXrGuO9oRYO7m70
yViN/Rjj52XjXv9SPnjHiFnPGbrJN9o64mglsMyC9jg/2fhs6JeDs/GM4B4n
P/qlR1oPsu9Y89RuaH1Xz8mzHuWZeFY9rF/lN4hvw25ybyj/+e7H2RudwywT
snX660C54GHWCcYPdu6D7HOQfkvPBIZvEd+4k+TnPaDHJvJPzMZ+UjY0CJro
kLQeqnH3fy9+oripyS7Jxj19eDY08U/Wge1ln176F2RDC8GPDjosG3hiaCk0
Dnpqc/c/iTncGahhDnpfUI+H3GFybGYOXbVRLp0tF3rm4mzohyPNPZJsSrKL
sqFZlmZDqxylv7n5FcmezcZd1dszHi7PI+KniJ9sbKnxqfakNxrn0WxooGX2
Wmp8mbktnedi1y2d5Wjx4L7h3bDX1vLT57FsaBL4l2dDR6CDjjX+eDa00rRs
aJhLXaeZO0aO1v6m01xb2weeJ7KhVY615gntSeOXZePe3tbzPOY825mbbt/L
xGxbb5bjnXm5eLBV7fRUNjTJ5dnQELOSzTA/3f3MbGiZHYzPsO5pa1lPcM/v
OdDflLo21s3Oxv28k32XyzHA2mfcr7B2gLEVcsx0tp2c83Ljs/Sfkedpc7PF
8o2+LRvf7J2NX5GNu+fGbHyD0T/PZ0OfsH9O/8psaAvw/G2/lA1dwf5F/Z3N
g7sqG9+euXIM9HkMcv+cdXwrXsiGlpmbrdNEu8nxvPnBzjAnG1pqV/tcaX6I
mJPcw41+eCXZq+5ZT3HWl50f3XJ1smvEDLXmanPMwruDJm9tDOwecgyV5ypr
drd+qPl5ya7Nhnah/2vOsKcc1Xx7Y3zz+E5OMLeH/ag71dq2Poe5rm19Hu3l
uk7sG9nQKdcnuyEb+mVlNjTG6fodzLe3Dp97mHdhvvVviL/e/HXGVhqfL553
6K1kb2dDvxC/ST78N83v7Tw3uu7tLMOd7U05zjTGf1+IZkDT/E+fPZrlHWNo
rJuzoXfeNkf9LcbIve5zqT7L1z3HO+LftvcZnq2T81M7wj70vTUbf0tdXPFv
E9vJ845y5vfEdXaWs+QZoX+ref4dGpqRf+91ezb+RuHsmE8c6W7ZO60fZ0MP
oC3ALMiGFvggGxpglLH968XPNVfVareLY673xVJzRzZ0C/gP3X9kr9HG8Lnn
v8jG+4neQffcKc8d+h/K84G5u8Teaf4OuT6W/+5saIkeYrtn63T8wmzoETTQ
p9nQLWPdE1tkHtwn5qrP6RNxPcQs0u7O1mks9vd4LrTR5/a9S87PjX8m12fO
8JnxcfLAgT7iPuL+3DT9ZvcaI8c9+0M27twHs6EjDvVZfunzRL/cl+z+bGgP
vgVfGSPXU+xE8fea6yluovleclR1FesD2oPGejobHF9nQ9NcYN9V7h+w9n5j
Xxsf73P5wnPA+ZBnRKN8B3c6f89caIjDzT+cDR8MumJxNrTOw1pvsczyjZjD
rCWOxkJrTchFjynysf/e/pvk4vkvleNC56aWHPEl+mioR9wv9fe5SK5N5aHm
YnPoH+6jHXJx5zwqbrNkP6b9T9nQMq1yoVse06eO/C/Jfs2GLsEuNUY9NY+K
m2o/Yo/Z5xfxP2dDC22RCz20ZS70w5PGN89Fbprz/Oxa1VlgHhc3zfyl8m0p
59ZpbZ0L/bBc/yn3W+XCRw/9lg3987vrb+aXO9d0z/ub63TP/ZSc8M+sx4H9
YexPV3xmQdOARwOx3yZXh0P3cLfukmK75iL3jHWb+1vwLGeJRxP95fqnv2cb
f9PtcqFN0Cp/Z0PPVHUS/j/Jts0F7ll5/hYzux43HNvngnt7OavcxHiPuLvR
L/96LuaGG/8/8/+K+ccZ/tFnXjTOC2KrWgBtQ3zHXOiRXC70w1xx/B/jZ3Kh
V9jPdb3KWup20nbORWyFZ+a8cIKFg28F351V1r3oXNShgV72d3nF32YX4zs7
QzZXp72Yc54rsaw8LztXvl5+mr8xvy/8/Obc6X3SenQu3hm0RTntK8kKudAs
aCPue+793XJh7NuaB1f0HWorZ1sx7MGQRweVXPHZ0wst0y4XGgL9sHraN8zF
Hb97LnIrnYHexN4wt9J5q5oIq/aBb4+07pkLrYJO6ZCL2Jv1epJHX9WmtUEu
9Ag48O3155t/S/zbxm40Tqy9cTjQPtStlovz4KNbbvZ8PN9a50bX7JULfcb+
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
RefA+a4xcldX0rtXm969ZB/mQnN8kAudBA4tgf5pnA89c7t7Yu+ZB7eG/NU+
+OBGiXlPez9Xp5/etxdaBi20Zj7u+c9ycdfjE28iVxNnaGL8Dnk+cO739UfJ
2TQfmgeNsXbaN8tHHN6m2lpi0D4fJftY/CJrPjKHlgJLHPyH4keLW2Se+k+s
4Sxj9bFPjY12XjjWyYemQQMxH/7d1o2xjlhVK22U9hvn4w79TD548ZeYR0es
n9YW+dBA4D5Ptp76Cx32RS500ucae7DMsq64cdYS5xvBt2JhPrTQffJh9EL/
9MiHXlklx73OTi054l/KhYb6yv0q52VueM5N+9HqxaoGOijte+VDh/TMh/+1
Pb8xf3CyDZJtmA8t01M8ugQf/bSBuJ7W4RNvYQws8ZZywLVYv/p8l+g/aB31
6KJD8qFb2NO3lxwt5fjeGLhD86FDfsjV+ey5c7ZN++3MH5bWw/OhGzbJh47Y
1BX/MHHUo0Fa5UN3HJEPLdLbWt6ZTXx3qroMLQM3WmUz69FOj+nDtbl87NEt
v8gNrjrLj/L8pL+ZeWK95af2yHzoE7TE0fnQEWiUPvnw6bVFPvQH2KPEE0OP
ECdGzW/6zLa5szHXkWKp2TIf3L9bR5xYVS/Rk1m2MkZu63zooqpe2soYd+PA
ZIOS9c2HzvnT58sz+Vm+vp6LGrQRXNyjx+dDJ2yTD73SOh9a6Ji0HpsP/UJ8
G/3jzD8t9hmx9O0rz7bWgeW+/sde7Pvlw/7N1XH9JQfvGO/Xc75r+FUeOMBu
bx7cf/Jxhh3yoanIoTvQKzuK3d48VtVr1PT37OgbdM4J5sG18TnxvFqby1jD
t4BvzXr6GXnoR9827nfKxywn+jvl5G8jbkA+clVtRo8B7gcYh+Nlz7SV785U
Y+R2TnaxMXLoCzTFbvbkvUA77ZJs13zomiH50AGD9dFPu4gbZA6f+M7GBhtv
aw1c6CT8ar/X9bnz2+fjnkcjnZQPncQevTVEjrZylI2dZL6oD+funumUfGgI
9MNQ+U7Oh06pNYZ2apcP/bOHazvzFTFvGKti8XeXZ5j8DcQO004xvqdnQ+uc
ZP+KMXLtxZCvarM9jDV0/lPzcZ+OyscddKpxeuyXj3t137SemQ89gKbokGyv
fOii09J6ej70DDE0DvEzjJ0ujmffwb70OE0sNfw3YOgWtBB1w+3XWKvGGloH
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
oe/CmcnOKgUWrg5iGjrn3nKQP6MU71Bj36mqljlTruHGyO1Tir6nW7eGa2Pf
RTjh7lQKLQUeXdKlFLpjX1d8tAoYsCNKoWma2msf688y19Tn18HzYG/7W1Df
WT6+Mc/6nWjiM1jTfFUfoYvO9jdiP1J/TfH0Qu9U513b2UbKAVcX/bWcj758
r561Zj85zvadoNc5vhv4+5dCv3QtxZ1/bil0y6fGyB1cinuYuxo90q0UOmUd
uc61R1fr1jEGH/gDSlFT1UZjknWXo5s+8dGlwKKvPtP2NzZaTHN9eMGtb/3Y
UuiHccnOT3ZeKTQK+uTAUmieqh7C7yGmhXNxj3BHTZXrPOPdrf/Kembubq8N
7Ie2OagUzwnjORHb0FnQNONLoWFaOksP68bJQ7+DjPXw+Y32vOdb39LfgR49
S6EbLizFnd6rFNqop30mlkLLoHeI99Invok8Pa2ZYM14eQ6xblIp9Mkm9mJ/
gcZ+knUT5EXToMW40w/Rh2eiWHgOM3+onBd4BuKHl0IDoR/QJUfogyffW/9w
ayaX6vQM+maKeXA/y3NUKTTJFDGT/Z239LeebBwe+v1iPfsjS8ExVfzF8vYW
d5GxLZ2BHhe5v8j4UXLAxf891er+7yO/ORs6gXvxymRzkh1dCr1CfFopNEZr
cX3MH5Ps2FJojhml+JufXop3mFkvMYcuOcb4JfL0kYveaJfLrGd/qf5l8lXj
25ijd1VPwTdNTmLk+jobfdnPKoV2QEv0S3Z8KXQJGgWtwuzomONKoWH6uR5n
fjsxaPopvsc7GJtpLc/hOJ8H/t9iZtqXnjX23cl5Ljc/S8zlxvH5hvEt28+a
6lw1cvX3vH0956U+n2liyKOnriiFNkGrDCiFnqlqJvwTk80WB2Yn55jtezC3
FHpkgHVVzXaCsV3l571BuwxMNkgrGGNfvduvkm+uM5wo5kp5rpAjby5TTn3L
oYHQD2iTV0qhR9Al15RCd8GLRhpSCu1Ssie9B5eivp2YnTzfzp4j4/MqiR3i
ueY4a9E4+ZPkH2Lvec7yaim0yjDnaetMr5gbJr6ds7ziWXYux7leEcP/TSX/
NwD83z/Cy39biVYqVdIcyQZXQg+9Xgr9wn1/XbLrtQ7GwLwm7t1S3M3/K4U2
WZnsTeva1+txrf4bpToNhR66oRQa5kZX/I71YmfIN9wZ9nKO1+Wq8lxv7Ur5
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
/2YlNMzNldAxN1VCY7zj87kx2fxK6BWwb4m/0Z43WNNR3Kued5jPaJ5noe5M
a/ku8H35Qx20t3wd5drHGd52js7OdrMzr3QW/FvMvy3/W9aeaWwfOannu8b3
qLW//0jPCEeXSp3GurUS2oM7/r1K6JaR7ondZh4c9/KiZHdXQpOgR+5I9q41
1T7vWr+ftXCgW9BGH2js3zf+YSV0ywL5upo7x3mov12+98yNEne7dQc4E/Xo
BvTKQrk/kh+dcmeyuyqhVdA5HxvrJsd3lbirvnW2D+pxjJHnDmsOsH6M+YU+
H/p/Vgmt86m9wH2ifWquu30XOtNC/bHizvN8XT37In8D+NEk4+yDjkD7fJXs
82RfmEfDoJfu0e41dr51n5vvYf5u1x5yoFXGux9v3ZfGiaGB7qvEHT7OeeG9
39h9Yu51f6/+wc7MvOidQ8RT97WxVckeSvZwJTQEuQfEYg9WQsc8qE/uAmvh
uFCf/UX+pt/Vq0EfoUsWV0K7fGXPSdZ+Uwmt8q21k4196/4hOR50xt7Oebjx
h+T52rre4uj3mv+9Fv+98RL7E+eby7d3u6QHfqiEPkH/fF8Jnz34RyqhL36u
hC7h7/wn/WnmjhC7LNmjlfgOXeQz+N7993LyrfhRDnB9rHtM/1HzU53jKGdY
6nqUPS8R86P7n5znt0poCHTVVrWhdy6uDa11ab1z4KNfjrH345XQOI8Z471B
j/PPAb/KCf6IxHVkbcSOFt/X+mOtRbfQl/7M83slNM1yZ0LTbF0b2og930a+
lXz3npDncWume6Y+nn2Zz2KZPnxby/lnJTTSH5XQM61TfJva0C2zzBMntsL9
0+J4H7avDd0yU45Z5p52Xur/qgQf7w3vz7a1oV3+rsSd/pw5uP4x9rc9t7Xv
ttaukG+2nOD/rYQGQjegUWpqwzK1ESM/Rwx6Bp3Tpjb8K+TAJ75DbZzld8/z
u2ebIQdc/9n/L+dk7h18DnPMM8dOtaFz0Dw71ob/kj3oBZ4Zr3b2F8W95Bnm
yvWi85G7tVVNTcPN053TKjQM/DvLka2Ne/4VY7skyyXL18bdv2ttaA90AT5Y
8tzJDWrjDkePoEuKtcEDx6virrEHsV2NgwNfqA1Ns1tt6CjipdrgI962NnLo
KuYpOFdVZ4F5Tdy18l0n3+5y7pHWPWtDV6A50B7takP3lGtDt1Rc8cmBoX6/
ZF1r497a3Tic1DJn2Xlv8Bm8aT961fqM0FQ36TdwFnQNGLQR+/a1gavO8qYz
woVfa5459nWutv4uPNPV/B0auF+9Nv7OO6R1r9rQMMT4uydODD3zP2foIGaf
2tAG74uDE753nLGDHHA1rA3dsndaO9bGnY6maaQP1/v6a5jf2757WfuuMTjh
u80+PBOeExqI2sa1oSXWTGtT48TQLOiYzrWhVdh3qg2/iXlwa9WGDmnqLNTf
LvYDz03tB8bQQdQ28bf/2OeOse9SG7MwU1V7NbVHFzEfWb+mfMzUxTnRPGCZ
69DauFu4gw7RZ49uWTvtm9WG/tg/rQfURuxuOdAf6ya/eW3c9eiY7r6zn/q+
kK/qlK5yfWpvuODpVhu16J//Y+K8478a3z9ORrz3CGVlb1mRzEh2kZVVIjJa
WkRSKqVQikQlIjuyysrO3nvvPbKivvbvfv6u53l8Pn9cj3Pf1/W6xjnv07mf
4fulB/tvrPWt8a+NfeNszHWPc31l7eb6VnNNb/rCCjDDwblgizXTda1knZId
5OywDjy0Ri4MDb7vnANt51zUuMe8742jJ3d173V192joi46+9HzAeaj1ozP9
oHaRe2LH5OI8PNpZ7nfGta2xlvfG/Tb3GRzgc4KJHlALj8Anh+aCh9bJBcOs
65U9MTSH2PsQZzvCd+Nwc1vmQt/SPX1+9r3hnVkv18Avj7hfXx9XznL45Vdr
o8tm+dkZqcV+PePou+SCZ2AZuAQmgRs2SuuNk22QbMNcMBXaI9VvYM/1jcMw
j3mf3O+PPiPu5/95Mxc9yOX7wHfkY3MetR41qJX1XugsR/t7LXFm7o9ZNlGD
9ijr0+ch7i8XeY97L9S5x3fs7lx8u/gm8W2Cfybkgk8m5oJXWB+bazjzubLv
qnaiGs7gy5NNTTYp2eRcsMkx5v/PfObHt6X1L8kFL8BD3XJhx+njCkewpt5W
1mQG+pNziXUmmvunsS2tzSxbm3upc27rrMfngnG6qyF+WS5YBv/x+vHBJn2S
9c3FWfW383V33d1al9prsvVPsN7l9p2SC3bpkQuWYY2G/Yn6ethzin2nmLuN
9cih5qxcnCW7er+TfD7LWod6J+WCTfDBJ/DPlRrrK4yj69koBz2scUqyU/1d
0bb2ur3rJubBQdNzcWZzXk9zz7qt/hnWyxhnB3VoTrZGT/1XGtvO3q3NYxYY
Ci7pnQt2aGvtq5KdlqxXLphlZi4YYyf3KxrPmdfHvB2dta01dlK3ov2ustZO
5qxsb9jlGp//1faaqf9qYys5T2+vGU/toj7TzbIO58rZyYbm4lvL2XN7Lrin
Xy5Y5XSv7K/NxTtAPn+GB+Tiz/RAr+x3V4P2+lzwyGxr9rVOX/c56/Q3d0/1
17u+IRcscbqaovWpfZ1rru2MFRppS/rOyAU3DM4Fuwx2z8yDcsEv9LnRXoPU
VfTtpZ/zaUSy83LBHvhvUpc9gz2d/QZrDLJfB7U3O8+ZueCYDvrgmFtywUOs
+Tbyd98J5u3lLHVnP8P7nu29z/a5tbPeLdY5KxdcMiQXjHtrsjm54JRVjO+r
bz/X+6jjfZibC1ZpZo1VjO1jD/LPth7vDe/Pbbl4r3inmlvndmudo2+oPW+z
723m7me91ayJflguuAdmgEuGayP0EV9dDUwD29zpvrk17tR/h/dypvdzpvu6
Nah1rs+d5/+Lc9/hc1jdOHNwnnGuwTl3uT9IbUf1zLiWc3ZSd5Dzr2GtTs5H
jO8S36zlzeNd4zxfPZ/4K13n54JnOFPnJRuZbFQuznti8MYh7tc2fn6yMbng
D2xdfZ2tcYi6te03z1qHqEM/Ohccc18u2On+XPDA4frvNbaO84z2mrHVYc52
r77R1r3PWv/PY7ngiC7aA8kedH2Ee7hnbC645QKvY40dYa31vd+xXtf3vh+0
B/U2bFQDG6eP60au0R7lTOvlg20eMo5ufLKncnF+nmDsKPO2K6QzNNnlhbjn
Q32mR6mDkX7Nxft1eD7eN/ZwxQT97I9R+0iyC3PBXnAX7AF3PJ7sIv0XqkPP
rMeaj4+zGj75TWO9WP/vueCHx6zX1dglzkP+o9b71dhEn8N45znOmR73WcAi
T1p7ifXRLMwFu8AbsMtSfcSesNZ472WSs2Y1LrXO42qPM/9S40/6e9D/j1ww
0BR7ofuf9of+J50zm2mh+8vUTfG3pebTyf60Jvlv5OKceT0XvPBXLjgFloFp
ntGe1TfVfHT8+ebP+fO5YI5/kv2r/kR79fDK/u9c8An14ZXnGuWf7J71C9ae
Zr3p9u/pDH9ZK6vzrLn/WJ/Yf7lgFHKb5IMXYAyYZNl8rOnxYi5YZZl86P9z
j/809TOMv2jOC871n/VfUvuierT0OM3Yy/ZsYl/2vczp7f4VrxnvTPU34lnD
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
j/xlC1Fv+0LwSet0Xa4QzNKkELyyg7/7TH3EyJvpLLwLKxTiTEb/qvVmqsvq
4NvBd4d3iBw4BX7ZMa1XtAZ+9vjbOA/6a3zn6L+c7yMaZnvTGm0LwRu7FIIf
WO9ciP1OheAUuKVpIVjmOnPJwz/b2Er+9q19hq19Pq+o3Uk93wa+MfzdiPnJ
vc6+b9ub3wYmWrkQltOH7lrzdi0E97zrDPS/3nzq7GTu9cYete9j3uuu3i/v
AvXzyQqFONtZwzO7pevuheAR/AX9+GAczlzO4n0KwSN7FoIrbrTGTdZgzl2t
X7TeHoXgmXaF4KFSIZjoI2PUKusrOUc7+7Yzl3XR/JvN/dB8ciuF4KNautYL
wRD4YBP8sAf8s1chjHV74+iqyUYV4hxpaS3mKTtfe++3vbmsySUPDtq7EM8H
vulQiD1r5ri90Vx36PtU3WfGbrfWp87YwXvlnkvmkd+sEL/B5/aEHWCI5oX4
jYjtm2yVZKsWgl9gI3gD5mEPS62iHu2X7vE3M38//dTIOIjraoWGfve4v8M8
8mGYAwpxtrOm7/7WoBb6r/Who04L74P9geaOLAS/fKkPbsF/J/dUCK6Cj8hd
3TVXWKajevIOSnZwIbjkW2PfWX+Uv3UL85lhjUIwFnXIhV/oBfOMVH+vvdbQ
f56xNc1dw/nIpRe9v7ce/50WZ8cU51pk/JJCnE0Tkx1SCE7pXAimOb8QjLFI
H7HDC8EchxXiz/oFhTj3R/sOc28/G0e3rv7R1qF3Z3PhmLEa6zH6x1p3jH5m
gKfof4izjXY+9ocWGviMNb1hiQsLwRFHFoJLuqTruELwCjMfUQiGyZiGfRd7
j1PDuwi3w/zjzSV2uPm/mv+Lz2ZjNWjhFvrS/6JC8NAmasY734XG8PPde8/v
2WLnzfKPst6hPl/u93yf0XrGYSg0MNuEQnAKPAMzHVMIO1YfmovVXexszAGD
8E5MUk/u0dY+2v1E3xnqwy9dC3F2d/PKnrM9821pvVb2J4cZJvjeZXWIkTu5
EEyG/vhkJxSCIab4DsMlMMpx6do92aXqyaPfcYUGbiP+j/e7qffKvfC8uJ+M
/y51zi28/+PsQZ3jrUGtywoxxzbOBdcw2yT7t9JHrIf1LzVva6/beD//WBuW
45+DwXvkkgcHTSmm55Ls8mQnp/0phWCOZY2fmOyKQjAMLDDVfWtjJ6mFGS43
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
3sl4iP10tS+quVL/Dtr2+npZ5yXtNHN6uX/Z+4GNZjjD89ae4T23db2jfdt4
Zf9KsYGVOIM4N9+z7iv6OVNvSHZjMTjizWLwwNXF+HM+sxjv3KvJXivGn/ud
jffV189nP9PYq/Z9Rd015r1eDG7pZy/Wb2inG+9rLjVgo1nFYJhr3O9iz9et
c63xWc5wlXP0ty73AzvAKNcXg5F2M++6YrAHPrgF/nlbY/2WcXSzrfWWz+ct
NQPUzG7UYw/31/ts6f+uz39wo970fcfYYGd4W98gr4Ot0d4671nnXX38bjDP
V8U4Z0b6W6N7P9lNyW4uBr98UAy+GeJ+L+NzisEitxaDj+COs63zvvqb1N+o
7wP91PtQPRxzi3VqpfhnToNLsd/X+N7Oc4vXjK32SLo9S9F/b+PoP3Ye/J8V
gyE+LQajfOL6HDVo66XglrnOwH6usU/UwkvMRvx2dXOND1MD91CnWSnsDmvj
X6UU3DLM/hnXnOuMd5qHjjPzh2SLjH2u9kOfHc9x1VIDK5GzqvW/KQZDfF0M
xvqiGKwC5zQvBWOwXq0U+y+Nf6HvbmujuVvfSDVfal8VG/jpK3txhsMqq5ei
7+fWZI+/hf1aOEML/fOs87VzU2eNUnDI+fq4JzhkreRfuxQa6q6hrameKxzD
Gq75Ntl3XsdY73Ofy3Br3m9dvhN8L2bZ79tiA7dRI2Mirt9rP+hby770b1lq
4DLqM++D6sdaa211D/oudCjF70y9cdYc4jt0Zil4Yv103aAUDLNuKXiEM5+z
/0ftJ31o1imF7kc1i6y9yP16pWCVh623njXX188eNvq5KCuV4pzfJF1/0Ufs
Ivv+7PUiZ2Bm5n3M9SPWnmAuNX5L9nsxWIP9r8UGZmK9ONlGpeCfDUvhxwf7
wDKPG//VnAn23NC+v6ldrH7jUnDLJt7LQn2b6N/QXo8512Rnm2Sd36xDT/Im
q1uSbJlSnKn/FRs4iWc2XR+xP5P9VQyegFngpKXJNi8Ft8A/m5Vi/7Sx/6l9
ynrEn1L3tPEpxQYGYv+HvS53DatsWQpeWWrfJfq3KEVsC2egN/5njE21zp8+
jyXmtyoFV1Bz67TephQcQq1W9tpKDft/isEvfxeDRbZWf4W+K/U/b94VPqtM
j4+caWqp928xnm/GT//6rP+yLrPDLXDRts7I+sVG+dOM4SeOfrtScMjLxtgX
khVLcf60LgVroFm2FOyQMQT7Jua0ts7ypfiu8H3ZIa3blIJFeGfQX2X+DH2w
CvW3L0UOPLRcKWz5UsN3ivUK1oNbXncG+l9t/qvOu5y+JtYnxizwCbk7loId
YImd03qnUqxhlhVLwR8rqEfbthQ8cq1x/PjecrYVzNnR2ZgRXVPz2toDPT7Y
5zp703cnfcRWSrZyKdhoJf0ruV/H721L59+lFJzzms+aZ/KOdYnBReT9fz32
pWAIGCWXrvlku5WChXbVjw+WgWHwE88Zu8Geu9q3oJYc9LuX4rxuV4rz+wN9
7fTvai9yeb8yxsFust779tzdOLpSKfjnw0a12cM8nBmcHXX1aOEp7hOmQVMu
BcPhP6MUzPVusor+ss885zNrby41OF8W+OxvtT76mnXO0M50hr1Kcc7BSjVj
dX3EOP/aq/tE3cf2XMV74TzcuxTnZAf9Z5WCVT7kvpOdrWafUpzzZ+lbVR88
gh/favrPSTasFDzCdXXX6Oi1t72G2I8a1Nq3FDwz1BpwEGy0X1rvXwqe+arR
nvVQ+55t7mrmU5N65De3XgtrkHtAKbihY7p2SnZgKdYwChriMAssNLwUHML6
XPcHGj9A3+re6xquz7UWGrQjSsE0a5o/wvXa+s+zf8ZWXJkLxjlPDTmcjZyZ
R6b1QcbRcVbx9/atfT5fev9rW3tksoNLwSowEXzCuzZaYz3KOLrO1meNHhY5
NK0Psxball7XcU0uefDRmFKwCcxzfin2rDfQP7YU9TLGWVcdmkOsQa11ne98
72WkvchjFhgHFulSiueygbUvSHZ4siNKwTLjSsEYG7on73DvjWd4kHnrO+sG
1tjQOr/YD984/Ufak96wy4Wl4J7x9hqnf7wx5mSeLs7Fnlk2Vj/emkf5O5Nz
kTU5Y05K1rMUzHJxsgmlYIejS8Egx3g92vim5sMrXUvBG5eUgkEmmkuvo+3J
nr6bWRtuOdb8jIHYU6ub9VhnrENtdNksm1qHesdYi/gE+29u7qRS8Awsclkp
mIE1fHKpvY4rBYOgnaweHyyDf7L6VuqYrZv1L7EHWnK6W3cra+HHB79sbYw5
jtfX3fUJpeAbDP/xPt9N/Y2mlBqYaKLPZHNrTdFPjf+swVk6rRTn+Iml4JQe
peCcy5NNLQXLLGN8O32trdHD2OX2naLuJPOuKAWToN/B9ZXa9sa3M/dy3zHe
r+Ws0cQ6U9VS52TjPa15pfeA/5RS8BN8AZec5n65RvEV9JEz3XuHW2CaGcbR
neo9nuAzmaGGHL4PfDv4bkzX38Z+K5rLupezzCw18NcKxtFdZWwnZ5ihr63X
nayxknXox3fpEH3EepeCVah/tWuu1yTrk6xvKc77WaXgjV3dr2z8/VKcg5zr
MAhscrp1rlHfR31vfbP0n66+Xyk45rpScAv+/tbDf62xvPP085p3lt2d7Vp9
/axLzmxr3lgKdoDtVi6nvHKs4ZQBpWAVWAn+29PrHubfWYozqqP7PaxZcs4B
XkvOXNY3sBRc857Ph/W77t9zvWs5GKe9M97gek/zK9Yb5Hqg97mbz5Gcm0pR
4z1/D3pxds4pxVn6gb8RsVtKwS83l4Jd4CTYo4O+vfUPMa+D9TP9B+bso5Z6
t9ovY6Bb7X2T+cwGv8A1H5eCy4baN8vfx9hQ47c5+xxziX1SCvb4vBQscY4+
uOXTUjDLMHNvLwUncT3A9SfqhlnjC+scoG6uvzO/913m7Ge9z6z/qTN8Zg3e
CfjoDv3nGrvDOh1dH2j9A7weaP/znIH/Lpj/fRb//fFI/V8me6QUZ8/DpfDj
+6oUXMOZf7d+fLAMnPFNsm9L8Y3hz/p8dQd5X+cbH+P93mXsS/syF+wyr1H+
Ie5Z32vte9Qxy9el4JxR9rpH/1fGRjnXaPfwA1xyfymY5PtkP1j7MOvjH2vs
e9ffGUd3Xym+VXy7ZlrrcP3fqh3jdazrw4yjW1QKZoFzHig1cM397jPWYf1g
Kb6ZfMNWdrYfzP3BWuN8tqO9184+B57bhfb6sRSsAictSPZzKViHc/gn9xcZ
e0jtAvXMwPvwaClY5ELr/eT6J3PJy5gIVvm1FOc561/cLy4FV0y01jHWnuA8
v1iDWg+7v9j56N/VvN+TLSkFhzxRCtaAUX6zPn0eLwXLPNaoN30nmT/Z5/yg
9/mjz2qRfR4z/2hnOcbav5l/iddJ9meOhaXgFlhoqXUetdZS/Uuc7QlnPs4+
jxu71Nm6Ww9eetJrVv9/peCWv5L9XQrO+KMUPIL/qVKc/xkHsH/avD/UPKn/
BC3rM9U6f2qXmzPVPT3hHJjpmVKc+cuk82TZcuyfNf6Mmqed4Wn3zHulM0+1
3hXm9TQX1ngh2Yv6iD2X7PlSMBFrWOifZP+Wgn1ONj5N33RznzP2j33/VveC
ef+VgmGmey8zvB9shvFp5v7jbMx1mjVOtc6/aqnzknF075TiHH3b+jwnvhuw
QHb2wg6vJXs92cul+PMOJ8EtfGuWK4exblKOOLpXrNfEmk3UzLQGcTjoVa+v
uKYXLLNCOc71Wc78sn2XL0dsljPQG981xmZZI2OiXt4vNeAfaq5YDuaBaVYq
x/5ae15nvGmyN9L6zVKwzErqZ7uHyd6wJtrZ7k/3WeFbST81Mibi+lYpuIV6
K5cbnvPr5g9Uw+/SJ8X7ymcDrJXFBqndrRzcNCtZ3t8OPWfNfum6fznYAz/x
3cvBLe+by/59YwW1e5Yb2KSU1uVycAlMRS/y3jOfXPJgInLhoT3Kkcu6XTn2
2J76qXWLtdF8oO5maxXLscfPfOjQF51ljjVq5eCH2zXYpJp87Z2ffuzxV8rB
PHuVg1vm6COGH317a9Mj0+Pbyzr0o0+HcnANdeY6R11dB+vvrYY9bPSZPs5P
ztS1nJ08mOhm74/7bKavbu4+5eCQ5uU4P+/Rt69+mGWVtF7V3/1Lf3t8xGAv
tPi/sD6xO9V9aRwtNTJm4bpaOYze91jrDmscUI6zHYahL+/a1+bcba391eGf
5z20SHagucRgBpjmoHKwCv4DXXcsB7OsXg7eIhfema/vW7UdfVY8Y54NsTXU
8i3IvjfzrDHf2p2sT29mYA8TrVmO36mT/u/8ze43hob6a9qHPb24l4PLcV7f
xDvtO/GDPQ7Wt7d+WOLwdD2iHGf+2unaMtkh5Tj7O+vHB/vANfiJr23sAXt2
tu86aslBf2g5WOUw+/2s7zD9R5eDAzjn1y0HVzykLbDeT/Y81Di69coRY/2Q
9/GLfWCLDcvBD+jRZrzGdf2071IOboGBjnC/2NgG5dD+YgxW+tU1mg3skXEM
e/ptZE/WcNBR5biv9e2/nv4jyxE70hm66P/NGBxEHeptXY4z8wX3Gxs/IV17
lON8hSM2LwdfHOPz5LluWg5+2aQcnHNsObhloT5i+Jeah5/6mR4fOTARWupt
Vo5+GT+x39y5yGc2+AUu6pZ8Xcux/qNR/lPG8Hf1WRzts9rC+6Dmv97nf9Y8
rhys0r0c3MF6y3LwTMZD7FuVQ9tdPTXxP6vuGX3Up87x5bB/rP2vPnrz3GGj
rcoxQzdrb+Vv84IxNK2cpZV7fp9lnJ/fEP025eAT/Ccmu64c5w1nzbbl4IVM
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
bZLtWIlzmHvfrhJ/tuEdOOI1/eQQWybZspV4F1tXgnvQ45/hM0TX2jpoMw6a
6b5JJZjqVWvgx3e1uhnWI46OGZarBPeguTKtp1VixqvNJb5Tsp0rwQrTnYVa
bbwX9DAPTHSaxvpF7/91tb0qwTBN1fRyvaL7pj4zeCfjHvZtK8E95PY2jg9+
2ckr++W9l+XU96kEzzB3pu1tnV5qeqvrW2ngo2yf877hH2rAEbtXgi/6qUe3
ayX4ZZdKMMXpleCWd/QRK6jvp5+6mb6fOTARWurtVol+GT+xp3c7+7OGh+Ci
Acn6uy5WGvLJHaC/vz36qyF3YCWYBH44oxIMQf09KsE9gyvBHYO0qnrisE3G
Ruz3NIfZ2lkT/WC1xGGf8ypx9o1QM9je7Y3v6WwDnA/Owd9e3ZnOyX4v4/ia
6ccH+2QMx75DJfgEzZBke1eCh/DDEEOTnaPmrErwC7yDZm/1++j71DxiZ1eC
Q1Y172zXaOEU9M3VDNVWU7eKs5yldt9KnO/NnaWFfmoR28/4vuY181nAPviJ
D6sE25C7fyU45Stj+6s9R10L4/gPcM0VxlnDOudqq5uztr8dv+GBaslZQ91w
/R0rwUMj1K+pZrjr4f7+rGEj9J3MoWZWgxi+gb5/FX1o4SC+VXxXdnA25hqZ
7JBkh1aCM2AStAel/ahK8ExL1y3NG+me9cGVYJ+Mgdh3rgQDkTvaOD5Y5hCv
7A8yn1z051eCbZgj0462zihrjlYHI3SpBDsc6bWL9wETUQOegYvGmjPG+mP1
sz+8EvxyWCX0F1SCYahBrcw/1hgchP5wc4/QR2ycuUc4H/4xlQamw0eMOcdX
goPGaRuZu7Hr8c5wmPPhv7ASfMK5O6kS5zn3flQlGGhCuk6sBG9cVAmm2cQ4
7JNxEvujzcme32bqL9Y2tQZ6tDARmgnW30zdBOe6yF6wDdpjnGUL9cdY42jX
x6qFDS6rBANs7H1f6D2Se0kl+KhrJTiHNbnsu+nrqv4Snwt8gb+bvi2chf1x
xidXgk9amTPZNVyCpnslZkNzqfNm7HapfnKOrwQbdbc2+RnfdDe2tTW4TxgJ
3/HmnqAPdjgpWU99MAN+GAbmuVxjPcU4uh7WneIznKJmGzXEYZgTvfZwTS8Y
6IpKsA388w+zVOI7MdUY/u3sPdX1VP3UaGKdZRv1udKa5E9PNqMSXLKc93dy
JfjlpUpwBfvljZ/i+mTjMNE21ahH3R2s2cY5T1ODlu/J937vXq4Eq/Sydxvz
mjjDcua8rKaP+lect22lgaXYX2Wstzlt9cFIM72y37mR781KA2uwv9r4q8le
qwQL4dtFfx97vKqP2DWV4BCY53Wtn/mzKsEumeYNe72mpq/+142hv7YSrLOL
eRn77Gq8j/37mvOmNXc397pkb3lfb+rb3RoD9b+lD207/fjeTjZb33X68XFW
3VgJRrmhEnzUTu07lWAeNNdXgncyfrpe/WzX+M9Q/66aG6z7trUGGRvsnr+v
8fe+Tc19rxKcsJd5zHVrJThiH+Pvq4Frbkp2cyW4BM74QF8Ha7yv/0xr3aT/
A/3vq6VGxk1cb9Fu1cf5zjl/R7KPKsFGZ9v3Q9e3mHuzvo8aaT7Qt68151SC
K+CQzyrBOdT82PUnlWAYeAceuk27Xd85aj/Rv5819/XK/lPrD1P3qevP9LOH
h+Z6bx87w0fe54HGDrDvXK8HOAPzf14JNlpUibNjnP7PjN2f7IFKnLswAPzw
TSW+EXcmuyvZl5VgoS/04+NbMlL/l2o7+Tt8rpa+d6u9S/1XlWCVr+01St/X
rr+wJrn3VIKDDtYOst5Ie35lHN08n8mdzvCN9akLI9xXCR7prDZjOq7zk31X
CYaBR751P8bYvWrPt+63rr9Vc689Mh66137325M1/PODz3++fefp/97Y987w
nf6x+o6wzv3qFlmH362Lcc4czqA/k/3ob41uQSX45cFKcMNPlWCRLvqIPVIJ
5ni4EvzxsPsLrfOj+gca1fnRWugfMgfWgXl+cf1rJbjiF/0/Ow/6o7Qj9f2s
5iLjRxufYD614JDfkv3uFXZZrF1ir0crwTsZA7F/zPzFah7Rf6x2jL5J1vnN
XPJgose9sj+ukW+Ss8A5SyrBMJONPaH2v2TLVOOM/F3dZJ/dz94v2oyPurtf
6G/K7/lXJRjmf5XgF7gGNnpSe0ofmqXqnlSz0JoL3f9Rifdkiro/XP+pnz0M
9HQlWGWp98Xcz+h7Ws1Trp9yf4IzMy9sc5J68v6uBJ/gf6ESHPO8sWcrDWzH
+jmvPfX/Yy41jk/P8oRqcNhlzrZULXlwEd8IvgkHO8vf9j1ZDX23rQY3TanG
bwT7/Gsf+sFOL6l72dh0/c87f8Zg1NnW33i6v/l21WAVcjk3OVM5G9tUgzd2
qAZHoGldDTZathoc1MQr+9bW2U4N7xL+ZdzTkzrbV4NrXrXe9toO+perBs/8
P2Ol9S7VON+vMbZ8NfqyvlpdNguc87qz7+D8r5lLHly0UjU4o2m6rqBvedcr
VoODdkzXttXgInwwDn588E/GS+SuYF967qiWHOrDKuh3cr2z9/K2vp3N3dFe
sM9sZ7zOGWerfcv+xFauhpZnw+9FTXw3WKNWbThjd1WDtlQNtiiqzVWDZfi9
d6sGw7xnDvv3fB/Ywzto89Wwgr7dq8Ek5OKDWTKWYl9Uf6P9YBf07dQWnYl+
uztDO2vu7pzcW5a7RzW4AvYhj3vasxrMgf9D8/fwfsvV0O6hDg0Mg7698TmV
BpZiX/H58Rzr1dChJ79aDU5C84k19qrGs8ZftV6l2rCvGUfXoRq89Il71vjg
HNb8+xL+uxT+/Ql8gn/vFF+nGudPy2r496kGg8AR8ESzatgq1fB9bh46vjF8
a1arBovsl677qye37v3W3e9bDW6hPjy0arUh/273rJtbm5rUg2Hof5dz0Xvf
akMdYuTuZ31iB1SDVcjtVA2OgCtglo7VWMMf9GqR7ED15OHHN189/gOdi9g9
znWAs62ulpxv1dIDDppvnH0n+7Jfo9rASazX1MceP99Tvnl8PzM2Osjn/KXP
+iDvq5N51ICRDqsGM3C+rpXWa1eDXQ5O187V4CJ8sAx+fPDMIvf3m/eDPQ9W
Sw7vCWc3+kNcH1qNXj/pO9Tcg+0Fz/COrWOdlr5zh9i3s+/hutXQkn+YNeEq
/Osl26AaDPKovocrDexFHIY53HsnH+Y5ohrcs75xdGv5nNZUQw66vf3z0kH/
L8bWt3fGUqz57+UyDjvS2CP2YY+/i3W7OEMX/YutQw1Y6TL/dwH87wCoeVQ1
eAMOIs5/o7dZtYE1iB+tBq7ZOK03qQbPwALHVMO30Bpo8S+xFrEn1C01jpYa
GU9x3bQaRu//Z6xqnO2wQNdqMBO8RN9jq7He1BrUwte12qA5Rh/3Qc3N0VK7
GrVhFWp2c31cNdgFFoKTtqiGbVkN319qj9OPZnPrb+6+ezV45m/rda82cNQ/
xmGiVtXgmm7eV1fj6LhfNPRtZf+M0Z43d6tqnKu9qnGWsn/B+MxqnLVXVYMv
YIqe1fgzDn9dnqxHshOrwTVTq8Ew27nnmfdQf7n+HvpP0DdVPzUyPuJ6UqN+
Tdxfbt8/qsFIV1aDa7a37xXmnqh+e33otva+trLmyd7TVd4jLDGt2sBKO7qe
Xg0eOqUabHOq11OMtTFveWue4nV561NnhvV3NGeGdpX+0/wNVnTWac7Q1Fgv
+56mZsVGs+zs/PxWvf0Ne+m/uhqcwznD2TZETZ9qMATxa9Tgy+nHt6v+a5Nd
Vw324NrO9cr26m2vmdbLWatvNRhmljVgH7inX7LTq8E5hUb7gtpd7b+b61nW
7Gv+btbb3Rrk9q8GXwxMNijZANdlNcRhH5jn+mpwC+vZ7gcY76+vnfe6h+vZ
1iqpvaEanLOn+Te43kv/jfavVBv4ibmqxtqbc26y4dU4PwcbH+QzyXvP1Lyp
Gt/2vcxnDzeclezsZGdUg1XgKhiD8+AWjfXNxtGdaf7N1rxZTQc1xLN3pZn7
IfbiPZpTjTN8X2c+w763GtvXGW7Rt4/Xfa2xqnWocVuy2/VxHzDUHdXgkLnG
92vUE+3+Gms4Zmiyc6rBOM2tMdSZqs4415ro+R7wrZiqbjV7U6NFtYGrhlWD
d871Osyec60DF91ZDYbpaP07zD1HfUd96N72tx3o753VXrmW3u9avA/zq8EW
86rBIDDM3dU470dU4/w/z+sIY2juUjNc//BqA5dR555qsMrB5tyjzdM/shps
8/+8lezBapz5LY2Nsu9INWs3muVQZ55vvUOs2dI8+GhsNfhiTLLR+ka5Pr8a
THRvsvuqwT/41tOP73D965o72r7zzVvPHOofof5+1w9UG3jmfveHmkfNDZxt
rHXGuL/fOvcZu0AtZ+jkapydPKcjrT/Z2KRkF1eDJy6qBiuNqwa/wD8PVYNb
WC9wP974OH1HWvso1/g2VjNeu7DawE8X2gtGgVUese8F1nxE/8P2e9gZHtZ/
tHUucu4LzN/Amo9WgyvgkMeTPaH/EWPYY2rglwnJJqrvZs4EY5up7ab+YmOb
qetmfHNrZNzE9RJtkr7NnJcaC6vBPN3t+4TrS8ydqG+h/k3Tn7nNasFwT5pL
bLnkW74WZ9BW/q6XVkMHu8Atl1WDJy7VtlbL2c335e9q8MczyZ619pPmtrIm
+j+rwTJdU7+/zJ2q/y/Xf+v/y3rUhW8uV4fmaWd7Sv8fxp42J+MhZoF9YJQX
qsEPz1cbmOVK+/2T7Dlj+P+tBrdMc9/T+JVqp7nvaY9/zJlm7eftN8M6/yV7
0f4vuJ9uzgz3y9RizRVO4hvKd47v7Wnmvui99fBe2b9kfNlaMAm5nKOvVeNc
baKf+CvV4JeXq8Euy/m799LXW/9M83pZP9PjI6ePWuq9ar+MgV6190vWZTb4
Ba5ZwXeN9TWN8vsYw0/8dWd/zVxiK9aCPVb27MCPD25pWgtmYU3uG9XgJK79
XaNtqp5nvKzPub+6N33eB/nMT3cG6q1k/abOwJ45ONvgo7eq4Z9tjD3n30Bj
A6zf3yt7zkDYhnsZpP6darAK/nyKF5L1S3Z6snercbZnmix+hv539eODcWCQ
UlqXa7HmOsde75iTd4ac9d+rRj3y4JliLXjo/WoDE3H9QBtijJ5F+xbNvdl6
Z1qTGW6xNrkfWu/jZJ9UgyFYwygfGT9bDRwCG1VrYawrtYh/qJ77q3iPFTVz
rPGRdalTqwXT3G499vVacMtc5xjaaK5h+jIdGs7M76pxTg5T92k1/pkA59dR
3vd7Pp9m1icfVoGDPku2ai34hPdulVrs7zL2eTW0n6mn/pfJvqoGl9xpXfLu
NP8u8zImgnma14JTWK9Wi32LWgO/UOs8a6O5W90Ia33h/m7npdcd9maWUdb4
1ucCl6xuffp8Uw1++boaDLJGLRhjlL7RPsNPvc9svnnq51tvlPee1cFHrTH2
5veAdeCYtYytaS/2+Nd0nm+d83z7f2MMDfrv/W2zmuSvnex/1TgLlyZrWQtO
gVt+qAZ3ZPzBflE1ctCh+akavAG7rJt869WCR75Xf4E2Vh/cQv11apEDA/2o
/VRtYCDWP1ejHnzysDMsMmcd52SOH/Utsj4xZoFnyF2/FswAl2yU1hvWYg2f
/FIN7qDXo2o3qAXLXGwcP77HnO1nY+s7GzOi+7UaeRvY4zF9E/VvZF9iE40t
TvZbNfhmsdrF7h/wWfOcmX/jWrDNQz7rh/VTl9gk86gHL3CWbl4LTvk92ZJq
8BIMs4l+fLDPxdyzLIWW2CR7bmLfJ81/ypwlvjPdasE+j9WiH303M48ccv9U
95cxNE+Zf5n10FCnm3W2qMV9sD/O3BNqwRUwBj44Bz+swrp7LdiF3C1dc33O
2N/m/eYz4R5bGUfH94LvxhfWeNZn+Y/5x2vMwQxb1YJ9nldzvP4XjG1di/qs
n1f3nD2X8V56+F36wt499J9gbWrARNuk67a1YJAT0/WkWpz3+GAZ/Pia6Ocs
71OLc/CUWgOnoMvqMQP9TrQGtbarBQ/1THZyLVgGpmnt/hTrsN/eeE/7nmRu
E/OpST3ylzOfXBiI3B1qwQ47pmtb/fjgE9jmtFrwCetT3bcxjo4zijOtvbOQ
zzyner+nmLuC+TARuW18PnBNb411r1rMwkwZPzEXvNNLTVNn2NF6p5nX1Gfy
ive8k3lt7dXb32O3WpyfnKPs+/obwS87p+sutWAPOAZO2tkYLNVXf876xPD3
099XLTUy9uG6ay2M3u9Zi9mo0b8W/FK07+mud7XGLvr662d26uyebIC5xOCO
wcnOqAW3lIyzHlgLfmlXC04iF8Zh3U7NAHVVa9TU76GW33gvf/P3rUE+OYOs
P9h89vDRnrV4PwbpR9Ne355qqL+nfTJGqzkDbMOZxN+r+Xv6mbVgBPycNwen
a+dkQ/QT58zvUAvGWUU/8aG1YI6za/Fnfd9afG/Qc1/kNFcz1Hslxv2eYW36
7mN+xjHsqbWf9VgTo//etZjhrFpwzt7O1UH/EGNnORcaWOSAWvDDubVgkmG1
4BTq7+ceP0xzjvsWzrC/Wr4vL/r9oib+A7zHoeY199rCPHTkwjnDa8EvcA2z
HFgL+8b5WHc0zneMbxjfvTWc7VzX51rrbJ9t9hz28TmNqAUL0Qs26lQLVuHs
HVkLxmB9nvuDjHdSzwysD6kFi3RWS80R5q6lDyYilxqc4bDKaI31KP3n14Ir
FlmPuqPUtHSGg6030jz8cBNaZoFDxia7oBasAaMcbu0x1odlDk3Xw+w72ji5
65vf0fvkOQ/3nnhWh5r/k38OmJV5xpi7nvnr24/eRzjLuFoDix1iLeow6zj9
6Jn5MPsc5n4D7wnNdSumb0Sy3VeM2rAT9Te2/vhkR9bivO+SrsfUgneXqrmw
FpwCC6A5Uv1R+habR+yiWvDPJuZd5BotLIT+F+6vFix1sXp0GzvLhWqPrsUM
S10fo59aR5tHPqwEO8ALk7VL9T1eC+basB6MxB62OdZ7pGY3NcQmJrukFlzz
RC145jj9mzvz48aOU7tlrYGl2E9KttDcJ/RPcr4J1tnMOVsZO96cJ113d3+8
vhPssbmzPFULJvl//qnFuc05vrX3flmy52rBF8/W4s89+qfVEOfbM8XrZeZt
7XND/0wtWOVE89hv2yjvWeufZOxZ10/bixkvr8U5T97J6p8z//JaA0uxnprs
5VowQC/v+ynvkdznvUcYBoa4QmttLusrjT/vczlF3w76T7b/8/qITasFn/AM
X9RONX96LTgm07zkbNvZs7X+F42hn1EL7tnBvIyD2hh/yfvspbZtrYHt2F+V
bFYt2OIa/fjgEFjo1VowDOtX3M80fpW+3vbo4xrfzmpmalfXGljqanvBMHDS
667fqAW3vK7/Nfu95gyv6e9rnWuc+2r3O1vndWvBIW8lezvZm7XgGerDKdfV
gmXeMJb5rzU2UP1bPh/8u7kfYM5sa6Dn/JtbizNwD/2zrUP/Qebvaj1i16vl
mvHOO7VgpkHmveN6T3U31II90LyrDVaH/71acAlnKWfqLfrfNXZjsptqwTLv
14I3ztTf3vrvGTtTbYdaAw+xvznZB+a+r/9m++1lnRvtvbexs8z50PUQ92fp
O9t7vMF8cm/1Poh/pGZf/XP0DdV/qzH05+j/ONlttWCgOe6HmrevPmKf1YJJ
PjX3k1rw0/7GbzN2rv5P3A9T/7G+22vxHpA3XP1n5t9ea+At1rwrvFO8c7wX
d9Ti3cHfqh7fjS3rcdYfaPzrWvDAKPd31iL+ebIvasEB+DrpH27/z/URu6sW
fAL7fKmdZ/7dteCYTPOVvb5QM0L/l8bQ31ML1uhkXsZBBxm/vxbccF8tGOGH
WvBEZ3PnJfvG+/paX+daA8cTh0dgoG9rwS3nm/Ot69HuD1U7X7tX33e14J4x
+g6rNTDWvc72lf1HOSf679Xc5z18a60xxsa6n2/feeZ+730+Uouzn3N/US14
g3t/qBZMcZS6RfrhmgeSPVgLLkH/o88Q/xHux5vTRS18tMBrlovup0axh6zR
xToP2f9IdT/XgosudH+Rvotdww2/Jfvd/MOd6xc1mZY93HF4enePqAd7cf8P
+zzYT1TzqM/nEZ/Hw2o3qgdDjUu2WD15jxuDcy7Rv1j7Td/R3hu1Nq4H1zxh
fJIa6lB/I21ja8IA6Dephy20xiTvG4aCHeCJP9Sj2zTZkrReWguu2aweXPKU
e/KWqEf7lPvJ1sW3mX5qZHzE9X+N+k1xz/pPZ4GFtqgHD7Gm7+b1yF2q/hl9
6DZ3Nvpt6XeG3K3rwRVwyFTr/1ULduF7tFU91s+5n2ocDvrb61/mTXU29ORR
88pGWr5LfJNGGN9aDbF/1G7hfM/qm6Z/G+ckZ5qxf2vBOS8an6YP/vnPa6bZ
th6sgn+ZejDQ9um6Qz34Yrt68MvLxmGcjJPYL2tOVhs+Qd+6HvaKNdCjnalm
+3oDz6BjzyzbOQ8Mg7aJs8Awr7mfaS3Wy9VD+5L3uq2+a6wBz5DbRt/y9eAN
1ujYt7E+fVYwjp/ziDU+6uxYD855w3rsYZKd68Eb6FY0j1hb9fAQ/qbqYaad
jLN+0z1rfCvVg4eaWo/8jMOaGuObx98f+U6+bf7O5q5cDzaCMwppXdQHS+CH
Z+CfXethrHcxji5nrV28r13UsEZDHJ7Je2XPml7w0O71YBlYqJrWtXqc8bvV
I/a+M9Ab33vG3nde5r5Jy/rAPNRsl9bt68EYe9Zj/4E9PzS+R7JSsnI9OGhP
9XAOe1iqpB7tR+7xF83fUz815tQaGKtSD36peq04b9F8uGevevAQa/q2twa1
0H+iD13HZJ3qcW7yjLLa+Dg38e9XD8bYtx7fCRhm73qwUb0e7NPMK3tiaDqo
4fnX/R3m2oc6+9SDZT633j7avvpXqQfD3Ok9dfC+7jK2aj36sr5TXTYL/PCl
s3dwniyXPFho9XqwQot0XU3fqq6b14N99k/XA+rBIvhgCvz4YJyMkchdzb70
3F8tOdSHVdAf6Lqjz/xbfR3N3d9ecNB8Z5znjPPVfmN/YmvUQ8v1vloDP7Ff
M9nRyY6px9mDHx+cAOccXA9uYX1QPfZrGUcHdxxaD5ZYpx7c0rIeWt4N3hFy
vzcfniF3LXNhnkPqYaw762dP3Qett8AYmkXmr209ZursnOjxkwNTLHAuuAbm
gEngjPXqwTD0OMz58a9bj9j91DYPHzHqoYWXsvtd1z6H68/i7On1iL3WT7ZB
PfhpffePGu/ibPQaXw+GWpTssnqcF5ybGxnb2PvmPrn3jdQTg5cWWy/jhon1
4JUj0/WoZBfVg38u1I8PrtlUP/EjjVFvvNqNfU+WmIP+4nowyQR7baZvgusL
rbmx7xdcs1SjztHWucg84uiOde7NrdW1HvyEH145rh7c8T99GVtx7eq9k39J
skn1YJ8trdOtHtou3uf/M6g6NHxX+CbwbdnCGlval1x6d7c/a1joUn+jbvUG
nsI/2dhkZ5ikvpU+OIg63a15vL5L/e2pyVnIWcqZCU+cVA+mmOK7ga5HPbjm
hHqwxeX1YJR/9RHbVv0U/fTK9FPMWUYt9U60X8ZPJ9r7tHrDmQ8PwUVXJJvq
ert6Q/4yxlobv9wrmp7eBzXhkBn14ApqXlkPzplWD4ZhfXI9eCfjIfanqJ2m
pqf+5bQm+na0znStjTk7up/h/cBGpzrDFdY+1Xte0fUK9l3eK/ur6g2sNMN9
W58Tub3qcaYOTDZIPz5+U5ji2nqwQW99xGCbmcmurgfvrGR8pr2uct/H+DX1
YJVdzLnGdU5NX3uhmWX9q9XM0k9Ov3qwTF/zcvUG3uprbGdnmGnNWd4DuafX
g4/YX+d9Fczrp6+dfrRF47P1X6ePWP96cE4745zvMMmNaoiX1FxfDx4q6xug
DdQ3QD85N1hnT+MVNXvY53rtBjX8+wv+/szfw280lxjnzj31OHv2cq6bkg1O
dkY9WObmenBLB/dV40OSnVUPLsGa6dvLGh3UoR+k72b9Q9SfWQ8WurUe3605
9eCKffXfYqzuPGd6zThrH2e7Rd+Z1r3VWtS5PdncerAE3HGbvv3txR4eOrse
bDPU69nG9rPWqt7v2V5X9b73tx71mzeqgZ2jj2sL18xyoPqOru8wjm5YPb5t
fOP4lt6hZq73ubfPsYVa+Ohcr8P8Pef5m95VD2aBYYbXg3cyZmI/Itmd6jpZ
Z7iaNRrVPtg6d2sHmXOwe3pypsM053lfd1ib/Ujj56kZ4Qwj3DPvIc6MtqX6
Q/XPrweDnJ9sjHF0o5KNrgfHjNI/yv2h5t3rmuthznan97uuWmrwZ4j3tGre
Ic51Xz1YiNyxyb5L9n09+Opw46OdLWMvZlxf33r671V7mHnkH6FujLWxDfTB
bl3qDUz1Yz145Ej9D2oL9KFZpG5JPc7n3+vBJT8n+0V9F2v/qL5zs8Sr9WAY
6sNGD9WDbR72yv6YRr6LrTfB/kc5AzV/alRngbk/W5/Yr/VgmwnOx5xwBRz0
SLJHky1W86t+fLDPJfqJv1iP8+wFZ3rEGR8x5xhn/NVej1mDWr/Zm76P14OD
uql5vN7ASayfsO9i8y7xOkldV/M4N5dpFufaxd7vz9ahRsZHXBcm+189uAX+
Wer+MmNPql2onvynkz1TDy651N94qeul5pJ3grmwyp/1Bm75w/1f9QbeoVYP
a1/uPH9Yg1pPuZ/ifBkLLnGWk6zxfD1YAnb52/r0ea4e/PJsPVjkn3pwy0n6
epr3gr9lNt9U9VdY7yT7ZXX+ttYp9n7B5w8L/WfsX3v9p/9f53neOU+2/3PG
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
9s1cY/vQ72lHc8mDiX7xfJzzaG39zZ2dDSYZmI27dA1tc7TDL8ck8wB/94v9
7Y/RB0vN0Uf80fqwX6x9jrFopOzDfGw2xkDrkvO3PV6aDX5p6Xt2ietjzR2g
7VLta6pzXDLmmouPuwP24P7YVftc1/OywS/HZ4OTyF3b9fHGzDWumc94tr5B
xvLMed7cL2uqsZY589VfYA/s4aMTssE887UTc6K2E4wZ5HpQtsZonIU7ELZZ
z3jyLssGq2C/IhmX00Mu7vaTkjFY257Grq8NNmmjHf/ibO2uThnlKjXWt+ZC
Nag1RI3B1r0yGzwzNBscVM/8vfRtqG+YdS83r41zW3M2UPtKc7GfnA0mIndE
NhjilGywyUb6r8kGe8A/V7tvr2+4sdxTH2fjm7+heht53qvMa+fc3rxNzIVp
Fvl8WF/rfhN7SblmU3vsYD/XGjPcuGu1X2M/H9nTEJ9PPXUXW2uJvwv707LB
LKdm4727Lhussrk2fCPd0wsMMjobbNJRnSX6R9bRWaIW8aPMgVPgnxuSMUaN
0e6xX28/xNd3/E/b9cbs57MYaT+dzL8xGTcnY2k2+OGmbPAKrDI2GwyTMhD7
0825yZhbssEfS9W8UfsY47OOjDY4CpaBmz5wft/8A+2hsz118ffgd9kvFz2c
bv7NxtHHOHXROkgd+vouG3cM98u37lnDKbcm47Zs8Ans8Km2rmrAHHckY1k2
7n3Y5Qv7+SQb7+0d2RqbfKLOBGvfqs7n5sI8n7mfpNbZ7ifqm2R9+jrYns5S
+3Ztt7m+w7qwAszwVTZY5K5s/Gfv9PxlNrgDhoGB7nTcpW2yfRD3lWzFv79i
v8rcO81d5lmXuV9l3XOsS80e9vN1NrjnK2NWaf9K38/J+CUb9+Zd5tPP3Wos
92wHe9aJPgue0eHGEAubwCrfZIOH7s0G49znfK8+YlZbe7W9fZ+Nd+M7c+8x
/h73h6vPe8M7c3827u6UXdivcM0Mv1yg5vfGpb2cbx/fur9fP/E/ZINhHs4G
fzyUDcb42efzQDIezAavEPuj8Q9Yc4X+fsas9rxTfUb3eBbyZprLd4LvS31z
+qjXT620h5/s4yh7e9iev7cX9o/o/0n9H82dqa2feuTzXeN7tJ+//0WeEY3+
2RpjPZoN9uCO/y0b3ML6V/eP6SeOu/nZZKxMxpPZ4JInjL3IOrNdYzvGXDTg
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
H/cx70h7aWLvMz33Cs++wufWW71H1bkoF1wyKxcM81gyHs8Fp+ys/xhtA1wf
bRzvw1O5YJWmauys72hrkD9bPd4b3p8ncvFe8U41V+dJtS7WNseaT1j3CXMH
qLeLmsRfkgvugRngkrmOedrwtzQGhoFtnnHfXI1ntD/tWS70PBe6b6IGWpfm
4v7gHtncvp/2ObTUTx/cZ9xrcM6z7k8w9njj6bG1fQ4y7gT7b6XWIPvDx3eJ
b1bVPN417vOWyd3zYjK/kAue4U59PhkLkrEwF/c9PnhjsPvd9F+ejCtywR+M
PbWdpMZg43az3vNqDTaO+MtywTEv5YKdXs4FDwzT/qK+PeznMueUrYba24va
LlP3JbXQeTUZr+WCJeCMV7QNtxZ7uOfKXHDLVc5X6jtZrbae90rntp57uHro
t6ujwbhaG3N71/QywviRrl/XT9w1yfggF/fnGfpGmMd9xb8T6OqZh/hMr80F
P5H7Zi54hXdtUS7+1tO/efawyhvGnWoPr2t7Jxf88baai8ztoD42eCllnyXq
bZSPHHLhFu7wTfPBD8wwzin56GGx+W/ZJ31cp+4Sn8M11huj5js+C1jkfTU3
Ux9meTcZ7+WCN2CXzfNhG6vGSM93qr3RT6pB/I3WeNf4zbXjf9/fg/r188FA
S61F3P8c+Jba3+n2M9b5dOP/Z8w4NT9MxhZqkv9NLu6Z1bnghUw+OAWWgWk+
cnys7VbziePvm7/zT3PBHLnEls9H/HhrjXNmn80Hn6APr3xSJ/8s96w/y4U2
mugts/4Ee6B2Nl/T+djcnPr4CvlgFHLL+eAFGAMmKeVjPclanyejaDx5k7Sd
bfyd+j8zZ6J9FeztC2M/N55YakzW/oU1y9Zl/2WuxjesVzmnvMNzvsVnDefQ
fyUfz+R2z1rxXOieowac1TAfdzd36VfJ+DoXnFJN7A3ywTzYUn7BBofc636K
efdYk7yp5vCecF8Tv2U+1lvlo9b92ray56q1zvcd+8aaq91vad0GvoffGkt+
QzWnaf8uGT/kgkEu0DYtV+Mt/HDL1p6dfNhlm3zwxvf6v/NsU3xeD5pDHN8H
vimjtD+g73trpwzE+sdc8Mx2iX/7fPimWwcbvm3V3dYettX+kDpowD//JWON
fNwzfJ/esgf4B+1HnRu55r7/ORm/5II94Jgd8mFLWYD7mrv572T8lgtOgUfQ
IB6dn9S50PzH9P9qDvGN88E8T6iB/fdk7JgPH3biL7KfWc4X2duOxszWRuxO
apK/cz6YoWk++KRJPrgDfoF3/nD8qe0p84nbIx/3yGvan9T3h7m/2/Pv7pta
C3145a86z2iue9iFGPpi3SwfPPSnOZfYY9N8TedPc3e3p9c8O8+U86P/T67G
3Kz/TUbzfPDPLvmwY4Nf4Jbn9O9iDD3AGNzBrfKhMV/NZsat9F1aoFaLfPDW
C75fKcu0ksFaasO3Zj7qUrOF6xbmLlTzP58Pz4aaa+WDq8hdNx/8sU4+WAU7
/tb5YBp4Zlf3L+tb21hy18sHi1ym3uWel17Je8l8cslLmehVn/trrnfLx/5K
e0mZ6CrrEPOKcVeqRdxu9tnaXq4xj7uF+2y/fIz982HbIB9ssn4+7vk2+eCK
a7Th2zgfnLGR35a98vF92dP3lndlw3z4U0Z6XT869LG+GkvU2Uuttq7bqdlW
Oz3AUNfa4xvq0R/7evkak9Wz/t75YAZYZESyHpkPDmENQ72WD3YZoX1T7ezb
54Nj2vlt4zvFd6u9uu/qI4Y+T/a8w/S9YyycAtucai8d8sE1rNFhv4821nyz
+HbyDRtp7mbmb+4Z6vlcF/n7tPU3otZp+eCfffPBJ7ARXMF9O9rBepR+4jra
A2viYQ7eh07qjVJzlLn1zSWPd2hsPu5t+GRMPvas89pP9/36xPcuY1zWd+8j
tTL2N8ZY6sNN4/PBHuPywSJd8sEaebXPSMYByeicD5Y53bpjzSG34Nl4zvv4
u5zq+cihDho/+fx/VP8Mc89Qi/WB1qcP+OfMfLDKAfbbSft4ffRMb13skT01
S/ZGHP88yb/vghfhJfQPtNZB+bCdnQ+2mJQPBoFh+M8yue+75uP+P9i5qz5i
JhiDTlf1Ui5DZ2I+WKVqzkTHJO3d8sE2/89byXpqPu58bPgOyUdd1l8bl/ay
lT2frd6WapJLHnzUIx980T2ZD9V2iOvD8sFEk5P5nHzwDzZ4Bzu2rbWzJ/dQ
61JzsrHkoL+N8VNcn5uv8cwU91uZhyZM9L09fmeP7KeoQ318hxvLfXlUsu7v
c9pOfWz4uFP75IMXeufjPevpe8c35vx8sArr89wfob+ntu3U3t41tp/9Zhxh
fK98jaVYU4s7m7t7unXpuae2RtqpN63OvpH7X+z3V/PI57xoXpAP5oEfZibj
QmtN18eYYQzM0jeZ+xm/kzl99cFhM7QT30cf9pnaZxiLRspQzEfmY/Cs/1Tr
V5/3rHzc702te6HrI9Xop22W9mbGX+TYWd+QfNw3g42ZnQ9GgVvgoaPzMY7R
1sx84uARWOPYfDDIxcm4xHhy+/uO9Hc/J19jJbhnQJ38/9yzHqh2C/VaWp8c
eqD2nDo6+AZYv7m+S/PBJOTOzwc3wAywyTzXa1rruGTMNf5S7djWMr6V/oH6
1rCvS9U/3tjjjJ9rjbW1H+9+vnXZD8rXmIb1Cc7raL82H/cnd+ru9r/AZ9Lc
sy7QPt88NGCnK/PBHNyjJybjpHwwysJkXJYPnsG2vnZse2pfT40TrbvAvPXN
4T1pY/zlrq+wVhttV5i7UE3ud96xIeoMdn+5OpfpG2rsFZ4BzQ21wyFwzOv5
YIah+lI2wg+vXOXZ02fAHq4Zng/OO9mzrevzwn+1MXxX+C7wndlYvZP1tzeG
Hl6zj721X5OMV4x92f21+q8x5mpzyN2jkPBePu5rzsKdyp1WNuYN7bwPvCvP
5IMh3s0HAyzOx52/KB/3/ZvJeCsfvLOP/tO0wTgdjN3H2FOtQdwS897OB6uM
shbrdxyj9dMnd/tH+eCb6/LBO0vc72vNt9W5Xv91+pe4HqMu54Ef4Iyb8sFU
+5l3Qz64AxusAgO972D9nn7iblTrPZ/Pe8aMNebGOjUOcM/6Zut/6LnG1alN
3Q/0jbOH97Wd4TxOjZSDuEuX5+P+7KJvaTK+ysf9uiofTAFH3O7z5Fl+nIxb
knFrPliG/y4X3DLB/YH6zzR2gvsD1f/YnAlqpEzEfFudege772Ie+XDRZ/lg
mYnW/dTcW42fqO0z+x3vc0HzDs+0yjPCD5/na3w02fUX+WCgZfngmTudl+k7
27xD1FzmfIj66Hyp/mRzvnSs0n6Xv8Fh9vq5PXTXt9y6dxlzWJ1ezrV/fqu7
/Q2Xa/86H3zCPcPd9pgx9+SDHfCvNgZbT+3YztP+bTK+ywd7ME93fbi17rbW
V+r1VOvefDDMN2rwjYKH7kvG/flgmF519r2MPc/657v+Rs17zT9fvWlqkLsi
H9zwYDIeSsYDrvsagx/2gH9+yAe3sP7e/QP6V2ib7lkvcP29Wn2M/TEfDDTD
/B9dX6j9J+v3y9cYi76O1DfTHL51fNP4tj2s/yGfyRGeGc2f88E8F5rPHm54
PBlPJOORfLAKvAVjwDm/Olj/op+4R83/Rc1fjJllDP70XTna/WPW4j36PR93
+Bx7fsS6v+mbYw+/apvtPEeNAepcos4f2jgHDPV3PjjkL30Xq3uJ+z9dM8Mx
TybjqXwwzkA1nrSnI+3xLzWJ507hjltk3LHWRuO4fI2rns7X7rDj3f+pFjpw
0T/5YJh56v9t7lPGz9P2jzrP5uNuZP+vuccmd+p/PINCcAfcwp47fmU+7vzn
nFfqW2D++oW4p9dL5rUKwSVrFiL3WeOfzdcYDf01CsEtz+eDZ1I2Yv+Ca2a4
Bp5BE+2T6vSy0D7Qes7ck9yvqT65axeCZ2CVdQvBEi8m46V8cBD+dYzBNkw7
NnKwc1/tk+z3LUTuEPsb6vpFa9EjesPUetma61l3t0KwTutkfjUfXPWKz45n
eLXxV1kf/8nGDFOPPXcjd/DmnpXnw3nhnz3lozaF+JtmvUEh3rX0nWNfrxCx
bYwndw9teyWjXSFYhN+X+GvNv0YbrIJ+20KwCTy0YSHGRtqYYRbW6MEtb9sD
9Reb/6b9bqgt7Y1+LisEn5DbvhC/xfv+HpsUgjk2Ngb/3oVgEOybaMf2nr8j
vyH373X2t7E9bqxWe/tsp/6m6lGPuh0KwUCbFeI3YE0M+821bWYfHazbwdz3
jCXnBn+//xXi9+yWzIcU4t6pFuK7yx0Gn8AN+xVi/D8/FoJByK1fiPsaxjig
EIN1J7WX+r7AIplkn/U97uhz6Kgm6/0LkfeJseSkHEPe7fZDH8RuUQiWqm+d
+u4/VusT+6Af1vzvY2CPLoVgjy+0fWbvnZORS0a+EPzSxXhYhD318cNq/Lss
mJ/YlHfQQeNz4263b2xdtBcLwSwFe6D+QWoUCjXGudPYbQpxH3KXLrNemkse
/MRz4Hnd6vO6RRv5pULoHVwIPumazJVCMEu5ELzSzd99uTZ85C23F96FBoW4
k4n/Sr3lxqU62Lr57vAOkQOnwC+HJust1cDOHvsh9kP8Pb5z1K/4PhJDb9+q
cVgheOPwQvDD966xdS/EHm7ZqhAsc7+55GFfoa+hz72rz7Crz2eVsd2N5zvD
N2Iv+yf3fuv2KERtfhuYaOtCjG20Ecd5yetZCG750R6o/4Aa39v71trwUZea
b3u+np6XdwH9bZOxXSHudtbwzBHJ3KsQPIJ9O+3YYBzuXO7iowvBI30LwRUP
qfGwGvTZU/3t1etTCJ7pXQgealQIJvpNH1o7aGtkH72t29tc1tub/4i5v5pP
7o6F4KOdkrlJIRgCG2yCHfaAf44sxGDdTz9xjQtxR3G/vWIO/exgf/08bz9z
WZNLHhzUvxDPB745qhB71vTxZJ2+ntb2p3F/6XtSrT/t8SjPypkbmUd+00L8
Bn9bE3aAIZoX4jfCd0wydk5Gs0LwC2wEb8A87GGpnY0n9l/32JuaP0A7GikH
Me9SqNV7zv3T5pEPwwwsxN2+hnWPVQOtXbQfaxw6LTwH++PMPaEQPLGOtrW0
r+36+EJwDLktXTPDM8cbQ96J6qDXSj9xuxeCY3azPvn0sLbagxwn2MOuvh8v
GTNIOzZ8rdVn/ZJx1GplnVesxf/2i/9uMf/bqnXtD4a6vhB303XJGFwITjmp
ECxxeSEYgxmmWLOYMFUhmGNoIf7WryrEvX+SuWjW00/cgkLUn2/Nk4whl2/U
lQ7WV2i/Ut0rtNPDBuoPtrfL7Iv9kEKNz4ZYG5a4thAccUohuGR4Mq4uBK/Q
88mFYJiUaU425irjiOFdhNth/mvMxTfM+I0cG2rb2xhiN7Uu9RcVgoc6GHON
/V2rDzvfvZ/8nm1sL2n+CPWGeM4NPP8VPh/8mxkDqywpBKfAMzDTqY7TtBGz
2LjF9kYf+/tO3GA8uSPVHumed2U/9eGXUYW4u0c7s8/Use2vXifr17eHJWql
OqeZe2Mh2Ib405NxRiEYgv+dMOwBl8AoY5IxNhk3GX+j9cYUatyGP+d59/Gs
m/m8OE9nc2+yz/08/xjzM/aQU+tm++hiXwV7u8H6nbThG6f+TeZ1du5iTk7t
gzzXLeaSBwe9XUnewWrC1sl8VrKfWAjmKOkfn4zbCsEwsMCt7rvqO9PYg9S+
1fWtxuAvF2o8xH5CIWpVXMNGdxSCa6YU4r4/R/vt+m63h9u0H6ytqs5Z6k9w
v6wQXITmXclYXgiWuEMf9juNYX92IXhkUiE45y7jG2jbUvuh5jXwWaXxd5qz
lbHoTS4Es6RcNdlzTTSf3mEYWOdue+xh3TR/K3099HN3PpyMR9Q8x+d1lDbu
zfuTsaIQfHFvIf7W4ZZzC8EzKSexn2pMT3uZon0bx9baeqlzn+MI83q5pyb3
OWx0nlr0fY/78/WfZ8xUe5jqnn772PM9ah9uXiNzYYgLkjFDG75pyZheCJZh
Dc88kIwHC8E+O+jvq62fudP0PWDdFcZdYN5DhWCVfj7bI33uD7t+SM0+ajS2
r53UaKzOg8aiM1M/cU1cz3RcqO2FQtw3z2trqh1ugX8ec7B+VD9xswrBGLDH
k4VgkdnJmFOI94LY/s5Hu25qHnz0hLmw0ePuB6h1rPvZ6jazn8eNuUiNWdof
03eROSkb0QtMBKNcWgh+uMR9C/un3lPJuFgf9qcLwS3HuW+uf6Cxx7lvbo2n
zDlO7UusN0idZ5Ix1/qXuj/enEHun3XNDCdxh25QjPtrV3PneradPSv7efpX
FoJFyF27GLzBPfqcdvwLC8FqC7Thg13gLVhmN/27GdNa/fnGPm/8f/r/LcR9
vVYxarGGp9jPM5/euN95x14wlpjjiqE3WE18LxpLzNpqDtX+UjJeKQQ/nKxt
aKHGRvhhlXU8O/kwz7rFYJuX9b/kM17ps7rKHOL4tvBd6a39Sn0vWztlKdav
+hvBPOsXwzfMOuyxr6fuevawnvar1UEDDtq5GO9A02R+Tdur9vmM/rcKwRGn
+V7U893gvn89GW8UatyzYTFs+GACYrET/5rxI4xbrH+kGilPMb/peEsb9z93
+/vJ2LgYTHGddTcqxvpNc9/QtnGxFkM9bKPUfLsQ7ABLbF4M3kBzE9ebFoM/
4BYY6B3Hu9puMJa4d4x52+f0tvvNiqF/o3qbqbm5dvYw0HuebRPPRd/va8M3
1rrvOY+1B/r/XzH4qVys3as3WwPfF8n6y0Lcrylb5IrBRB8k48NkbFEMnqmv
HRu8A9fcop/Ycf4O6Na37kfGfmh8phjcki1Grdu0ZbXXtxa5HxeCYc50jFfv
VmuSN8G4T/ztP7CHnProwiWfF4IjJhib8h3zp8koFINb4J98MfbL9H1m7B3q
4r/DuGX6JxVqDPSZ9b6wJmt4qFSM5/+pdT/RXiyGr2gP1MZ+p77J6nyhRlkd
frdz/O24Y7hrdkh8FX9r4r4qBLOsKgRLVIvBE+dow/dNIVhkdSEYZLV74tFB
7xzrpTrY0CL+a3P4PsE/WxZjvVUxWALbvdq/Mv5cB/W/0kdMg2L4p+q/Xx9a
8MPWybxNMWZYo2ExBmtqfVsInkl5iP139tLQfr7Rfr7jPG3oP2CNaebBQd87
s7+gjo14eoFpti0GDz2k7wdj+ZbxzXzN2G2N59k18MzEzijUeI79j/6m/J47
FoNbti8Gs8A4cNJPjp+1EbNdMeJ+MuZHNX9036gY78mj6jVScwft7GGXXwpx
j2/nuej7V234Zln3F+dZ9kDP9JsyEvHkNS4Gz2D/Ixl/FoJF8P1WqPEZ69+d
52jfyVw04JkntXHeh+1xjnmwD3cf99wGPrvG9kNuk2KwTVPvtae1NdX+hxq/
2+Ol9nmJ9j/UoT55lxr3VyG+TXyLzjQPGxw0J4lrnoxdktGiGDwBX8zT/3ch
fHAMd38zY1fq+8dY7lzuW/zPGrdS//xCjYfYwz9rFIOrYCK06YG6xxeDcZ62
rxbam9vDLuYtMPfYYswDiqH/r76WnoX81sXgi12LwT8v6Icx4JQTirFvpZ8e
BhWDhbDBPtjXsrfjteHb1fx1zOGe2zuZO6h/YjH45SXrv6zO8eqvaz5xJxXj
3SAeViK2tf3vpm2Qtdauk0M83EPM7sVghZOLcRfvUYy/79195wYnY0gxWAb7
Htqx1VNnd3MG289J6uxp3tBiMEk9a7Ee5mA9VM31rQfTtCkG4+zpHp0hxqLT
Vn8bz0ofnHcjdTkP/ACvtC8GBxFP3l7F4BZssAoscoqD9XD9xLVTa7jPZ7gx
GxuDP63xjnvWe1t/ZDH4ZLNirTZ1RxTDh31Ta49wPUL73sUaB21eTjiqlNjL
wSRonqqfd+d9/175u92vGDH4T0vGPsnYtxg8MaoYvFHfPXn7GH+a9n3U66Bt
lHY0YJ+UpToWa/U+cs96/2L0AtOMKQa3ZKw7Wg20OmofbdxoY6g3thh8Qu64
YrADLAFnoN+pGMxyejLOcJ1zTwx+2OQA50729YnPKW8emjBOGnuqz3ak/nHG
4Ots7Bj7y2qDibCPt89x2vB1KdZ4aLx2bPDPgc5pzJnF4BzsBxWDUSYm86Ri
3K8TisEqZf3wS8ox7Luak2pXjT/LUVGDeGJhFWImql81bqK9TLAWDEPswfay
pfEHq9HVdTdjS571TG3wFHbyzk7GZG2HFINVWBN3iP4trXOofuwwDmtsW6nR
0NjJ2t7we9HG3MPMw3+O8XAP9u7FGntN0b+1MVNcY+tRDAbqrh75KYd118e9
xt3HHYnmucVgDNgHPxqwRa9k7p2Mw4vBMPjhFu788xysp+onrqd6U9Wcasy2
xuCHj45wZs+aWrDMtGLwECx0ZDKOKsYdf34xfNi3t/b5rs/X3qtYYyJGWmdH
NacnY2Yx+GGG+x3U3dH9Bcnok4y+xeCgGcY3dg8z9TH+Au3ssffWNkM7GilP
MfcrBsMc6dzPfnubD9NcWAweamLdmWqg1U/7TOPmF+PunOczSrV31Ybv4mKw
BRwEs8AwFxXjt+9fjHfhaOf++oiZZQzPv7+/A3vqoDO7GKzSzJzZjjnajykG
q8BDF6rXVBs+eOZo4/4xLu0FdkrZZ5b9pLkD9D2TzM8WgxcGmkP8JcVgHbjo
UtfY4JFnjGeGv5om99OT5j3hs7rE3OONIbaVOujN9fmmbDTXZ93cfHLhFphn
pT2eYN00v5W+E/QT/1wxOOREfewXJ2NJMe6e54vBGsQsKAbDpDzEfqE5zxtz
eTG+K3xfXkzGS8VgkfnG7+ZorW2I+i+YAw9d5ri8WPtOsb5CvWFq7m79Pcwf
bB+XaVuo/gv2crK5LxeDHWCJ15LxqmuY5cpi8McVxhP7SjF4pK3+k7UNt7cr
9L2s/kvGXWXeK9YYrq2d9tes+6o2fFcn45pisNHV2q92z/eRb90PctHrxbh/
h3i+oZ7rNX17m4deyg3vFINXrk3GomS8WYy7/A3t2OCa07S/aWwH9V43lrqL
jV1k/FvFYJK3rTVK29uu31CTXN4vuGZfxz7qnWbNt/QTd519j1br+mLwE3Z4
5cZicEdHbSlb7WfsGPPfTcZ7xWCfsfpuMPYaz7l3nThiuKe4585V513tncyl
9k3WZw0LfVAMtrmhWOMp7O/re98e3tN+urbO6tzkuFnbh8XghHHmf+ga20fJ
+LgYbHFbMfjiI33E3VIMxllaDM4gFl7pov5SYz/Wf5Dxtzhu1Yb/E3Nvtd5B
6iw1p6s++vi0GIz0ieMscye6xv9lMlYVgx/uKtbYYaL+z5JxezLuKAb3TNQG
83xeDAaapP+QYo2N2C9zf7Aak43/wnG2GocYe6gxX9rPZOO+NP9gz3WYsXfa
e8pEd2pf5vouYz+zziTPh315Me7e+5OxQjs2/r5him+LwQZ3a8PH+/dVMr4u
xjegh/6v7GGV+3v0ry4Gq0w1Z7Xrnsbcay1ivlH/a2O+0U7OfcVgmXvN61ms
8da9+uCDB5PxkDpT7Os+z9jLM33nuXqZl/p7a4NhYKHvHdPN+c71NGN5ZrDP
A84rzP2hGAzUt47/AXvr63m/sZcfi8EzM/T3M+YCa//g+NGYC43/yTFTXz/P
Df/AFHDEY8YT93MyHk7GI8VgmV+KwS2z3B+p/0JjZ7k/Ut2fzZmlRspEzI/W
qXe0e9aP2wtc9Fsx2Gi2dX819xHjZ2v7zfki6/1eDK4gd+dSMMusUnAQ+nDL
H8n4sxjsAgvBM3DNAP3sn9L3pHkD7O1i88ndSR5qXIq7bt1kXi8ZfxWDXf50
XGr8b/ZHb8/YHzxD/N/FYB3s9Ixvrrn4m5VqfISvmbnkzTN3F2PwrVkKnlij
FP5/isEtME/zUvDGc+awZ73S/QJj/3X8Vwxbi1IwyfPaFhZrLPWftf41l3rc
7cS3LEXMGvZEvRb20FLNFvb5d53cVqVgEhiKPM60ayl45SVjyG/ledcqRWwr
44iBYYhvrf+KYo3J2K9dit+N3+8q44gnf51S8BAxr+jbrRRx2NdRb+1Sbb+u
fuJ2LwUjveKeNbaU3f7wfeKdgE+w71GKv/PDSvH9WL8UdzzvFWzRNpn3KkX8
nqVgE+7/a4xlbFAK29Xm4WtTCj55w7w25hK7SA3037RGW+PbWIu+9jS2XimY
h3h6gW0WqYVvQ/2sU27YpxSDdYdkblcKtiF3o1LwD8xELvuUn1hvnIz2xrcz
Ftv11m9nD5towwfv7F0KVmFNPntiNi0F43Swn/esvdj6xHUwFzYifjNzri/W
NPDdoP471sBGLBzEvZstxT38gc9g32RskYxMKZgDliF282TfsRQMBP/s6/5D
c/d1/b9ScEvKQOzrl4JzyN1PPzY4aAtn9tQgnlzi9y8F49BHGrufPXRUkz1x
8EGhFIywuefbzHPcpgbMAP8cYE4n9dljZ5/zefBciO9cCs5AA63UTg4+mIj4
nLl5bfi6mJu3vzusQS3qLtNH3weWgou6mMeaXDiJNf6i5yP+oGR0LYX/S/3Y
uiXjkFIwBn54AYYplYJ3Uk5iX1ZjlRroY7/LuDu1wS/oHFyK8ZXaX2ujJgwD
J1WSdbVU45p0n66JKdtL2T39wg/0jGY3+0eD3AalYJGtkrmh2tjgnO6l4Aq+
RVtqw8c36tBSfKdgofv0H2otarLfSj9xaKHDt4RvHd9CWAX9HsbSB/Hof2ON
HvbQ3fjDS8EwxNIvrLS1c0NjyCEORkr9jG20McMprFOG6KMN37bJOKIULNRT
O7aHrd/THrbThg/m6VUKDmFNPntiti8Fu/QuRa005qc6cb3NhW+Ib2TOw8Wa
Br5H7IncH+37V7V3KAVLkfubvr7mNdKHHRv3DmyDbQfj+mlnv2Mp/Ni4q7Af
VQoegWvwP6EGvAQL7aQNJmLfpBS+1E5OY/WOLIXOzFL4Z5TC9oc1WR9lDN8s
/pmNf668qBRM90spWIg9zHNJKXgAluifjKNLwRP4ZxuDDb7Ajm0X7ew5V381
Z6lLLDnHlIJbiJ/j+mJrNdfGnnt+QSnebZgIHhqgDhrs56hDfXzHGjtA/zFq
XaL+8aVgjLWMXaNU462BpWAfmGduKbiF9aXuj9M/UFtLdVu5vlTdNY09znop
G7Ee5Lngn/nWP1bN+drnWW+ePczTvqs6aMBH3Jvcn6ck4wRt+Lhzr0nGtckY
Ugp22MBnudDnCcucmIyTSsEifEcu04ZvXWP3MP4Efesat4f+9dRIWYl5sGOI
tnXtDY0rSsFDbax7uevB5p6k7Qrtu/lcFngONId6xvaecy81r3R9VSk4Bt6B
QYY5Tta2l7FXad9QzXrO7K9Wv51xV7u+Rjt72Gi4v8GV9nCFv8cm+ja27nDn
je1hb3+fDsaP8PdcVAq2wX5mKe4d7rnNjBmZjMXGLNKODY7YVzv+60vBG9c5
s79Bjc2sda0a1DpVDbSWmAe3nFYK3knZaFQp2Ka+vlHWXWzevs4dzdlc7bQP
7KPVIPf0UrDI2FLwyhjXGWOIvbEUDNPJM9zoerTxGbXx7e+4wZgx6hLTWZ2b
HAeohf3mUrBM1vopH+XssbM5xHEvTk7GOfrOMPZUn8n/c2UpOKeLOUtdn1UK
tphQCjYaVwpugYduLQWrsL7F/Xj947QdqNZBrrGVjBnvOLNUY6YzrQWnwD+3
W/cMNQ+25u3Wu63Ovqv7shr0fUcylqlX1caZYJI7k3GXvtvrxB6ijfWh7uGe
icmY5NxAvTPsL6/moeryreC7c7n1JpZqvIVGykfMZzsma7tTHerfXQr2Wa7+
Xe7PNneStuXaJ/t7owOr9FCDu+0v73B4475k3G/MPaVgCtgHTpriOFfb4Wrc
o52Yc6xzjvt7S8EyPY271/V92tnDSVNLclMp7viHknGetqnGnOv6XPfb2DP9
9nZ9hNrbm4vG9GRcUArOYH9+qcZSrKcl44FScNEK7dhS/umj/3x921tzhXWn
GzvN+AdLwSoPeZZ+2h5yvULN3vbV2N52VGe6Og+Y19g4WAh2gotmap/h/p9S
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
LvR37+9vP1PfTg56mVGNe5d3YHYyHk7GI9Vgm4v07aytv/YZaqHxeDXYBH55
zD3rJ7Q/bg+PaW9iX03tqb/as7Thgy+eTsYzzuyfqgaPXOKzgF/goTmOi7XB
M09Wg2WOtY8nfc4P1+m/sb/HkT57fPwN8v3JNojcAeY389ns4m/Q0j6Ot8dB
9rCLcS3s5xJrP2U/T3mWgfpTXqMP3rMfqvHd4vtWMvYZ66ysBsM8W417fl41
eORE7fhfrdbu5xeqwSDPGz/XnJRXXtCGr5V1nvUsC6rBPikPsV+YjMuqwTIL
9VF/vj08Vw3+ma99nvaV+p6zF2LgjyuqwQ6v2Dec8XI1eOelZLzoPNS6l1eD
XW6oxp2W3rXsb9S3h7G72+MenvcF9YY4D61Tj/p72cuVjrb2N8zYl+35cu2X
u99TnWHGcGdxx77vWQd7XjSvss411eCRq6vBRa9XgzHaaWtvbDvjF1eDLxYl
4zV/X55XB237qHOK/nbmo8W9Bre86TzS9WnObzljf6Ma3NTeHkeo97r7a/Xz
+y7w94cT3q0GK/B7wBDXJ2NJNfgk5RX211nv7WrcteS9Zy7nGe6zxD/amNPM
GeVzWKLmvp57sfVusP57Pv+x9vaOda63t+u0jbbOGNfv2Od1xlUbxD3CfVRp
EHvWX1XjG8t9A7dwt9/k7/5BNTjl42r8DcMWWyR5tyRz/QZhn6CP+PfNuUkd
3uGPzCe3kzZ8t1aDY9C6uRoMQ33ude73QoPQ+tAebjKus3VO99l8qPY4NZZW
g4vIRyffILjhs2pwxFn2/InjU218J/lG5rwn+X5yp/Ft5JvSyhj8dzjnXX+i
5sfa0RnbIM5SbBCMc6c9sT/Lfujrc/v6zHGWPeXtH32+YXwPB/k8x3vugzzr
LZ79Zs8PV31ZDVZZ5cy+3CBYpWQfJXvj9/+6GncvDLLc2Aa+M7wraH6hzhfW
ONvcr8znDieePNZbNgiuWGXMFPXR5h1kXfE9nFKn3++qwQ3fVoMVtpZbWDds
EHu0t1KfOPjkm2SsdmaPH964357P9llP8rl/4bPgvHf5HA/0Ga72eaTnamDN
6fb2nYM7brr1ppp3vj1Ns+cV9n2e9vPdr7BHvnt8i/j2bUdcMrZPxo//18R5
x289fn9ciIgSWdG97zuEjChRimRFWVEZqZRKpTRQIqKshoaUbCJkRKGM7L2/
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
F/ZC3L32hN5V3/n2c4/+w+3pC+308Yh9HeK5F1rrS58H8rXPBc5yf5LFuXgH
vsnFe3C/viofo/59SR7Ixew9WowLxbnPnCPEuFD/EnOIX5kLnjJRDOwPWm+l
9ionW2z9xeoXGTfRWl29l+/EJP+HXHCPVbngLd/ngrPAdeBGDylLtV1sPnGX
mf+j9kn6utnrQ/b6kPoqa4G/zHuHD3V3fVjMS8W9TOzLrX+cPXwv1iXalor3
s7E/JXk+F7OlOv/QX8gFV7jc2EeTPJaLeT9FH/bfcsEzfs3Fb/rxXHxjiHvE
vCuM+U0bvh72+5M1lptf5S7LxXpCvMf1HW8fv1hzirae2qfYV9U/VdvJSZ7K
BWeAg8BV1uSCm5xknTXaf0+y2nW6vieN5ZvCt2WB+lNiX+H5Vrtfbe5TxpEP
t/kjF5ylj708rfQ2lv0z+vl28d0aY+4Me5zp+odnnOY5H/Pe/p9L5oL/UAs+
9GwuOArz9u9c8Ar2f6k/p/9Z459xD/fgnXjR2CvFnu0eWz9zwWBuw0/+Vdj/
o/2/XHCJF8Trr2+O/ZD/vHh/68M+wD7IWTsfvANusns+eMxu+cBeKx/4xMNr
Blr3X2vDheA8r3i+vt7zH55plnnkv5SLucH8+kDsefZfxz02+oH30BN/foBz
XZWPXl8Sax1jiH3VPl6xv5ftqY5Y4MIT+bPl9f7ZBFzmODzoWvHq5kNfNx+8
hXnf2n+eyb6VfuKuT+tGad04H3MaLrJ+2tfzzzytxG9lLvvrzYUftckHb4Eb
8c9M0dnDW7DvnQ88cOE6/zOOmPXEqGuf9LeX8cTio48NzIej1M8Hf3hH7H30
b5gPztI2H1wFnoMOl8J/UJKD8zGr9rZnegUHjHeNvcl4bG21b2RNasNx9s3H
c29nrbba0fHRJ/3Ut6/59kLMe8ZtkY8Zcq/nXM9zt8/HuwX+R75nHfLxTWmQ
j29MQ1f0Dsa3t3Z7e+uYDw6yv7k83wY+Z/TbxN8vH7xlk3zwlSoHQm+kjbXK
f1aITVy1l4/sESz0TfRT41bvj9wD8sFJ4AwH+Sw2Tetm+eAv+DsZgw2Ogx0b
/AU7zxAuUc1daH/ELdT2iT0eIAZYjfNR90DfBe4dHrN5PoR9Y/db6D/Qup3M
/Uzb3caSwzMkfssk3fIxX47Jx2wr5uO7C+c5NB+chP0h+dC3ygefIBd+cXg+
uAT7w/KhL9JP3Db54ChN8oHxpfcB5pfikgcH6pwP/tIkX8ODlohB7c72Qw9b
54M/Ifdp6yzO1/bzjT3BS47IB3f43v0qe+9i/3CVbdO+qfFd8xGH7UF7Qb+P
utqIhd90MWelvZLzgBjf6c8kyeaDr4BzpD2gg1H1L9PG7Nw+H/MzYx3qHWXe
kd4V99DE+1jsfYABVi4fnISco5PkkxTywVmO8bnDV9DhX3nrk4e+PBfvQsn8
Y8TL689pA+NH4x7zHYKvHJuPeY69nA887Lxzx/q+0U/Rvh61F2J+rhV3nDg9
88ETfndf5TUIXKV7PnhVJR8chzzs5DbThg9+ucp7oe8f3Hc3njy+C3yH+M6A
Sf/k9shHbWpul4/n9KTPC317z/q498cspufj8xH3hL2stl/w0LfTn/VdOd/6
K3LRww6+C+Czb56PmX9iPmY9dbDBcap2uAw+ZvEp+ZjHJ+eDP/xj3NNi/2GP
J4gB1o754C0npbVXPrgMnGYndbD+Ud9Z/0nWPdHcv7SBCR752HuZC3cit0U+
uMOu+eA/2LHBO+A6fdIefsK+dz70XfQTxxxhRt1gL+Q/byznPdncf7XBZcgF
Aw4Df9nde+K++uajF3oilpW+iOtrzFr2sKt4fcxbyz7o5/p83M9znh/8fj6L
/vngPujwFnjWnHxwoHX076kNLnNlPnqclQ/OMS8ffGCOuf+ItU4t/FPF498J
g6vMTTIgycB8cJi99IG1nraBYs617lxzW4lXV8yW3t3u5gzKBx8YnGRIPngE
tnra4SfwmGsV9tfoJ+60fPAPcoeas57Y84xt47q3+3rmbeBdc+dwm+vU29rH
BrX6qnKcfYxrq28Dsfaxv+uMpRf4ADPornzMGfYL1U9PMiwfPOWmfPCK9uob
6T8jyYh88Iz5+Zj1/L55b3lXbtTX0Nh9tbU3fyP74Lt0i7nsb1a/RdyqvYM+
+qpyqBvtr702fMOt19D9gnzwBfjDqCSj88FFDrDnW/PBXUbmg7eMch2pr6N9
MCMX52PWHaDvNnNHGD9CfRNjbrMuNRtb9yD7uV3/AmNu147ON4vvDd+wzWr1
1VisMz3vcM95s/dzkzH44VB35oOPwE/OzgeHqfIk9DFJ7jDuYHu7XRvvwd35
eDfOMn4LZXNth4rPe8O8hrOMVc7Rxlqd5+AdJuaW1t/K/EPsY6w2fIcbf08+
uMJ5Scb7DOAicJdz88FRxhlP7L3WPEf7tsac6xnv8LxneZYzzSUPbsPcWONM
biJGNf888e6zh0X2Rl8Z6x/mWc/XNl7sReIvMreLeE3FJP6CfMzMB5IsoW4h
hH2TQsz1JbX86LyXOXMn5INnPJRkqSv6g/pz4sNRLkoy0fwjvdfFYh5pDfKO
MbbKa4rmlYwlDj51YT641ATrTFA/2phjxOvm/uF8cIZl+eAN3bV1s3e40qQk
F+eDgywz5jj1kn7mA9/v63IRW9F/rDjHGVey76ViYb80H3zlEnug/iNiXJKv
4TLNjH02HzOxjzEX18olj3dmZj5m667eyUXeG/mXiTc5Hzzl8nz83pfn4ze/
vbYdjN3e+Gn5mLtTkzyWj3f00XzM4Kn6jte33LzLxIKbwFmeUNg/rh39SfWT
7KG59SeLudwe0afoL/hsOd8z3ksfzwyHmJHkinxwmSofQp9uvafywWEe8Rw9
XY93j7+3Mb3MOdl7uELMnT33NOvNtD69nFLrOT1tjzPsbbq23tbp4/5p+5xu
HHwALgBPqVeI7yzf2PULobN/Lsnz+eApfxn7p/Wf0w4/eTHJS/mY+/CTtVL+
bGtcqZ84+AjvzixrPycWZ/rPXPjLv+pzxbpafY6+agwc6uTkf8Fe6LW/+xeU
F60LP4AnrFMI/vJqPvgDPdcpBE/BDn95WXlF2zz7IG7SZum3lmTiZqGvbe7L
5r7kWV9Sx0/da6xH3cH2s24heM86xhB7nTq+3Xzus8wbZE+vifGqZ+vvWed4
J9zNEGOIhUvAW9YrBC95Ix885U3XN/QRU9fade1tA9+Neua+bjzrUOvc6HvD
O/O/fMzuKl9Bf8s9K/wF/nOz2MNq9XKjfYD1prnDjN+wEFzlvXzwhXfzwTE2
LgSveDvJO/ngKcTWN/5ta75lzgjj6nre672j1z0LefAfcvn+8E2Yat4Z4o0Q
a6Q9bFSIPkbZ3/v2zPnoBX20fW8kPnXIvVXbSDFHWZPafIv4PvH94tvVoBAc
hvMy5zcpBK9g37AQ+of5mP0f5GM2f57ki3xwns0KMbvP1E/cinzwko/FuN06
YN6ubdNC8JhGheAuH+druBD5n9hLI/uhh4/ywavOts6H5oNzp/2wBxv+sHla
t0jymT3DHcaJ/Wk+Yu4x7hN9cKB8IeZarhCzalU+ZhFnbex577JO1QbO3WKf
4zm2LATvgb/QB/oi+4AbfWYPW2gfZ1/n2hOYje3/XH1jvIePXcd4H5/7bMCG
e29dCG4Ch4Enfal8pY2YrQoRt5V90h+8A/60bSHiz/dZj3dFbyK/Ah/O8nU+
5to3rugX1bKBCd6D+i6wD2o3qdXn1+I1LQQPI/77fHCGST4Pnssy8Vfmg59k
jCePet/ma7jaSnOZmw/7bDn7fZ6/yvnA+MHnvMq8i8T6Tgxs2UL0sczeLrE/
ztfUM16iD5ylYmetlTV3krjE8edpvrl843dK/p0LMXd2dg6xL6R9sRAznz5/
zAdfqRSCk/B7LhdCZ/9LPr4x/O7Jg+c8as6lYvxs3BTvh7uhDvpk/SVzwdgu
yfaF4AB8Qx7TTy+Xi/2IvT6qDd9PxhNLj6vzwRmq/Ab99yS/5YOb/JoP/rKd
taZqw8d3j28N3z6+jw38VjfzHjj/NLFWi/OE/qmeF6wdCsFfOM90689Qx05d
ONDTxq6232liNvM+zrSnDzxj2fv/2Tv8yXv4SZ25+0c+OA98Bi7zlzZ8M+1j
jTbmLnykd5LmSXYsBLfBjg0Ogw3e86w5VQz85D6VpIXv0s7udykEj3nOd+55
6/9pTzuJCfbf9kqfcAV4yW6FkN0LYetXCI4B34DDwG36Kuz7WBMOU+V26LsW
4p6be6419v6797+D5z6pEPVPtG/O0kLctbyHUwrRx9r29ar99jaOmDr2dIr9
c5Zd7WtX9Tr6weG/teS/s+T/PwYeuC0LwWc4b3/3rKcm2SPJnoWY/QMKwT3q
qsMJ8DOT2xZirsNH4CWtxTnVeOKIb6ltgHbiiG9VCE4zqBA8CvtehcDDPlAf
vIp+WtlXlWetb28DtbUSl5zTxBySZGgheAWcA+4xuBC8p00heMverm30bWA+
M+3sQsyU07TXM5c+29jvW97Bhtaj1j7eEZyKFb2tvWxkzMbuTy9EXLWXDe0D
rL3Fwk8/Z9nTQM/OnbbzObR1v28hfs/D0jq8EN8XbB/4O8fWUDs9DHM/shB8
oJH5YLYz5nTjwACrfSG4zRlJRhRijsNlOqiPFAd9P/1nWHe4uQ3NBxM88k/3
Trgn+AG5+xeCNxyQ1k7ascGx4C6jC8Ex2I9S76ifuAMLwT862UuVd4zyvCPN
3dR8+A+5HX0HNvfez3J/ZiF6oacqD+tkjTONaWwPB4g32jzs8Bxi6WtiIWYK
s+kidfbwlIPSenChht+MLYQNHxhwjUOT3rkQsxvOc67vx5hCvLf4iYOrjBFn
S+/kIHsZZy485pxC6E3E2kZ9a31NrE9fcKuxYoJ9iLaD3VObuvAF+MP5heAf
h6e1iz2fVwjOAUeB9xxWCDlc27b2QdwFYnypPt5c4snt7Fk7q4+3blPrUvM7
+wErJ15GrKw6vsuSXF6IWXq4+fTTVYwuno3zHuL9jPWO4EPfGQuPgJNcWAgu
dWQheMtRrkfqI2aCtSfY2yTfjYnmHlGI+CPUqVPwveGdOboQM7rKV9CP0cbK
PC+LCTZx1V4K9gHWUWL9aPzFheAk3QvBSY4rBG+4zPvpluTYQvASYi8xvps1
j9EPZyFmgufljF09z//z0EJwEnL5PvAdaSQuON3EAKvaw6X2AbehN3ose76L
7bmH/kvFv8TcZub/6pnI/9J34ItCfLs+9NsEBvO8yvN6FmLOM9enFIJjsJ+s
frx+4pjDzyZ5LkmvQnCRk4zdwfesuXts8B9yjzf2L+OnFYLTTHVFhwvBd+AU
xFV9O9rDCeJNMW9H47GT80QhsB+3z772Or0Q3OSKQnAP+NfTheA7LfT31gYv
uTbJdYWYVdPM29m87YvpbMWwtdBO/gzx+opBXfjLzELwml2NQZ+lbaY1n6mV
00d9hjlgvlGIWTLUO+DMf8h9dhPvykJwE2xwnxeSvOiK/rx+4mbXyiEerjEn
yVyfK7H9XPu7b2kePOilQszsAdZ4yf0g7S+LV+U4pxpHzFVizBb7Rf2nWLuf
efQCh4KXXFMI7jBI7FeSXJ1kXiE4y6uF4BinqbfWv49515o30F4HiXGaca2t
94pYp5mzt7Vf9xnAYV6z1qu19Nftc57x8wo1fGqI8a+JMVQbc+WOJHcW4jvL
93ZFIXjP9YXgKje4or/pOwAGv+GbCvGbvtkVfZgxxL5dCD7ylpjXiXOd+j7i
3GjuGea8U4hvFetIeyBmX/HB/p971uH62tWKba/t1kLwhvmF4C7z1en5lkLw
F+q8a61bjNtP2yjtzKd7kyzS9l6S942r3sEZtXrfX6z5xhM72n5uKwSPGa0d
HvNBIfgQe76HfB97WmeUvRxg77d67rc8+1vWHi7eB+LcXghesqAQHObDJB8V
gqccqP9sbWPcn2Uc78MnheAqncQ4UN9Z1iD/DvF4b3h/Pi7Ee8U7dYg4K8Ra
qO1Oa35s3Y/NHSPewWISf1cheA+cAV5yj3KvNvydjYHDwG0+Uz9EjM+0f+pZ
bvM8t6kfIAZYdxdifjA7trfvT72Hzvrpg3nGXIPnfK4+3thzjafHLvZ5nnHj
7f8wsc6zP3x8l/hm7Wke7xrzvHP61n+T1q8LwWeYqV8luS/J/YWY9/jgGxPU
u+pfkuSBQvAP5ChtX9XCu8/4RdqqvGmJ8YsLwWO+LQR3WlkIPjBR+zf6jrSf
xa5VbnWRvX2jbbG434oFzvdJVhWCS8AzvtN2sbXQ4T0PFoK3POT6oL5JYh3j
eR90PcZzXywe+MfWwkCWamM9zj29XGr8Ze5/0E/csiR/FGJGrtF3qXmnlNIM
TvJsKc58off6cCH4E7k/FYKb8K49UojfevU3j/5okh+Nu9weftD2S5JfC8E/
Hja+h9Jd2xTxfy7EvIa7PKYs18Z6onvwponZ0/rHmz/ZPh7T9qj3sMx6cDA4
zxPeB1zk9yRP6sO+uhB8hRrNimGrpPU3fdM844+e90T7e9z949b4zdhfzZsu
7u8+B+o3LwaPgcPAl+BKT7vie8b46WLApy5PMrlWXJX/8IzhSDuKST4zhjm2
XtrvlGTnYvAGuAyc5k/lL23PmU8sv/F/kvxbCN7RItl2KUb8rFr1/lAHG/4E
D4Kv/F2owbhKHaw56mCC95L1Z9sDOM/by2x9f1v/Bf27FoOjkNuyGHwBjgEn
2b0Y+7nW+y/JbsaTN1cbXOZlfeT8a84c+9rV3tYqRux/xhNLnXlirGV+S+ui
1ymGH1m7GDxnbW11fAbPetfwIfrfo1jDQTnrHp6rZa18eFabYnAPZuk6ab9u
MXjKnmltVQzOg63KX7DBQ95Qv9a81625p7Hk1DW2dVr3KsbsZqXWm4Ua2+vW
AxMOc4PvGPnriddarFba1i9GLBhtxIRLYa+XpH4xeMiGxt5UqOFb+OEte3t2
8vdJ0rYYPGYD/cSt4z2trW9vY/nO8I3gm4T9bX3kbmhthD7gQvATOE07fTdb
Bx17W+u/K15b7ejzxYH/bJXWrYsxZ6ZYf6r4+xaDn7C2d8+83zjtGxSDw3RI
637FsFW5APOa2bx5sm1SDJ4CH2lvDjgbmXObGB/qb2gO8fsXg/PAa8DA3sh6
+LATD39qYP0G6vCi/YwB63ZjO4pJ/oHF4Ayd0npAMVZ4CvwFvrNpMWSzYtjw
dTT2yGLMkVXaV+hbaK+b2uumnr+TteA1jYtxN3d7T3d7V/jp6aBi8BhW+NBm
xt4lzqfWvFsfeEfYE/186Nk/EneLYg3nZr9lkkOKwX8OVuc9wI8N36HF8KHT
AxyDGXyYeIt8zgcZR8x91tjKfPgW85r3q8plyAenszZ8TaxDDnzqK/dfm3Of
mJ8Vau5mm2LwKnIzxeAfTYvBVZbo71IMTgOfOVx9pb5tjSU3Wwwusli8JZ6X
Xsn71vyVtWqQDw86wjv/zj22B42rcqKHrENMV5/VA8Y8qA1fF3tZZh6zhXl2
YjHkpGLY8sXgJrlizPmji8ErlmnDB8eAX5SK8Zs+thiz/ijfW96VYjH8VY70
g35w6CNnLt+lbsUQ9sdoRwf3GO30AId62B5/FI/+0AvFGk5WsD48pHsx+MN2
xeA68Jru9ntcMfgNHKbsiv64ZzrOOL5XfPv2FfNXcTlfNW+591KyzhPWurQY
6yXF4C5wmJ/soYe9wXNYexbjm8W3cyP7oJ8n9BHTw7M+6n0c7R1xPztYA/5z
fDH4CXwLTsO8naqwn6KfuBOKgc+eeDgH70Mv8aaIOcXc5uaSxzt0RTHmNvzk
Cldq7qJ9uu/X375304zbyXfvT7F2sr9p1j7ZnFnF4Cozi8FF+hSDa+wi9gxj
exeDy0y37hXmkLurZ/vdu9zes+1gDlwNDO6d+68v/gxzZ4jFvq/16QP+c2Ux
uMo/3t3J1ryyWMOv+tTqHb23MbOM48+T/H0X/LCO+H2VU4phu7oY3GJuMTgI
HOaqYsz7fsWY//1d++kjZrYxp2g/Rb2OOHOKwVX2NGeOMlf7qcXgN//PrYox
7/fRhm+AdU81Zt1avbS273nitRazrnnwo8HF4BenJRmoDd+gYvCh9cy/phj8
B3s9fdj21r6e+YOsQ85exg4Sfx/jr01ynefZR6na9jIXzA3tbbA4p6lfK841
+oYYy7wcneRMsdt5X6P1MVPPKAZfGF6M92xoMd47vi83FoOrsL9B/XT9Q7W1
E3tf99g2NuZ0ZVixhksNsxZzGz50s3WHiHmz9pusd5M93KS9vTjD7XuI+RuK
eUsxOA8c5bZicJj9xL1FmW8MvGVEkpHG32rOCH2bGNvR+DP0bWJsR/2NxKhy
KNZRymhtm9gvGLcXg98ssL/b1EeZO1LbAu1wgQPNO1Ab+wuLMW8mGHNHMTgK
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
ua0c3OUAe0JvZC+bau+ob4S+TcSbL2YjfSO9q43LNbz0dG2bicdZ4SPwk9vL
wY3OLAeHOcv1TH3ELLCnBfa5sBy8405zRxs/Wn0z8eFYcJizyzX8ZUv1Me5Z
meeHirmwVh9ni3O7WGeLsbnxd5WDz5xXDk4DT4GH3FMOHnFOOfjJVsbebfxY
bWOMaWIcPOngSuqjEmc90PPeLW5nn/UXPu+txKpisI6z/r328Jl9fWrPC+0F
fxdj7hH/bs+xjTlNxENnDvFncP58/WjaP1aOGfRzkl/K8e1l3t+X5H77+6oc
7+SScvyOq79n9AfKMff5ra80r8oXyJtg7jdJvi3Ht2iRcV21TdS+uBychrrM
/IeSLBXvfn0Xivm1+V3E+1r7V+IssU/4ArxilcL+e3um3+/KwWfgLw9qxwZ/
4RvDd4/vH98uvpXXGXeMZ/9ezIu9kwf0rfRcnG9ZOTjNUvv5oRwz8SHPWeVb
S437TtyLrfWQMfQxxL6O8j4Weydfe8cXunKfP5VjBv9YDo7ySDk4y2TtP+m7
3H5+LccM/sX4h82Zpv1Xbfi6e44fzeU9Yo4f74q+PMnj5eAxy/VR/1F74J2b
ot7TWpPtCx9c5MlycIanXNHhG2vKwTFWl4PDwG1+U2d/knUfV57Q1t07Xuaz
WOU5lnm27p5/qr2dYO8neg+/iU8Pv9tH71o9TvOeftM/3Z562cOTrlWeNcMY
Yhs0Td/XJMObBvfi78z+/+/UysFnOC984vly8Is/tePnn2sy//nnnPCCv8rB
Q/po66t9lnnYn64V/6c5pxgL3nPWq3Ks56z9SjnmPbMezvNPkn+T/K0+u1b+
Kfqv0v+XKzEveA4w4RV1KsEp5ogH9/ivHFyE/Yvl4DBVPoT+krH/GfOC9lOV
/trmibNWJeRqc+ZpozbngRu9bL//2svLnnmQ+4HWHeCKvnYlvg/0z4xjxm4k
7tqei5n6TpJ3k6yfbPUqwSdeK8dv+9VyfF/WSfZ1K/FbH6wfO7brvftX9a1j
XWoQ93o58tYztq41btDGer17MK8VA47zRjlmPBhDxaFmXbHe1P+GPbxiHzeK
x5ngDvCSt8vBFU4373/l4CnYqpxmg0oIe+5iuHFvqd8kdj1jbhLjrVo1zlB/
27sd4b3DZ+pXampTd8NK2ObbA7Wx3aJvvhgjxeEZzhdvpM8NzrN1JebXVpV4
1vg3TvJe2r9fDv7SoBJ8Y4E6efg/TPJROTgIcpY2cDaWL7xn/LvaGmj/0PgP
ysFjNqkEd2pUCT5wp/aGlfCdaT8fuFa5FTG3G3em/rPEayTmZmltXAkuAc/Y
tBI29gvV4T0fl4O7rHD9WN9C+xrjeT92HeO577IG+OfUwkA+0cY6zj29wG+I
h6fBaz7TTxy8iPmZSXHZJJsbT15DnwX3OM5Y8j8XC5wmlZilW8vb4G93VoL/
oMMrvnCPbctK8I4tKiHs4WIHVgKvk+/IImORrbTdZx04DbOa2d1ZHDDuUcd+
qP0cag+Hamd/vzj0fVhaD68E3mLPs00luESXtHbVB2419lvrs4evoMNfyNvW
fHS41Ob2R29grhSX7wTfizfMW2J98sCo8hfWppUQntFD5q+0/hGVmMXfi0+/
35vzoFhdjcPO7GKG9faZL7VOx7Q/oBLvBBzimLTvVokZf1Ql+Apznnmfq4Tk
K2FbZcwP+ojJip1VP7pSw5uIPVrMY7Sjw2MKFXlNJWZ7j7QWtRWsV6gVi04f
9Ey/v9j/T2LDp8gFo5KkWSV4BHqpUsO32JeTHFcJHnKsOjn4seHrbh62x6x5
rHUfF4sceAyxqz0DZ1mtrYf2Y61FLn1VOc4TYlX0dxfvSeO2q8Q8ZYbuVgku
9bt3tmslbPh2TOtOleATPHd41vZJP6ESvAX+w551jb4dKhG7RrzjlROs01x/
NQ79GWs9qw5XOakSfAVM6m6n/cRK+E60hxO0/6mPXp8V70nzyO9VCT4EZu+0
71MJHgJWL2udbAx6i0rwl50rwUd6G/+8NnzY/zEPO3dVjcdGDpyIWPB28V6r
/GkX73sn8+kd3gIv6muPa1m3mk9uX+34iT+lEjykjnno7ZLsW4n5068SXIOY
3SvBHaocAr2lOf2M2bMS3xW+L6em/YBKcJHdzH/F/Jd9f9YVv38lcuBDe1RC
9qzUfKfYtxJvPTFbGkcv/cWhj9fsbw/x8Z1q3sAkgyrBHeASg5Oc5h7O8qb1
WhtPLBwJPvKm9vW117On1p55oDkDtO1l3iBr1NMG98E+2LqnacPXJsneleBG
bbS3UT+yEt+7I+x/SCW40bqer672wfrgReSBB09gpp6hvW0luMrpleBCQ9Wx
w2U21o6/rTn7iDvUuu2MxU/8sErM6+HWaqBtuPuhYtb3/apyHAScduKcbh5+
4trbd0OxOlSCV2HfvxLzA67ygbYqX2Pt4NnJH5FkZCW4TiNx9qtELHe0j+es
xjXyvrn3o8QZoZ16+1kf/oNOH/Cj0ZXgMPtVajgU9lH6RtnDSOM31cb8WyHO
WWKcWQlego8ZeUeSg5LcXon53thYbHCjA7VjY/bDm8iH3zC776vETF6Y5K5K
cBPyPjP3E+PJA+NsceBB8KExylhtrFu7v1u8u4zZwnx6BXuBGFvohyPdaS/w
m85i0Ociex1XCV50jjH476kEb2mi/zBtcJJLklxaiVm1tf2d4/4cczrb593m
nyveImvfm+S8JOMrwWG2NQZbU/Xx1rzXuveae7ixVS72SCVmWQ/Pu9DaGbHA
uUD9/Eq8Z7xvixX29+snLmvO+drgIRcmucj7IvYI1yPdZ82FHz1QCW4C51mi
zr6b9gfFAzdvP0uMmSDGBdoX6+tq7SPMoxc4Dhzm4kpwiW5iP5RkYpJJleAy
SyvBbY5VL+pvZt4l5h1jrw+Z0824ovWWitHNnIq14S8Pe//LrLVU+zJ9JWOr
/Zbsr7vx1bhHxGHuXJlkdiW+u8yXFyrBFy6rBO+43BX90Uq8A+TDUaZUgmNM
dZ2in7jHkjxeCT6y3Hu4rBY2+qXiTDb3RHOeqAQnYe2lfwf76Cl2lVOxP6FW
r5OV5uZMrwRvuKISvOQK9WmV4Bw7WudJa00zbidtJ2tfI9ebKQ/C/lSt80+z
/2rvO2ujXm9jn04yoxIcpoV2bHCYZyo1fIfZxOx7zbyT7aWF55nhuZd79uXW
PkG8Z8SZVQluMrMS3ObZJM9Vgr/spv8Ubf3c9zXuxSQvVeK92FWM3fT1tQb5
V4rHe8P783wl3iveqT3Mf0G8q7TNtubz1n3e3H7itRST+DmV4ExwCrjI1co8
bXP1Ewc/gbu8rG0PMV7W/pJnmeF5ZqjvYjxY8CC+D3w78uYM8BytjKGPVys1
nOtV10HGDzSHHtvY5yvGDbL/1mINsr9XrJezfhvzr6nEezDY/CHqrye5Nsl1
lZj3b1SCbwxV31s/c31+JWYxHARucoP5b4i3t/Wu1TZU+w3GX18JHvO/SvAW
7DeKh/1NfW3t53rXtvYyzN7e1Ha9uOS8JeY7Sd6tBJeAm8Bz3q4ED7qpEhzn
Zteb9J1h/tdJvvGZvaV9uLk3Gn+j+r7iv2OtW7yjKge6xfuil1HGVLnOe7X6
uEWct8W6RYwOnvN07/I9c8G71ecA/seV4A4fJbmtEpwI3weV4EqjtXfSh/0s
fR3Fus04arxvLDb4CTwKrgJn+dA6Z7me7f59ccFo2CxiGzQLnAXmf2jsB+aO
MX+se87xifqKJF9WYqaP17dCH/wE3vKp8Z/W0j+rBNc417hPfZYTfLaf6yPu
W33fiPuJOOcZN94eLrCPC9S/EuNzYy/QNsGcL4z7Qv1za08w7in//M/f+Vxo
H8xr3nN+N+uke/uuEnN3kiv690lWusf+SyXm08+u6FP0TTT2p1r+ldqr9b5V
Z9ZdZuxk9Z/EApOZ9EMlZuwlCj2tsqdV6pe4J/ZHMcDl2/hHJb6Tf6ivSfJr
kt8qNbON/Wrl91q2K4zh3eKdbSzGdOOm2eOvylT7nm4uMX9WYsb84f6vSsyH
ak/4/taG7xqfRRvz11jzSmP/9GzVs/6gfqkxYDGb+C7/m+S/Snyr0ddqFnvW
Os3Cxx4fs4c5808lvm11m8U38t9Kjf8fdfbkzxOb92bdZvEe1XVFX0+MurV8
13tG8te2D/TqnMDG+cldv1l88/ge8K3YqFnIxs3CxjexXrP4liEbpP2G5twg
Bvot+v/xjNU7+lt9AzHAWsf69AE+PdQTh28eWNRfUKn5TqE3sN/qd5o/G/It
amhe/WZxBvZg1fcst+rbpFnkEP9/RW95cQ==
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
ExicyznrsXytFBvePdK3D2Bw9t6vbcdzWWxyqoytjpaiof3YEZrbFK+/p7I0
LV3xvk68WHeYL0HInh/9GicxMHatfaPTXo6u07YmLE6WwGbxy5iJRgo85+SS
9U3x/W44mjqhtpcY6ww6Fi/+I8FB5d4evUzp/i/FT15+/sO2PoGHi13CS26+
VPzOFfXIb005yVNR+P+VIOdUTm4tvhbaeOycWgml7lrtZd1lpP4wVH1y6rI1
lXDLcOiy/1ch7pmU7dnuLCLrGqoPSOEorrpQir+i8mdT4aV/aq6qJd4Sbw7P
z9/+u1z7+NTvkcI/XPuGVD6h8s9wq42/F+kUw3bs4bk3R6Sjt9kc80kiOk7x
VFSepPDVmk7GZy3mlsJqlP+cc/cfQ01j/pRIfz45V0jNJVG6DipO1d0UTvN3
veOcyK/F+KmLq8ZuqMTSWf3e5erJSL0Kpb+KT33aJm8eD99cCtNSPOvhorz6
w4r+9Pko8JulLZvJw9kE5m6xYz1eWOydY9ifxlHPt3Z+8eCdEOadn/0+oS1G
ZL3YxHW0HFlnNA67LBBhwmmNLupFYiTbzaktHEPPqVG661WrBbkDTCRwO7As
aWaBDBqLlsriFbjL0sNu1y4FftHNXuB8q5rB8dIFOmfMWNhdWblok78Me3rN
7qicx2D8j/1X18ym5wepuTyq30fhpbTnk7I7lzC43XaRqTVYRK3+eufIbZrv
ouYfKX1X4KCxem1nytCxkdd+dCaDmsTdk5yXsJg84+qJRC2p4nW19ro2V/F6
xlydNZdlsds9o0fXUAmWPg4p2qjNYINWh5+v/+fz397VVJIrQmmQiA0LkWB5
oeouewW+7W78rCTqqAhGEt9f40ZL8PxdYojBWBpXUzp2Cs+HuHWYKTtUBxe2
8Mmai1UY5lD6aIKa4nPYMDHF51QNJEdC3X5OKcfpe0NrZk+Wkv30LyniZWNG
VGCnYda0y7HP8c2i/+3OfvQ8LzUXTOmpqPqO0lNRvBZXHNXc5gdbcFfzjDe3
74XrvF5z6w82ld8CV9079XepOo7CRVz1V5Q+irqe4qOovErhKKrOpfAVFaf6
gJQPA9UHofwZNDat2KNWWof4ySvMqw9WY+ieO5NjljOQBF8dUjOjHu+3bb7S
3qQWGY93eK/SYEldMaXLGnTLPLahhwD9BwUtXGAggF5e2bAIxXka9NZl766b
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
nxlqPwXFg1H3ofAVVc9ScWr+iMJXlG8P5cNAzaFT+wcp/RXVf6HOQWpfc6su
9U45e/nYqfclwkWBO2vkW1MXa8thH3zM7PAYAXpPGjLn/TwB0voH/zLRo3XR
lA8AhaMoXVbV7oONwi5SeOhPrXvizEC8c+jJqYrzmvJXL44dIXuWIMPytDOF
BWUMWP2KNdETWfI+lE9CrlRtTEBrOZbUXC55fIZFX+Gt2/tHMei2K1hw5DuL
tnNfdH+ZyOJx58AFu8fQ84MUfqOuH1somFnSR4bCsrSwwCuK/+/47yG6wTRP
RfF71L5sCl99s/VZ495JBNPRmz6PmqXAZWOjVJSN5BD2ufF6YiofJUq7t2Yr
notPKu0G2uvIcediw/bpRjxc2myRbaVVD0uZcEdYP1pnRfnfUnOylF5xuVNE
/z+KOsRFxttgYpqHMZMX8U5E0b4oVB+Q8mGg+oNc90pw1WU1N3+qFlzXPOP/
9j3d/9RzTuEZrp8zV10WFeeqS6fwFYWXuO59pvgriuendFlrOhmftZhbCqtR
/nPO3X8MNY35UyL96XltCkdR+ivqXKDmBKk+ILXvhtK3cO0PUvoZqg9I7Rmk
9FeUTzu1n4Wag6P2DFK4gvI5p/puFP6h+olq3/sk8b0UeMhH33afL4tfRd09
OgTRuIuaHxwa9mgdz1WGVeH384Y8YGASlB8/bxHd36R4vJqPz/ZUTZWgzW/D
CyqMDP3f6g/qChpHVcZO7FphLAKbu61f4iExjo18GSAzonXsXPd6UzrAHp/u
HGOTahFsl2pX2rcScSbv+GqtZcjfMDHF51QNJEdC3X5OKcfpe0NrZk+Wkr8X
ao8nNedLzadw7Q9S+Yorf8VV79Giv/pn+00t8f8/XMSVj/3bzznXub+m8n/g
qm/nyl9RcWrembqe6htSdSjVB6T06hTuovyfqTlBSmdFnQvUnCA1V0XhLqo/
SPlfUfjqM1vbMO8bH4N+5y7P/cFH7Dojt+ohcgxK8g05/VSAZSmN84unCPE2
3l/9qAHtF+r2fUinNlVCRJ9qrSxoI8Z2F51WAkPaRzTOdKLe7UoJBrUZ4KY6
kUF1SPx2zY5yEodQfggUjhIHpP5cq8Cbg79azXP7wsB5j09DdR/6PhTuonxH
qT2G1Nzio75LE1odZdB33ryPBwxYDD9oYO1VROMxSrffO2bIUuEPMRr3xkbq
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
BsPXImTERro/SO1zpL5Han835edP4ahu+VfabGqsxZaH2+cLz1fi2aEepRfG
y8j5Qaoe2bfP9iDWlkMW121p1w4FMAy1WdLACEg9JKW/ovSZVL3GdQ6aq29z
U9XFLbioJf43eKHmhq+aau7vb+/Zaao5Qa54jMJRVJzKe9ScINUH5Do3RPli
UXn+ZPrqxMoBlTji/CE6xK8QkRskxYI+tP8hdY5Ed/UYfmB1Fbamt24TE1AM
+z2nmI53xKRfqEP+3cXvjesQfvqn8xnF/bwONK7V3knvd17Lj7Mvl/Mw5dGl
e9EzeIjY4dU2f6CcjFO4K3Sh/gC7GAEeD9q1cvc3AVwyVdWC9OVgn+dm21WL
0WaF7Mhhcxl+7MwIOmpO4y7Kn4Hydad4HkrvROmaKL/QP1e+Fr1PZGHfe3Qk
wlh4XKsvsXSjfa6o+1A6eWpvYMhq11bf1GXwc3rzaNtFBluzMwoGbKd17JR/
BeXPsPPOzZhpV0SodDFteOcoQdkW79vxY+Xobn5cXi8UQuIqVnrQTYx2/drF
aY6mcTU1f0r5rVHPp367mX8O7qzBeU3v6ml9ymEePPLreiMaX1FzIpTOiur7
Uz6iXOeUKZ0D1Y/gqoNtqjzf3M73lnjzxFf/FN/VVH4IXH8XTeW7ztWnlKuv
C9W/o+o7rnufKV0WVYdSca76K8pHlNLJU3ucKZ8rSq9O4StKl2WxXldu4l6H
aR1cn1+Xv0H0DLnugywaX1H9HWo/jjqv87qaQj5eaZusm5vBR6jblXcNOvSe
QconnNL5UHteKH8nql9G7ZHhyl9R/BK1r3lA8cms3RksVlzJeaEZycLL6ILA
ZSbt6075PFD6fGoOkZorpPqAlI8r5bdP4epBt8xjG3oI0H9Q0MIFBgLo5ZUN
i9CVY8/7hNK0FfUI9Eu/sOxwLXZZbzIyMFW87wMT94Yp8NYkg+riT0Zv8NtR
ea9NgIz0baP8Rak+INc97Fz99Ki68m/7tDfVedQS/3fFmxueaW7vq6lef1Pp
27nqMLnq27nyYBRPRenSKXxFzQlS/UGqD0j55FC+OhReitGu7N3JrgKqWj+n
qDY8h0dwz3h5KL3HmfK5onTv1Jzg+dinjw361EOS0CrVfnMNdHLict/nMLDV
7vxw/wAelLoE5u9uVY8x7oMd1fvJyfnBjxNSRybb8jF+2M1Ex2oezEKcgwq1
aB07NUdGzQ/2FH6LN5sqRp+7YdnXZkgxXBjiPc5MDr/H6xcNa5Qgof8BjyoH
BmaVZ2Xjf9G6IypO+YJSfTqK16L6gxTvtGKtht+VGyzUhsg66e9h0WHBkojp
s2h/BmpPNKXPN+qqmxT9VoZHft6xSz8y+HlDP65Uk4VOytxLvyFBsq3D5WFv
FHhaz25HmSW9/5r6/DX2rh5iYixE651FpnYNQlwcopuuPoLmr6jnhPK5ovwZ
lPMORTgp1cA9u2BpzagyWFlNC+xfLCF5YGpOhNJDUriL0mFSeYnKkxQeo/Ie
V51tU9XpzQ0/tMT/O/Bbc/Mj5Rr/23otrjw21/lBio/i6n/Fdc8g1QekeCqK
j6LmBLnuGaT6HRS+ouYEKR0LxRtQftrxqU/b5M3j4ZtLYVqKZz1clFd/WNGf
1tVQ+3EovwVqLzMV3+2e0aNrqARLH4cUbdRmsEGrw8/XCjzmq5yeJSuS4tAt
84AXhxks+ljoycTR/TJKf0Xtd6Zwi3PZ84wnivdhvfX7sb0K3PS8+5+NN/vR
fUPK54HaN/1+cS/1vcul6L1CtHy2H4MZortDDj+j/bgoH1GqT0rxgZQvGTUn
mKcTNjuzkg+dyr7+xgWKemNwVISh4nsPuZ2/+r0RH4eyZOdjM3kY9WnfRHcF
vqL2jFN7BimfK4q/pXSM1O+R8rujdAWUnpPSJ1A4iuLtufrwNNX1ze18b4n/
7/BOzU2P97fn9ZpKx8iVp+JaNzWVLyjVB6TyD6Vn4Mp3UX5WVN1K1bmU/orC
XTph47wnRlQiYYxPlOWwVxi8/pWf5xIRGa8LtFnV71wl+t77dfrtvFfYPavN
EWwQkf4/lI+ov0pQuWFGHfrMHm611bgaC9SeBJVbM9gUp+bZeLAecaxq14wu
dUhXWiHO8aP3DF7dqtclypGPffWx8cPlPGTZGmuoDab9rw7zw1Q7Rgnx5W1V
f+UdIrgO6mnQa5Sc3GdH+Vi2XZRwY52zCCJmhIbxIzGGhgbaHB1D+7cvWe+y
y9Rcigl5R89GKXDN8dtrvXzrWKi59Y2wt5DB4YP+rilpDAw/K++ftJr2P6fm
B6n4FofY7Y4d5Mj23hWTfp7F2oyv6keH0biL6g9S/BjVx6R4LUrHTunfKP92
aj8O5YfmevJ49J8cPoJXO23YoqhPGqPzXDJ15OjX5bd6+dV61HoP3b/Ssg5h
29xvhcewkJsndc+fWYf2h01ntr7/BiO7fEL9FRm5Z5OaE6T679ScL1f/doon
p/TtXPNbU50LzW3esCXeEv/fxF1/+/5c+Siu11N5o6n0WhQfRdWPlL6UwlGU
zorqG1L+DNS8IeUvStXXg+frv3hRWYn4q2Ynp6e9wqyir16/40X4mOCz+bZz
FSZYCcJFNsUQTL2gPPK8mOS1KL2W1ovffx4n1aGsqtOjF22r8TU//8D3UQzZ
r9naNuGczXYektiSmkGJ9Sj8nezuqClH/JXvTGAHPiYJXVOHbuWhb4VK6fpB
tN9RuPoc0acpQlz+eMJIqacIN25I5WEjaHxF+bdTPu2UvxPlB0XtZabm/qj+
IHUfyheLwmPU3kNqX7NudpvXp4Yz8NBcVdNLhYX7/oZuaq1ZbHKqjK2OlqKh
/dgRmtsYKPVUlqal0/5X1JwmpW+n+rn26wq0IBTA6/VVp+VBQmz90Kt+0jAa
h1P4ivJho/grqh7RmKc++3xVOX54qLhGhTxDzrYRrfzHCck+PvW7puKUPwOF
l7jmT66+Ny14qSX+39QHbKr+NdfX01RzJU2174ar7yhXX3euPldceXuu/u3U
fhwKX/mJNM8+e1iO9b7580dqP4On1Zi+h3WEZJzS63aeEr1cv3UV1pXtVitX
5OMbe9NnHlwtJv3bqf04FD8wy2Ki8sXFCtyapyeJ9KuH1WXVqDP95eg/i69y
8gYPTlumv1z1rh4ra3p5+w2g95tQOitq7oya979h4CfBcAlUKkNTAjJkiDwe
PtPbUo6cpA5yqzQJTkuvuJqMZbBdL6a3kuJ1UvuOKR+DNojXMnwoxeuLYR8E
UQxSJ0+/WnWWJfEVNa9H9ftqwmaK5+5kMWzHiamLNrGYO7z/06HLaJ92yudq
9rfICauNZZCvnJ7jfJNBheZjY/O1tN8CtfeH0l9ReInycaV8rigd+52LDdun
G/FwabNFtpVWPSxlwh1hCtzeKWP58QElinzTZ86zteF1uGXhsFLrJYsDQ9+X
7LCuReAyM8fenhVQNmtnt/+2FBFb8s8+inmDVQ2dNfo2FqH/vpepPQaLSR85
6vdFzfNS/DPFU1H8Ntd5HK66C66+iP+WflBL/N8V/9t+BX+7v9lUewOban6Q
er9c9wxy7etR13Odg6bqTWp+kOoXkDwYMfdN5XlK906dF9T5QtX18wfMrLzU
sQ73zRLLo0sqMbqoS+bO6TLcZN3GCxTPi5bJeVPzd9X4pJLczWUf7S9K8Vdz
3q5+NqsHH0dPmKco7+Ph5EmpX8r/8Fen4xt1/2dfbpnPMu/2QlSEMWdT9OX4
LOha2/ayAD5Rjt5WvYXwsH8OmT7NU1F7nCl/0fGtIh4mLZQinad60XM1g4Yu
Gwv2FtI+oolH/rD7h8mwT+DX1uM6g9Ap2yuN17HQkAY//PVahrPVL2bvliru
M8o76oE+S+4NNPEV+PuChaFzmnWGl+K+Gzt9ke9ksPvYXbdJz1kMTd/mqHKI
hXqtwbHFU2gde4Nm9AlLNRafh0VmNjqyOBoQWvYwge4DUnqwONOJercrJRjU
ZoCb6kQG1SHx2zU70r5hlK/FyuwdvZ8WiWAwskC68IAEbAyjFW5C+2JRfeGS
I66S4Hs8nDUyemb3px7vzn5vvDSA9q2l8D+lM6TmOyh9I9UfpH7XVH4g9QYc
81hT7cFp0bG3xJszvmpuOrSm6qdz9XPgWjdR+YGrjxaVl7jyUdQ8NYXHqD4g
xV9RPgxU3qZwF+UvSunbKf0JNbdO+YtSewap+UFK3071Bym9DcWTtF2xKj8v
UYg4t/M9750VwSupYmHEKNq3of3jr9bPb4lxY7/rae3fUohWGXe8PoHWWVH8
D6UPp/p6lK8C5XtA4SvK/4rygbfKaDd9USsWh89d+6U6g4VVvFXw3dMMOfdH
6dupuYANR1Mn1PYSY51Bx+LFfyQ4qNzb4/+x9+ZvNfX/97ghotBgjihSCkkl
RfVIyBRKyZAyFJIpY6ZIhpAIUShCxgxRRMmYpAwZGjWe+Zy9D5nSJN/z/gPW
fV37+tRX9/3qp/vyuPe1Hefs/Xyu53qsx1rdLfH3r+N5asLUTUJyDOrc33GR
iByPTv9x3hj/7ki/l7rjy5NbL8pJt9iho9aKMppW77zTXoF7SyU9TqtvLKO3
tUdfqk8uovmvy38ECGRQx4766cj/CvX7kM4K8dsId3HFUeh82uwL+t+oNzX/
84a6f2P7UP2t34srv9RQ/BVX3waE07jmmXLNx+Hqz4DWSbTeovUZ+UIjnS3C
VygHB/UBUT4Iwldo/0L9mquvaxzKT/PostqunMS35TTf2dX4tzbWWSF/BpQL
jPgrxz5G749PEFH48IldZ90W07mUI1c8zLD+CvUNUR8Q4SI0h5h5+WVOwhCW
Vo+rf/xurgKfvdpnV3oQ805IH/XdM6fqdwlLojTL9xURLD0MuTFlDTEUPqFY
M3qpjIwOb5ysls4Qv//U6T6z8TwjwodzDE2vj9sspfz1Z2S2GxiqPWJbeDaN
JbUDj2r77ZTSiLotcWabGJq+NND8ymOW4ju/sHQ3k1KRfQo/0pOhMWVD2y0R
sLBvi/KMED+J5gdR3xD5uqPnH/G6CVmt2gb+yqdt08a6sMWvaPAjA4nTJMxf
oTrX3FJ0PeLzua63zTr25npTxoF/C+/9rfxNrvwYV787rrgLrTNccwm5+v6h
61HfUD1Qf0b3tbn0vO/N6UraabRKgSuW7cZ9QK66d3S+Rjor1DdE+ArhqMp3
dlER+uU0sLvOsJorJbSvTcTNtwUM9GdAOc59lNSzJ3nzyWLqwghBBz5lfvg1
PqCfnHx6GfisWiWkmixjfb8ZIsp45Tfb1xjjKIS7EkxtW4RvFlPqxNrE2mgp
pT+X+s4cKSe7C8EGQT0kNG/F/bspp2S0o+OTnl9t5FQbbyULMJLS1gcl/WLd
FTik/efr8yTc82IyJquqFxbJSMk7rlsAy9DUthfFLwawlPR6TFqnHIbutllg
aU8sha74df/YXexPVTfVqmN3J4aKLUrKZZos3ZP83mrwjYE4reO9/Gl6iv8m
v986LMqApZxkiXhOLp43RPdH/UT0PcTOUy/eMlxMflOSM38ZS6nfrFTjtH/g
r24Mdc2zbCWgdQnXF8WqCEjbuktlN33cH0Q+/wjPo/41ei8QvkLnHfT+Ir87
dC5D6wzXXDB0/d/ys2rGY831/xIe48ojcdU3cj0HNRQfxdV3FOEorjk46FyJ
1kPEUyE/HJRThtZt5OeAdFlpr3ptv/yzkMr0Zmn/Fr6j+xrfJhbFiyhz4+j4
ZWdLSHIsyL12fD6dezCwZMY4KfRpRzmDSN+C+oNIx47mwpD+CvlfkdKvg9ta
K/bxzcd+uYwRU8TKuOWZw7B/OPIZQD6iiLdBc4VcfUQd2xkauD5jqKrq0t1Z
ViyVPl7bJvghA3OiUf8R4SLk34X8sk5sCtq1/qaUukRlrqoNZqjNiZe/Xl9j
6UJ6rKfPailt/PLUcNJahmIf1G0/mYFzn19tsLu7/KyI9px2qe48WkLT7wb1
8h4uJ+PAqPPJHYR0+xqNy78rpCOqZxyNBstJqCFIkXsLSOew2mbrKwJKLopp
PVOBr8L2VYW128inkuRBh6MG8+nj/JSAin+YH0S+bag/jvrpaE7wZ7x4idmQ
Atpj8nDy1cjXVGXT+24nPyHnnHe0/qD+IFpX0frJdY6pmddqmvV/e3/wb+mj
/tb31lDzuVzPQVx9FbiuJ2iuGfUBEY5CfoDoeuTPgPoFXPNxEI5CfUPk54N0
Jij3Fvk3In9sgZ9Lf9k0HsWeZpI/OilwrU2Im0lvOVXs37O41TEeuc4+k5//
qJwK9685+kxbTgKf3arHW/Lpi/Hau44reRSuqT/KRkdOR0YOmJ1oKKC0A3az
u0wSkKnbqQW/9XGuSn+1DPUaIxGZuQ5kngWJ6dpe0/x4U6xvN12rv782Q0IL
Kr0L+o5iaOjHnq87dZHDvhjq06F+HMJXSAd1TFQ03OKQAn+pblRxC2DpZitP
XRMvhjz0Ko7dq2Dp4ruvLoXRLC23NG21YwSeK0R5N2g+EfUNUZ8U8XtvDFZs
6+EipuV+Pk9CPKUUH7fwj58VnvfkOr+AcPiKCRukY5PLqcXZEVOfzigj6cOZ
UV5XWJibifzbkT8D8p3LXjvo+7eL+fQtINTz7fMsqmthZZaogfEV0g/A8xqY
E0TrHtd57X+7b2Rz/X+z3lD9O674h+vzj3ihhsKHXHmwhsJRaF1CunRUR/0+
dA5FfgtI947ug/AY6lOgXA+Erxa6xRT4C4tJy/G6xLhlHhW2cA61eSKB53qE
oz50zBlhtbGUqmducPRPLaDspJquU4qk0P8K+TZ4Pzn1ZdkcPvEiAk62+82j
sR27XR+j2DdHVttOfWvNJ/G6t+fXveZR4n2/ouO6cjp399ZgvfdCIkZbud0P
EdWF2i++aoJ5ErTvozxixGtNiPNdsHmNjPZ1n9FB6SVDI2sOXVs1g4W+Umh+
EOGxGccPeLadw9JUoePuE8sUeKrufWulLdinHenbw/b18Ztry1AfowHzW3Zk
ScV6c0aPGpyzg/RjaH6waO/heqGalDwNJ5Y9n86QeM/AMxN/sHCuEPVhK4/Z
XrrlLiTneYsG3xsuolS63v/XEDktXpOR1L2DgDKWHlkYqCWg860qw5wUuBrp
91os+dh/0e9yuvB6Z/tNmWUkrh3Z96GyHOIo1B+/N1XrbPb3IsrQOLWptUcO
OaTvWrmkuwTmpCP+GZ2b0PkL5sJz9GFoqP2lsXmAZpzWXG8K9Yby122oPmND
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
yl8hPpwrfkPzg1xzBtH1XPuDyLcQ8VdI3476iahviHKfkX8j8nVH+Ar5F30b
lWB8w4FPIwclxjgV88gqcLp/ti7OVdnzJOjGmWohhaXF1/ibiUnj8st3YcMw
HkP6nx7HBywW1oipPiTygMFyGe0vnD9hrA3WWZlq6F8P/yyjp37ekYsV+KP2
tmFUrjb2P0f+VKiOdO+7fLrKfIPlZHt9yOBe2Sx9Xnrz++/vMurz8czDvSks
LY1Lf6N9gKWFppcErtMw7kI50Ujfjvg3pL+q+fKy7x0/Mfkc7Xav70Epjf6j
nK09EvvBip+q7zrRTUhtvfTsE9OF1ON9oNhrMPaVTX9q+HyRP49mW3wtHxtW
TpNGvH7a7f98R8E8xZw+0wqvdCijR1Yx+eE5hTTsvVrqnikymGtgN2i+c6JV
IeVlqnU2OZNNX5N4Kc8GiyBPhfAV4r2RfgCtP2gd4+rrzrWv0VC+QE1tf2+u
N9ebQl+7sfuDXH1auPYZ0f3R+oP4Lq7+V6gPiPAY8s9B80qTrywYemBUPvFS
Tqxwccok79ZOEZbpAqhjRz5XyBcL5UFnh+8ymBlTRuHeX8b0zSuiwyHZV7S0
GZoxbyqTqlpOF/T55qccS+jRnnPlGokM1BujfJzTrrOiXq0U0LrxPzb0uC8g
2/NBp8MGyilsX1VYu418KkkedDhqMJ8+zk8JqOiHcVeVbfTM9o9EFPSkZcUl
Pwnx2g9k1S3kNOWt20n7GhFtUvYsfvtWQi1vrQn1HYHxFdRlORdGFodLqbLd
8CHa2xX4pZuSNOkeS5f7KwDCUxmJsrt+PM1naMLOsvxbw1gaeWafwGE3Q1oe
7Zdc0mPp6ee9J10KGahXR/nRKtU9r/MXsnRjmaHDwZUs1b3v4qnqz9B3z5yq
3yUsidIs31dEsPQw5MaUNYT5LqTjQr6gaL4S5Wh/65d7O+uohPSyrVy9DBka
8ObgTZ4CFzn2MXp/fIKIwodP7DrrtpjOpRy54mGG8TDCXagPaJk0oH7S3HIy
rTpheM+7lPq1Dpw8eQAL851RHc19oP4g8mdA5yau/leozlXf3lBz4k1tf2yu
/7frf6sfzbV/x/U80lD5OFzriI/imn+K6khfyhVHofMpmstGfUDUR0D8FdJl
of4F8mdA81PIBxv5NqC5eDQniHiqTsN410z78knmrHu9LJpHeouzVGUK3LXY
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
Wjm7ik86vzN8Mmr4FLne1L1Ygbvyv/Dm73gnoJTF/JnxM4W01ts1LttIThtE
e9aaLRbRoVm/VNlyMZmqWW5W+Qdf90UbXIMtraU06mVEbOgChk7eXb1wZRnW
HSGeR+3Ao9p+O6U0om5LnNkmhqYvDTS/8pilTJXM21rtZKSeVd8y5AJD+p83
re6+m4V5gsjP6sCsTfU7qxgy7/thVNfJLEnS6/slXMR1pONCfBfSlaG+J9Kz
OW28M+mkh4TiltbEPFJhyGCLfMYuklOVw7JVHh0V+GnY5h9DXcTUe3iospIp
9jdDOj00V4j0gch3tHuRQUVlfhHtPrG11sU4h8r27A/eqySB+iv0fqFzDfRj
AesJV/6c61whV3zV7A//v1n/t/++jd0HbOzvh6uvHdd+H9ecaMRToTpXHSny
F0U8PzqHIr0WwmOPR/Y489A7j6a29FnhvugFZZd4zh49FOs9UG4O8sVC+wjy
tUb9QeQ7iuYKt7U5fWHsDh5dZ3NKdGLKKfv3DQ8nbcxXWF9d1m3LZz69dhAs
Y2V86nzT6fH5f+C1kJ7K49yu1DkkprTWZ158sJXSxT5nXv62lFPsPPXiLcPF
5DclOfOXsZT6zUo1TrPE/qKov1YinJb2aL6MslSi9ms9U+CeKR2q5nuw0IcK
+Vkhv4UEv9315rtkNFGv00H5G4YkFzsv2DaFhfgqbF8fv7m2DPUxGjC/ZUeW
VKw3Z/SoYTj3N1EeEOLHbB5P8P68X0LPJ3ocXanP0NtfjjM+DZXDPGjjwKjz
yR2EdPsajcu/K6QjqmccjQZjfbvOHevIyq4C6q3jP2+ukYAMXuYN2q8vh/Oq
jpnJXhXmZbTrXO308ws+0cKw+tX998jgHAfKQ0d9QzSHgvQAaN1AuV1cfWka
yherud5cbwq4qLH1To3dN0d4iSuuayhdFlddPdf1BPFXMMcZ+UKAdRLdB+mp
oP8zyNNB/USu/BXKDUH6dpRXiPxFkf4K6ayi46qZdap8GiOcmTBwG4+0CpRz
N/yfr/v6LF0SCmjhh2vOPv5C2va1e/mYQdh3dM/9xOOT40RU6GpZ+cVJQnlb
ve9GD5eTiWGti6afiPiditplfBXTvZyeXceay8ksxFWw9IOYbtxucyJpsIzW
Py4o8rDGfg6oL4b6blzxFcJFyLcB+ZGiHBzkw4DygBCOQvk4F9RtLhiIxeTW
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
9+M=
     "]], {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
5P3P6A==
      "]]}}},
  AspectRatio->1,
  Frame->True,
  FrameLabel->{None, None},
  Method->{},
  PlotRange->{{-1.979994, 1.979997}, {-3.112762, -1.95389}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6065111208257103`*^9, 3.606511132214066*^9}, 
   3.606511355909781*^9, 3.6065113992499313`*^9, 3.606511445298429*^9, {
   3.6085759056512413`*^9, 3.60857597811626*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{640, 750},
WindowMargins->{{Automatic, 14}, {-14, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 269, 7, 46, "Input"],
Cell[CellGroupData[{
Cell[839, 31, 152, 2, 80, "Section"],
Cell[CellGroupData[{
Cell[1016, 37, 206, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1247, 44, 413, 12, 28, "Input"],
Cell[1663, 58, 214, 6, 44, "Output"]
}, Open  ]],
Cell[1892, 67, 2028, 61, 148, "Input"],
Cell[CellGroupData[{
Cell[3945, 132, 2020, 59, 114, "Input"],
Cell[5968, 193, 73, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6078, 199, 1839, 54, 97, "Input"],
Cell[7920, 255, 71, 1, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[8040, 262, 205, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[8270, 269, 728, 21, 46, "Input"],
Cell[9001, 292, 378, 11, 62, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[9428, 309, 234, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[9687, 318, 556, 15, 63, "Input"],
Cell[10246, 335, 238, 8, 53, "Output"]
}, Open  ]],
Cell[10499, 346, 2377, 67, 131, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[12913, 418, 107, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[13045, 423, 979, 28, 80, "Input"],
Cell[14027, 453, 1079, 34, 115, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[15155, 493, 157, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[15337, 499, 1301, 34, 97, "Input"],
Cell[16641, 535, 4960, 146, 474, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[21650, 687, 234, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[21909, 696, 3225, 85, 301, "Input"],
Cell[25137, 783, 1423, 39, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26597, 827, 1332, 36, 148, "Input"],
Cell[27932, 865, 122, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28091, 872, 1492, 38, 148, "Input"],
Cell[29586, 912, 2540, 76, 269, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32163, 993, 1777, 49, 148, "Input"],
Cell[33943, 1044, 73, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34053, 1050, 1154, 31, 63, "Input"],
Cell[35210, 1083, 3435, 112, 237, "Output"]
}, Open  ]],
Cell[38660, 1198, 5298, 153, 369, "Input"],
Cell[43961, 1353, 2185, 60, 148, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[46183, 1418, 232, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[46440, 1427, 4862, 127, 369, "Input"],
Cell[51305, 1556, 95, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51437, 1562, 2233, 57, 148, "Input"],
Cell[53673, 1621, 2287, 63, 137, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56021, 1691, 107, 1, 80, "Section"],
Cell[56131, 1694, 139, 3, 30, "Text"],
Cell[56273, 1699, 6408, 156, 505, "Input"],
Cell[CellGroupData[{
Cell[62706, 1859, 133, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[62864, 1865, 934, 27, 46, "Input"],
Cell[CellGroupData[{
Cell[63823, 1896, 193, 3, 21, "Print"],
Cell[64019, 1901, 191, 3, 21, "Print"],
Cell[64213, 1906, 199, 3, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64461, 1915, 983, 29, 46, "Input"],
Cell[CellGroupData[{
Cell[65469, 1948, 120, 1, 21, "Print"],
Cell[65592, 1951, 118, 1, 21, "Print"],
Cell[65713, 1954, 124, 1, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65886, 1961, 1009, 28, 46, "Input"],
Cell[CellGroupData[{
Cell[66920, 1993, 97, 1, 21, "Print"],
Cell[67020, 1996, 94, 1, 21, "Print"],
Cell[67117, 1999, 99, 1, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[67277, 2007, 180, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[67482, 2013, 1082, 30, 63, "Input"],
Cell[CellGroupData[{
Cell[68589, 2047, 118, 1, 21, "Print"],
Cell[68710, 2050, 115, 1, 21, "Print"],
Cell[68828, 2053, 121, 1, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68998, 2060, 1075, 30, 63, "Input"],
Cell[CellGroupData[{
Cell[70098, 2094, 100, 1, 21, "Print"],
Cell[70201, 2097, 95, 1, 21, "Print"],
Cell[70299, 2100, 101, 1, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70449, 2107, 1105, 30, 63, "Input"],
Cell[CellGroupData[{
Cell[71579, 2141, 97, 1, 21, "Print"],
Cell[71679, 2144, 94, 1, 21, "Print"],
Cell[71776, 2147, 100, 1, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[71937, 2155, 184, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[72146, 2163, 1011, 29, 46, "Input"],
Cell[CellGroupData[{
Cell[73182, 2196, 559, 8, 21, "Print"],
Cell[73744, 2206, 558, 8, 21, "Print"],
Cell[74305, 2216, 563, 8, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74917, 2230, 1056, 30, 46, "Input"],
Cell[CellGroupData[{
Cell[75998, 2264, 167, 2, 21, "Print"],
Cell[76168, 2268, 165, 2, 21, "Print"],
Cell[76336, 2272, 171, 2, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76556, 2280, 1085, 30, 46, "Input"],
Cell[CellGroupData[{
Cell[77666, 2314, 142, 2, 21, "Print"],
Cell[77811, 2318, 138, 2, 21, "Print"],
Cell[77952, 2322, 146, 2, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[78159, 2331, 231, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[78415, 2338, 1504, 43, 63, "Input"],
Cell[CellGroupData[{
Cell[79944, 2385, 610, 9, 21, "Print"],
Cell[80557, 2396, 607, 9, 21, "Print"],
Cell[81167, 2407, 613, 9, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81829, 2422, 1552, 45, 80, "Input"],
Cell[CellGroupData[{
Cell[83406, 2471, 240, 3, 21, "Print"],
Cell[83649, 2476, 240, 3, 21, "Print"],
Cell[83892, 2481, 244, 3, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84185, 2490, 1610, 44, 80, "Input"],
Cell[CellGroupData[{
Cell[85820, 2538, 240, 4, 21, "Print"],
Cell[86063, 2544, 237, 4, 21, "Print"],
Cell[86303, 2550, 243, 4, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[86607, 2561, 230, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[86862, 2568, 1551, 44, 80, "Input"],
Cell[CellGroupData[{
Cell[88438, 2616, 95, 1, 21, "Print"],
Cell[88536, 2619, 94, 1, 21, "Print"],
Cell[88633, 2622, 98, 1, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88780, 2629, 1549, 45, 80, "Input"],
Cell[CellGroupData[{
Cell[90354, 2678, 149, 2, 21, "Print"],
Cell[90506, 2682, 145, 2, 21, "Print"],
Cell[90654, 2686, 152, 2, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90855, 2694, 1578, 45, 80, "Input"],
Cell[CellGroupData[{
Cell[92458, 2743, 148, 2, 21, "Print"],
Cell[92609, 2747, 143, 2, 21, "Print"],
Cell[92755, 2751, 149, 2, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[92965, 2760, 234, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[93224, 2769, 1581, 47, 63, "Input"],
Cell[CellGroupData[{
Cell[94830, 2820, 584, 8, 21, "Print"],
Cell[95417, 2830, 579, 8, 21, "Print"],
Cell[95999, 2840, 585, 8, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96633, 2854, 1626, 48, 80, "Input"],
Cell[CellGroupData[{
Cell[98284, 2906, 219, 3, 21, "Print"],
Cell[98506, 2911, 216, 3, 21, "Print"],
Cell[98725, 2916, 222, 3, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98996, 2925, 1681, 47, 80, "Input"],
Cell[CellGroupData[{
Cell[100702, 2976, 214, 3, 21, "Print"],
Cell[100919, 2981, 209, 3, 21, "Print"],
Cell[101131, 2986, 216, 3, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101420, 2997, 108, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[101553, 3002, 1134, 28, 114, "Input"],
Cell[102690, 3032, 212194, 3490, 366, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
