(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    340412,       7155]
NotebookOptionsPosition[    332510,       6874]
NotebookOutlinePosition[    332945,       6891]
CellTagsIndexPosition[    332902,       6888]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/mgreuter/Documents/Research/histogram-voltage\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.586680888573414*^9, 3.586680918361854*^9}, {
  3.586680968608871*^9, 3.5866809702806787`*^9}}],

Cell[CellGroupData[{

Cell["Model Development", "Section",
 CellChangeTimes->{{3.603652512335588*^9, 3.603652516166339*^9}, {
  3.6085715981586657`*^9, 3.60857160008716*^9}}],

Cell[CellGroupData[{

Cell["Symmetric, One-Site", "Subsection",
 CellChangeTimes->{{3.60649367066607*^9, 3.606493672888548*^9}, {
  3.6085716039590597`*^9, 3.608571611134603*^9}, {3.608571708859617*^9, 
  3.608571714258999*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}], "^", "2"}], "+", 
      RowBox[{"b", "^", "2"}]}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.605880803083725*^9, 3.6058808158050117`*^9}, {
  3.605880878809272*^9, 3.605880879599484*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "b"}], " ", 
  RowBox[{"ArcTan", "[", 
   FractionBox[
    RowBox[{"a", "-", "x"}], "b"], "]"}]}]], "Output",
 CellChangeTimes->{3.6058808164416847`*^9, 3.605880879953362*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"trans", "[", 
    RowBox[{"e_", ",", "eps_", ",", "gamma_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"gamma", "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"e", "-", "eps"}], ")"}], "^", "2"}], "+", 
      RowBox[{"gamma", "^", "2"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conductance", "[", 
    RowBox[{"V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "gamma_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"eta", " ", 
     RowBox[{"trans", "[", 
      RowBox[{
       RowBox[{"efermi", "+", 
        RowBox[{"eta", " ", "V"}]}], ",", "eps", ",", "gamma"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "eta"}], ")"}], 
     RowBox[{"trans", "[", 
      RowBox[{
       RowBox[{"efermi", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"eta", "-", "1"}], ")"}], " ", "V"}]}], ",", "eps", ",", 
       "gamma"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nondiffconductance", "[", 
    RowBox[{"V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "gamma_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"gamma", "/", "V"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"efermi", "+", 
          RowBox[{"eta", " ", "V"}], "-", "eps"}], ")"}], "/", "gamma"}], 
       "]"}], "-", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"efermi", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"eta", "-", "1"}], ")"}], "V"}], "-", "eps"}], ")"}], "/",
         "gamma"}], "]"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.603652518027505*^9, 3.6036525406481943`*^9}, {
  3.603652578918126*^9, 3.6036526443479424`*^9}, {3.6036526787987337`*^9, 
  3.603652696383789*^9}, {3.605881185634755*^9, 3.605881202041005*^9}, {
  3.605881238932898*^9, 3.6058812690449543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "=", 
     RowBox[{"efermi", "-", "eps"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"conductance", "[", 
      RowBox[{"V", ",", "efermi", ",", "eta", ",", "eps", ",", "gamma"}], 
      "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "^", "2"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"eta", " ", "V"}]}], ")"}], "^", "2"}]}], "-", 
        RowBox[{"2", "eta", " ", "V", " ", 
         RowBox[{"gamma", "^", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"z", "+", 
           RowBox[{"eta", " ", "V"}]}], ")"}]}], "+", 
        RowBox[{"eta", " ", 
         RowBox[{"V", "^", "2"}], 
         RowBox[{"gamma", "^", "2"}]}], "+", 
        RowBox[{"gamma", "^", "4"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z", "+", 
           RowBox[{"eta", " ", "V"}]}], ")"}], "^", "4"}], "-", 
        RowBox[{"2", "V", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"eta", " ", "V"}]}], ")"}], "^", "3"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"V", "^", "2"}], "+", 
           RowBox[{"2", 
            RowBox[{"gamma", "^", "2"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"eta", " ", "V"}]}], ")"}], "^", "2"}]}], "-", 
        RowBox[{"2", "V", " ", 
         RowBox[{"gamma", "^", "2"}], 
         RowBox[{"(", 
          RowBox[{"z", "+", 
           RowBox[{"eta", " ", "V"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"V", "^", "2"}], 
         RowBox[{"gamma", "^", "2"}]}], "+", 
        RowBox[{"gamma", "^", "4"}]}], ")"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604857547565556*^9, 3.604857686327105*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.604857686831092*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "=", 
     RowBox[{"efermi", "-", "eps"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"conductance", "[", 
      RowBox[{"V", ",", "efermi", ",", "eta", ",", "eps", ",", "gamma"}], 
      "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"V", "^", "2"}], "eta", 
         RowBox[{"(", 
          RowBox[{"1", "-", "eta"}], ")"}], 
         RowBox[{"gamma", "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"gamma", "^", "2"}], 
         RowBox[{"z", "^", "2"}]}], "+", 
        RowBox[{"gamma", "^", "4"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z", "+", 
           RowBox[{"eta", " ", "V"}]}], ")"}], "^", "4"}], "-", 
        RowBox[{"2", "V", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"eta", " ", "V"}]}], ")"}], "^", "3"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"V", "^", "2"}], "+", 
           RowBox[{"2", 
            RowBox[{"gamma", "^", "2"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{"eta", " ", "V"}]}], ")"}], "^", "2"}]}], "-", 
        RowBox[{"2", "V", " ", 
         RowBox[{"gamma", "^", "2"}], 
         RowBox[{"(", 
          RowBox[{"z", "+", 
           RowBox[{"eta", " ", "V"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"V", "^", "2"}], 
         RowBox[{"gamma", "^", "2"}]}], "+", 
        RowBox[{"gamma", "^", "4"}]}], ")"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604857547565556*^9, 3.604857686327105*^9}, {
  3.604857719047593*^9, 3.604857733358918*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6048577339874*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Asymmetric, One-Site", "Subsection",
 CellChangeTimes->{{3.606493698304967*^9, 3.606493702071616*^9}, {
  3.608571613142915*^9, 3.60857161489474*^9}, {3.608571718667098*^9, 
  3.608571722994588*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"gammaL", ">", "0"}], "&&", 
    RowBox[{"gammaR", ">", "0"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"4", "gammaL", " ", 
      RowBox[{"gammaR", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"gammaL", "+", "gammaR"}], ")"}], "^", "2"}]}], ")"}]}]}], 
     ",", "z"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606493732329092*^9, 3.606493778237041*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "gammaL", " ", "gammaR", " ", 
    RowBox[{"ArcTan", "[", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"eps", "-", "z"}], ")"}]}], 
      RowBox[{"gammaL", "+", "gammaR"}]], "]"}]}], 
   RowBox[{"gammaL", "+", "gammaR"}]]}]], "Output",
 CellChangeTimes->{3.606493778728342*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Symmetric, One-Site, Voltage-Dependent\
\>", "Subsection",
 CellChangeTimes->{{3.604007318370078*^9, 3.604007323035749*^9}, {
  3.608571639174135*^9, 3.6085716501494007`*^9}, {3.608571724484041*^9, 
  3.608571728850903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"g", ">", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"z", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"z", "^", "2"}], "+", 
          RowBox[{"g", "^", "2"}]}], ")"}], "^", "2"}]}], ",", "z"}], "]"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604007338841915*^9, 3.604007340019487*^9}, {
  3.604007456069676*^9, 3.6040074843292637`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["g", "2"], "+", 
      SuperscriptBox["z", "2"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.60400748494637*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"trans", "[", 
    RowBox[{"V_", ",", "e_", ",", "eps_", ",", "gamma_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"gamma", "^", "2"}], " ", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"e", "-", "eps", "-", "V"}], ")"}], "^", "2"}], "+", 
      RowBox[{"gamma", "^", "2"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conductance", "[", 
    RowBox[{"V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "gamma_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"eta", "-", "1"}], ")"}], " ", 
     RowBox[{"trans", "[", 
      RowBox[{"V", ",", 
       RowBox[{"efermi", "+", 
        RowBox[{"eta", " ", "V"}]}], ",", "eps", ",", "gamma"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", "eta"}], ")"}], " ", 
     RowBox[{"trans", "[", 
      RowBox[{"V", ",", 
       RowBox[{"efermi", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", "eps", ",", 
       "gamma"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nondiffconductance", "[", 
    RowBox[{"V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "gamma_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"gamma", "/", "V"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"efermi", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"eta", "-", "1"}], ")"}], "V"}], "-", "eps"}], ")"}], "/",
         "gamma"}], "]"}], "-", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"efermi", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"eta", "-", "2"}], ")"}], "V"}], "-", "eps"}], ")"}], "/",
         "gamma"}], "]"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.603653132443617*^9, 3.603653280971141*^9}, {
   3.603653381029085*^9, 3.603653533850463*^9}, {3.603653567660575*^9, 
   3.603653657640761*^9}, {3.60400784049061*^9, 3.604008009491971*^9}, {
   3.604834894922503*^9, 3.6048348982407827`*^9}, {3.604835380806346*^9, 
   3.604835409542388*^9}, {3.604836449782261*^9, 3.604836462020392*^9}, 
   3.604836505320063*^9, {3.6058815980275087`*^9, 3.605881647649914*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Symmetric, Two-Site", "Subsection",
 CellChangeTimes->{{3.608571923440621*^9, 3.608571926057891*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gamma", ">", "0"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[NotEqual]", "0"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"z", "^", "2"}]}], "-", 
            RowBox[{"gamma", "^", "2"}], "-", 
            RowBox[{"4", 
             RowBox[{"beta", "^", "2"}]}]}], ")"}], "^", "2"}], "+", 
         RowBox[{"16", 
          RowBox[{"gamma", "^", "2"}], " ", 
          RowBox[{"z", "^", "2"}]}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}], ",", "z"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.60857192803577*^9, 3.608571929290156*^9}, {
  3.608571993687063*^9, 3.6085720525019417`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "beta"}], "+", 
       "gamma"}], ")"}], " ", 
     RowBox[{"ArcTanh", "[", 
      FractionBox[
       RowBox[{"2", " ", "z"}], 
       RowBox[{
        RowBox[{"2", " ", "beta"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "gamma"}]}]], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "beta"}], "+", "gamma"}], 
      ")"}], " ", 
     RowBox[{"ArcTanh", "[", 
      FractionBox[
       RowBox[{"2", " ", "z"}], 
       RowBox[{
        RowBox[{"2", " ", "beta"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "gamma"}]}]], "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"16", " ", "beta", " ", "gamma", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["beta", "2"]}], "+", 
      SuperscriptBox["gamma", "2"]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.608572038538827*^9, 3.608572053169881*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Asymmetric, Two-Site", "Subsection",
 CellChangeTimes->{{3.608571923440621*^9, 3.608571926057891*^9}, {
  3.608650840737006*^9, 3.608650842671219*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gammaL", ">", "0"}], "&&", 
     RowBox[{"gammaR", ">", "0"}], "&&", 
     RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
     RowBox[{"beta", "\[NotEqual]", "0"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{"z", "^", "2"}]}], "-", 
             RowBox[{"gammaL", " ", "gammaR"}], "-", 
             RowBox[{"4", 
              RowBox[{"beta", "^", "2"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{"4", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"gammaL", "+", "gammaR"}], ")"}], "^", "2"}], " ", 
           RowBox[{"z", "^", "2"}]}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}]}], ",", "z"}], "]"}], "]"}]}], "]"}], "//",
   "DisplayForm"}]], "Input",
 CellChangeTimes->{{3.60857192803577*^9, 3.608571929290156*^9}, {
  3.608571993687063*^9, 3.6085720525019417`*^9}, {3.608650851529564*^9, 
  3.60865087278144*^9}, {3.608651105619377*^9, 3.608651111256276*^9}, {
  3.608651161354703*^9, 3.608651163536035*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "z"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "8"}], " ", 
             SuperscriptBox["beta", "2"]}], "+", 
            SuperscriptBox["gammaL", "2"], "-", 
            RowBox[{"gammaL", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", 
                SuperscriptBox["beta", "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]]}], "-", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", 
                SuperscriptBox["beta", "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]], " ", 
             "gammaR"}], "+", 
            SuperscriptBox["gammaR", "2"]}], ")"}]}], ")"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", 
           SuperscriptBox["beta", "2"]}], "+", 
          SuperscriptBox["gammaL", "2"], "-", 
          RowBox[{"gammaL", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "16"}], " ", 
              SuperscriptBox["beta", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]]}], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "16"}], " ", 
              SuperscriptBox["beta", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]], " ", 
           "gammaR"}], "+", 
          SuperscriptBox["gammaR", "2"]}], ")"}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "z"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "8"}], " ", 
             SuperscriptBox["beta", "2"]}], "+", 
            SuperscriptBox["gammaL", "2"], "+", 
            RowBox[{"gammaL", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", 
                SuperscriptBox["beta", "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]]}], "+", 
            RowBox[{"gammaR", " ", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "16"}], " ", 
                  SuperscriptBox["beta", "2"]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]], "+", 
               "gammaR"}], ")"}]}]}], ")"}]}], ")"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", 
           SuperscriptBox["beta", "2"]}], "+", 
          SuperscriptBox["gammaL", "2"], "+", 
          RowBox[{"gammaL", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "16"}], " ", 
              SuperscriptBox["beta", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]]}], "+", 
          RowBox[{"gammaR", " ", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "16"}], " ", 
                SuperscriptBox["beta", "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]], "+", 
             "gammaR"}], ")"}]}]}], ")"}]}], ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SqrtBox["2"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "16"}], " ", 
        SuperscriptBox["beta", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"gammaL", "-", "gammaR"}], ")"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"gammaL", "+", "gammaR"}], ")"}]}], ")"}]}],
  DisplayForm]], "Output",
 CellChangeTimes->{{3.608572038538827*^9, 3.608572053169881*^9}, 
   3.608650891871744*^9, 3.608651128202862*^9, 3.608651165874424*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Symmetric, Two-Site, Voltage-Dependent\
\>", "Subsection",
 CellChangeTimes->{{3.603634054282886*^9, 3.6036340581220627`*^9}, {
  3.60857166115695*^9, 3.60857167184457*^9}, {3.6085717305305433`*^9, 
  3.608571735530466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "[", "z_", "]"}], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gamma", "\[Element]", "Reals"}], "&&", 
     RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
     RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
     RowBox[{"V", "\[Element]", "Reals"}], "&&", 
     RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"H", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eps", "-", 
              RowBox[{"V", "/", "2"}]}], ",", "beta"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"beta", ",", 
             RowBox[{"eps", "+", 
              RowBox[{"V", "/", "2"}]}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"sigmaL", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"sigmaR", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", "I"}], " ", 
              RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"gammaL", "=", 
           RowBox[{"I", 
            RowBox[{"(", 
             RowBox[{"sigmaL", "-", 
              RowBox[{"ConjugateTranspose", "[", "sigmaL", "]"}]}], ")"}]}]}],
           ",", "\[IndentingNewLine]", 
          RowBox[{"gammaR", "=", 
           RowBox[{"I", 
            RowBox[{"(", 
             RowBox[{"sigmaR", "-", 
              RowBox[{"ConjugateTranspose", "[", "sigmaR", "]"}]}], 
             ")"}]}]}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "G", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"G", "=", 
            RowBox[{"Inverse", "[", 
             RowBox[{
              RowBox[{"z", " ", 
               RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "-", "H", "-", 
              "sigmaL", "-", "sigmaR"}], "]"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"FullSimplify", "[", 
            RowBox[{"Tr", "[", 
             RowBox[{"G", ".", "gammaL", ".", 
              RowBox[{"ConjugateTranspose", "[", "G", "]"}], ".", "gammaR"}], 
             "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.603634060282874*^9, 3.603634259204934*^9}, {
  3.603634295018052*^9, 3.603634407573082*^9}, {3.603635313970296*^9, 
  3.603635318669284*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"16", " ", 
    SuperscriptBox["beta", "2"], " ", 
    SuperscriptBox["gamma", "2"]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["beta", "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "eps"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "gamma"}], "-", "V", "-", 
         RowBox[{"2", " ", "z"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "eps"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "gamma"}], "+", "V", "-", 
         RowBox[{"2", " ", "z"}]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["beta", "2"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["eps", "2"]}], "+", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "eps", " ", "gamma"}], "+", 
      SuperscriptBox["gamma", "2"], "+", 
      SuperscriptBox["V", "2"], "+", 
      RowBox[{"8", " ", "eps", " ", "z"}], "-", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "gamma", " ", "z"}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["z", "2"]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.603634186237835*^9, {3.603634232076045*^9, 3.6036342595255527`*^9}, {
   3.603634401323518*^9, 3.603634408004807*^9}, 3.603635319257845*^9, 
   3.604838819040007*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gamma", "\[Element]", "Reals"}], "&&", 
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"V", "\[Element]", "Reals"}], "&&", 
    RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"T", "[", "z", "]"}], "\[Equal]", 
     RowBox[{"16", 
      RowBox[{"gamma", "^", "2"}], 
      RowBox[{
       RowBox[{"beta", "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
            RowBox[{"4", 
             RowBox[{"beta", "^", "2"}]}], "-", 
            RowBox[{"gamma", "^", "2"}], "-", 
            RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
         RowBox[{"16", 
          RowBox[{"gamma", "^", "2"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}]}], ")"}]}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.603634447176813*^9, 3.603634522835226*^9}, {
  3.603635325087061*^9, 3.6036353263974457`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.603634516518385*^9, 3.60363452390265*^9}, 
   3.603635327458684*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gamma", ">", "0"}], "&&", 
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"V", "\[Element]", "Reals"}], "&&", 
    RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"16", 
       RowBox[{"gamma", "^", "2"}], 
       RowBox[{
        RowBox[{"beta", "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
             RowBox[{"4", 
              RowBox[{"beta", "^", "2"}]}], "-", 
             RowBox[{"gamma", "^", "2"}], "-", 
             RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{"16", 
           RowBox[{"gamma", "^", "2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}]}], ")"}]}]}], ",",
       "z"}], "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.603634447176813*^9, 3.603634522835226*^9}, {
  3.603635325087061*^9, 3.6036353263974457`*^9}, {3.605885458391588*^9, 
  3.605885468782434*^9}, {3.6058858151079693`*^9, 3.6058858291648006`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox[
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["beta", "2"]}], "+", 
     SuperscriptBox["V", "2"]}]]], 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["beta", "2"], " ", "gamma", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"eps", "-", "z"}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["beta", "2"]}], "+", 
          SuperscriptBox["gamma", "2"], "-", 
          SuperscriptBox["V", "2"], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "gamma", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["beta", "2"]}], "+", 
             SuperscriptBox["V", "2"]}]]}]}]]], "]"}], 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["beta", "2"]}], "+", 
        SuperscriptBox["gamma", "2"], "-", 
        SuperscriptBox["V", "2"], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "gamma", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["beta", "2"]}], "+", 
           SuperscriptBox["V", "2"]}]]}]}]]], "-", 
     FractionBox[
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"eps", "-", "z"}], ")"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["beta", "2"]}], "+", 
          SuperscriptBox["gamma", "2"], "-", 
          SuperscriptBox["V", "2"], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "gamma", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["beta", "2"]}], "+", 
             SuperscriptBox["V", "2"]}]]}]}]]], "]"}], 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["beta", "2"]}], "+", 
        SuperscriptBox["gamma", "2"], "-", 
        SuperscriptBox["V", "2"], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "gamma", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["beta", "2"]}], "+", 
           SuperscriptBox["V", "2"]}]]}]}]]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.605885480536848*^9, 3.605885833907527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gamma", "\[Element]", "Reals"}], "&&", 
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"V", "\[Element]", "Reals"}], "&&", 
    RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"T", "[", "z", "]"}], ",", "V"}], "]"}], "\[Equal]", 
     RowBox[{"64", "V", " ", 
      RowBox[{"gamma", "^", "2"}], 
      RowBox[{"beta", "^", "2"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
         RowBox[{"4", 
          RowBox[{"beta", "^", "2"}]}], "-", 
         RowBox[{"gamma", "^", "2"}], "-", 
         RowBox[{"V", "^", "2"}]}], ")"}], "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
             RowBox[{"4", 
              RowBox[{"beta", "^", "2"}]}], "-", 
             RowBox[{"gamma", "^", "2"}], "-", 
             RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{"16", 
           RowBox[{"gamma", "^", "2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}]}], ")"}], "^", 
        "2"}]}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.603634447176813*^9, 3.603634522835226*^9}, {
  3.603635325087061*^9, 3.603635387458599*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.603635388236912*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "\[Element]", "Reals"}], "&&", 
     RowBox[{"b", "\[Element]", "Reals"}], "&&", 
     RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", 
           RowBox[{"z", "^", "2"}]}], "-", "a"}], ")"}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", 
               RowBox[{"z", "^", "2"}]}], "-", "a"}], ")"}], "^", "2"}], "+", 
           
           RowBox[{"b", " ", 
            RowBox[{"z", "^", "2"}]}]}], ")"}], "^", "2"}]}], ",", "z"}], 
      "]"}], "]"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6036364861578617`*^9, 3.603636586732463*^9}, {
  3.6036366452811403`*^9, 3.603636645920951*^9}, {3.6036367185642023`*^9, 
  3.603636727366598*^9}, {3.603637655021934*^9, 3.603637655163163*^9}, {
  3.604842310786615*^9, 3.604842314822654*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", "a"}]], 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "12"}], " ", "a"}], "+", "b", "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["z", "2"]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"16", " ", "a"}], "-", "b"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["a", "2"], "-", 
        RowBox[{"8", " ", "a", " ", 
         SuperscriptBox["z", "2"]}], "+", 
        RowBox[{"b", " ", 
         SuperscriptBox["z", "2"]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["z", "4"]}]}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"32", " ", "\[ImaginaryI]", " ", "a"}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
         SqrtBox["b"]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "b"}]}], ")"}], " ", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"4", " ", 
         SqrtBox["2"], " ", "z"}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", "a"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
           SqrtBox["b"]}], "+", "b"}]]], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", "a"}], "-", "b"}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox["b"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "8"}], " ", "a"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
         SqrtBox["b"]}], "+", "b"}]]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "32"}], " ", "\[ImaginaryI]", " ", "a"}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
         SqrtBox["b"]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "b"}]}], ")"}], " ", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"4", " ", 
         SqrtBox["2"], " ", "z"}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", "a"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
           SqrtBox["b"]}], "+", "b"}]]], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", "a"}], "-", "b"}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox["b"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "8"}], " ", "a"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"16", " ", "a"}], "-", "b"}]], " ", 
         SqrtBox["b"]}], "+", "b"}]]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.60363656292829*^9, 3.6036366419377337`*^9, {3.603636715577381*^9, 
   3.603636731464571*^9}, 3.603637694859007*^9, 3.6048423438876123`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"trans", "[", 
     RowBox[{"V_", ",", "e_", ",", "eps_", ",", "beta_", ",", "gamma_"}], 
     "]"}], ":=", 
    RowBox[{"16", 
     RowBox[{"gamma", "^", "2"}], " ", 
     RowBox[{
      RowBox[{"beta", "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"e", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
           RowBox[{"4", 
            RowBox[{"beta", "^", "2"}]}], "-", 
           RowBox[{"gamma", "^", "2"}], "-", 
           RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
        RowBox[{"16", 
         RowBox[{"gamma", "^", "2"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"e", "-", "eps"}], ")"}], "^", "2"}]}]}], ")"}]}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"transderiv", "[", 
     RowBox[{"V_", ",", "z_", ",", "beta_", ",", "gamma_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bv", "=", 
         RowBox[{
          RowBox[{"4", 
           RowBox[{"beta", "^", "2"}]}], "+", 
          RowBox[{"V", "^", "2"}]}]}], ",", 
        RowBox[{"atan", "=", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"2", 
           RowBox[{"z", "/", 
            RowBox[{"(", 
             RowBox[{"gamma", "-", 
              RowBox[{"I", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"4", 
                  RowBox[{"beta", "^", "2"}]}], "+", 
                 RowBox[{"V", "^", "2"}]}], "]"}]}]}], ")"}]}]}], "]"}]}]}], 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"8", "V", " ", 
        RowBox[{"beta", "^", "2"}], " ", 
        RowBox[{"gamma", "^", "2"}], " ", "z", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", 
            RowBox[{"z", "^", "2"}]}], "+", 
           RowBox[{"gamma", "^", "2"}], "-", 
           RowBox[{"3", "bv"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"bv", 
           RowBox[{"(", 
            RowBox[{"bv", "+", 
             RowBox[{"gamma", "^", "2"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"16", 
              RowBox[{"z", "^", "4"}]}], "+", 
             RowBox[{"8", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"gamma", "^", "2"}], "-", "bv"}], ")"}], 
              RowBox[{"z", "^", "2"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"bv", "+", 
                RowBox[{"gamma", "^", "2"}]}], ")"}], "^", "2"}]}], ")"}]}], 
          ")"}]}]}], "-", 
       RowBox[{"8", "V", " ", "gamma", " ", 
        RowBox[{
         RowBox[{"beta", "^", "2"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"bv", "+", 
            RowBox[{"gamma", "^", "2"}]}], ")"}], "^", "2"}]}], 
        RowBox[{"Re", "[", "atan", "]"}]}], "-", 
       RowBox[{"4", "V", " ", 
        RowBox[{"gamma", "^", "2"}], 
        RowBox[{"beta", "^", "2"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", "bv"}], "+", 
           RowBox[{"gamma", "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"bv", "+", 
              RowBox[{"gamma", "^", "2"}]}], ")"}], "^", "2"}], 
           RowBox[{"bv", "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}]}], 
        RowBox[{"Im", "[", "atan", "]"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conductance", "[", 
    RowBox[{
    "V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "beta_", ",", 
     "gamma_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eta", " ", 
     RowBox[{"trans", "[", 
      RowBox[{"V", ",", 
       RowBox[{"efermi", "+", 
        RowBox[{"eta", " ", "V"}]}], ",", "eps", ",", "beta", ",", "gamma"}], 
      "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "eta"}], ")"}], 
     RowBox[{"trans", "[", 
      RowBox[{"V", ",", 
       RowBox[{"efermi", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", "eps", ",", "beta", 
       ",", "gamma"}], "]"}]}], "+", 
    RowBox[{"transderiv", "[", 
     RowBox[{"V", ",", 
      RowBox[{"efermi", "-", "eps", "+", 
       RowBox[{"eta", " ", "V"}]}], ",", "beta", ",", "gamma"}], "]"}], "-", 
    RowBox[{"transderiv", "[", 
     RowBox[{"V", ",", 
      RowBox[{"efermi", "-", "eps", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", "beta", ",", 
      "gamma"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.603653132443617*^9, 3.603653280971141*^9}, {
  3.603653381029085*^9, 3.603653533850463*^9}, {3.603653567660575*^9, 
  3.603653657640761*^9}, {3.604839516703463*^9, 3.604839568935096*^9}, {
  3.6048397250933723`*^9, 3.604839762727162*^9}, {3.60484808171591*^9, 
  3.604848331496345*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nondiffintegral", "[", 
     RowBox[{"V_", ",", "z_", ",", "beta_", ",", "gamma_"}], "]"}], ":=", 
    RowBox[{"4", 
     RowBox[{"beta", "^", "2"}], 
     RowBox[{"gamma", "/", 
      RowBox[{"(", 
       RowBox[{"V", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"4", 
           RowBox[{"beta", "^", "2"}]}], "+", 
          RowBox[{"V", "^", "2"}]}], "]"}]}], ")"}]}], 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{"2", 
         RowBox[{"z", "/", 
          RowBox[{"(", 
           RowBox[{"gamma", "-", 
            RowBox[{"I", " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"4", 
                RowBox[{"beta", "^", "2"}]}], "+", 
               RowBox[{"V", "^", "2"}]}], "]"}]}]}], ")"}]}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"gamma", "-", 
         RowBox[{"I", " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"beta", "^", "2"}]}], "+", 
            RowBox[{"V", "^", "2"}]}], "]"}]}]}], ")"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nondiffconductance", "[", 
    RowBox[{
    "V_", ",", "efermi_", ",", "eta_", ",", "eps_", ",", "beta_", ",", 
     "gamma_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nondiffintegral", "[", 
     RowBox[{"V", ",", 
      RowBox[{"efermi", "-", "eps", "+", 
       RowBox[{"eta", " ", "V"}]}], ",", "beta", ",", "gamma"}], "]"}], "-", 
    RowBox[{"nondiffintegral", "[", 
     RowBox[{"V", ",", 
      RowBox[{"efermi", "-", "eps", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", "beta", ",", 
      "gamma"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.605886337750194*^9, 3.605886361657446*^9}, {
  3.605886423312127*^9, 3.6058865320156107`*^9}, {3.605886615006022*^9, 
  3.605886617493279*^9}, {3.60604322155763*^9, 3.606043268431484*^9}, {
  3.6060434539679623`*^9, 3.606043463882023*^9}, {3.606046278072075*^9, 
  3.6060462854224367`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Asymmetric, Two-Site, Voltage-Dependent\
\>", "Subsection",
 CellChangeTimes->{{3.606058272889146*^9, 3.6060582803120813`*^9}, {
  3.608571689339877*^9, 3.608571697803735*^9}, {3.60857173731574*^9, 
  3.6085717413784*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gammaL", ">", "0"}], "&&", 
    RowBox[{"gammaR", ">", "0"}], "&&", 
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"V", "\[Element]", "Reals"}], "&&", 
    RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"H", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"eps", "-", 
               RowBox[{"V", "/", "2"}]}], ",", "beta"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"beta", ",", 
              RowBox[{"eps", "+", 
               RowBox[{"V", "/", "2"}]}]}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"sigmaL", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "I"}], " ", 
               RowBox[{"gammaL", "/", "2"}]}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"sigmaR", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", "I"}], " ", 
               RowBox[{"gammaR", "/", "2"}]}]}], "}"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GammaL", "=", 
            RowBox[{"I", 
             RowBox[{"(", 
              RowBox[{"sigmaL", "-", 
               RowBox[{"ConjugateTranspose", "[", "sigmaL", "]"}]}], 
              ")"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"GammaR", "=", 
            RowBox[{"I", 
             RowBox[{"(", 
              RowBox[{"sigmaR", "-", 
               RowBox[{"ConjugateTranspose", "[", "sigmaR", "]"}]}], 
              ")"}]}]}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "G", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"G", "=", 
             RowBox[{"Inverse", "[", 
              RowBox[{
               RowBox[{"z", " ", 
                RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "-", "H", "-", 
               "sigmaL", "-", "sigmaR"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"FullSimplify", "[", 
             RowBox[{"Tr", "[", 
              RowBox[{"G", ".", "GammaL", ".", 
               RowBox[{"ConjugateTranspose", "[", "G", "]"}], ".", "GammaR"}],
               "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
      "]"}], "\[Equal]", 
     RowBox[{"16", "gammaL", " ", "gammaR", " ", 
      RowBox[{
       RowBox[{"beta", "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
            RowBox[{"4", 
             RowBox[{"beta", "^", "2"}]}], "-", 
            RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "+", 
            RowBox[{"V", "^", "2"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"gammaL", "^", "2"}], "+", 
            RowBox[{"gammaR", "^", "2"}]}], ")"}]}], "-", 
         RowBox[{"4", "V", 
          RowBox[{"(", 
           RowBox[{"z", "-", "eps"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"gammaL", "^", "2"}], "-", 
            RowBox[{"gammaR", "^", "2"}]}], ")"}]}], "+", 
         RowBox[{"8", 
          RowBox[{"beta", "^", "2"}], " ", "gammaL", " ", "gammaR"}], "+", 
         RowBox[{
          RowBox[{"gammaL", "^", "2"}], " ", 
          RowBox[{"gammaR", "^", "2"}]}]}], ")"}]}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.603634060282874*^9, 3.603634259204934*^9}, {
  3.603634295018052*^9, 3.603634407573082*^9}, {3.603635313970296*^9, 
  3.603635318669284*^9}, {3.60605830473608*^9, 3.6060583947397003`*^9}, {
  3.6060584730069437`*^9, 3.606058571495715*^9}, {3.606058919063517*^9, 
  3.606058919158718*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.606058546066111*^9, 3.606058919608432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gammaL", ">", "0"}], "&&", 
    RowBox[{"gammaR", ">", "0"}], "&&", 
    RowBox[{"eps", "\[Element]", "Reals"}], "&&", 
    RowBox[{"beta", "\[Element]", "Reals"}], "&&", 
    RowBox[{"V", "\[Element]", "Reals"}], "&&", 
    RowBox[{"z", "\[Element]", "Reals"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"16", "gammaL", " ", "gammaR", " ", 
       RowBox[{
        RowBox[{"beta", "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "-", 
             RowBox[{"4", 
              RowBox[{"beta", "^", "2"}]}], "-", 
             RowBox[{"V", "^", "2"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"z", "-", "eps"}], ")"}], "^", "2"}]}], "+", 
             RowBox[{"V", "^", "2"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"gammaL", "^", "2"}], "+", 
             RowBox[{"gammaR", "^", "2"}]}], ")"}]}], "-", 
          RowBox[{"4", "V", 
           RowBox[{"(", 
            RowBox[{"z", "-", "eps"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"gammaL", "^", "2"}], "-", 
             RowBox[{"gammaR", "^", "2"}]}], ")"}]}], "+", 
          RowBox[{"8", 
           RowBox[{"beta", "^", "2"}], " ", "gammaL", " ", "gammaR"}], "+", 
          RowBox[{
           RowBox[{"gammaL", "^", "2"}], " ", 
           RowBox[{"gammaR", "^", "2"}]}]}], ")"}]}]}], ",", "z"}], "]"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603634060282874*^9, 3.603634259204934*^9}, {
  3.603634295018052*^9, 3.603634407573082*^9}, {3.603635313970296*^9, 
  3.603635318669284*^9}, {3.60605830473608*^9, 3.6060583947397003`*^9}, {
  3.6060584730069437`*^9, 3.606058571495715*^9}, {3.606058919063517*^9, 
  3.606058948248536*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", 
  SuperscriptBox["beta", "2"], " ", "gammaL", " ", "gammaR", " ", 
  RowBox[{"RootSum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"16", " ", 
       SuperscriptBox["beta", "4"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["beta", "2"], " ", "gammaL", " ", "gammaR"}], "+", 
      RowBox[{
       SuperscriptBox["gammaL", "2"], " ", 
       SuperscriptBox["gammaR", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["beta", "2"], " ", 
       SuperscriptBox["V", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["gammaL", "2"], " ", 
       SuperscriptBox["V", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["gammaR", "2"], " ", 
       SuperscriptBox["V", "2"]}], "+", 
      SuperscriptBox["V", "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["gammaL", "2"], " ", "V", " ", "#1"}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["gammaR", "2"], " ", "V", " ", "#1"}], "-", 
      RowBox[{"32", " ", 
       SuperscriptBox["beta", "2"], " ", 
       SuperscriptBox["#1", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["gammaL", "2"], " ", 
       SuperscriptBox["#1", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["gammaR", "2"], " ", 
       SuperscriptBox["#1", "2"]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["V", "2"], " ", 
       SuperscriptBox["#1", "2"]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["#1", "4"]}]}], "&"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"eps", "-", "z", "-", "#1"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["gammaL", "2"], " ", "V"}], "-", 
        RowBox[{
         SuperscriptBox["gammaR", "2"], " ", "V"}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["beta", "2"], " ", "#1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["gammaL", "2"], " ", "#1"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["gammaR", "2"], " ", "#1"}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["V", "2"], " ", "#1"}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["#1", "3"]}]}], ")"}]}], "&"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.606058961925592*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests for the Code", "Section",
 CellChangeTimes->{{3.6085591912218513`*^9, 3.6085591933715973`*^9}}],

Cell["\<\
If needed, h can be a function of v (lowercase)\
\>", "Text",
 CellChangeTimes->{{3.608560278862884*^9, 3.6085602877564373`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CodeTest", "[", 
    RowBox[{
    "h_", ",", "sigmaL_", ",", "sigmaR_", ",", "eta_", ",", "V_", ",", 
     "EF_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gammaL", ",", "gammaR", ",", "t", ",", "n"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "h", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"gammaL", "=", 
       RowBox[{"I", 
        RowBox[{"(", 
         RowBox[{"sigmaL", "-", 
          RowBox[{"ConjugateTranspose", "[", "sigmaL", "]"}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"gammaR", "=", 
       RowBox[{"I", 
        RowBox[{"(", 
         RowBox[{"sigmaR", "-", 
          RowBox[{"ConjugateTranspose", "[", "sigmaR", "]"}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Get", " ", "the", " ", "transmission", " ", "as", " ", "a", " ", 
         "function", " ", "of", " ", "energy"}], ",", " ", "z"}], " ", "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", "[", "z_", "]"}], "=", 
       RowBox[{"Assuming", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"z", "\[Element]", "Reals"}], "&&", 
          RowBox[{"v", "\[Element]", "Reals"}]}], ",", 
         RowBox[{"FullSimplify", "[", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"G", "=", 
              RowBox[{"Inverse", "[", 
               RowBox[{
                RowBox[{"z", " ", 
                 RowBox[{"IdentityMatrix", "[", "n", "]"}]}], "-", "h", "-", 
                "sigmaL", "-", "sigmaR"}], "]"}]}], "}"}], ",", 
            RowBox[{"Tr", "[", 
             RowBox[{"G", ".", "gammaL", ".", 
              RowBox[{"ConjugateTranspose", "[", "G", "]"}], ".", "gammaR"}], 
             "]"}]}], "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Zero", "-", 
        RowBox[{"bias", " ", "conductance"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Zero bias: \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{"t", "[", "EF", "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{"v", "\[Rule]", "V"}], "}"}]}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Static", " ", "conductance"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Static: \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Re", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"NIntegrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"t", "[", "z", "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{"v", "\[Rule]", "V"}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"z", ",", 
                RowBox[{"EF", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", 
                RowBox[{"EF", "+", 
                 RowBox[{"eta", " ", "V"}]}]}], "}"}]}], "]"}], "/", "V"}], 
           ")"}], "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Differential", " ", "conductance"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Differential: \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"eta", " ", 
                RowBox[{"t", "[", 
                 RowBox[{"EF", "+", 
                  RowBox[{"eta", " ", "V"}]}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "eta"}], ")"}], 
                RowBox[{"t", "[", 
                 RowBox[{"EF", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], "]"}]}]}], 
              ")"}], "/.", 
             RowBox[{"{", 
              RowBox[{"v", "\[Rule]", "V"}], "}"}]}], ")"}], "+", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{"FullSimplify", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"t", "[", "z", "]"}], ",", "v"}], "]"}], ")"}], "/.", 
               RowBox[{"{", 
                RowBox[{"v", "\[Rule]", "V"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"z", ",", 
               RowBox[{"EF", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"eta", "-", "1"}], ")"}], "V"}]}], ",", 
               RowBox[{"EF", "+", 
                RowBox[{"eta", " ", "V"}]}]}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6085592043176527`*^9, 3.60855934335443*^9}, {
   3.6085594275887957`*^9, 3.608559469521986*^9}, {3.608559506721665*^9, 
   3.60855958147011*^9}, {3.608559613786031*^9, 3.608559617334228*^9}, {
   3.608559647777194*^9, 3.608559649368678*^9}, 3.608559770638941*^9, {
   3.608560049609082*^9, 3.608560117942684*^9}, {3.6085601581396112`*^9, 
   3.6085602162670116`*^9}, {3.608560292786639*^9, 3.608560425175728*^9}, {
   3.6085619119623747`*^9, 3.608561912969488*^9}, {3.608561983530912*^9, 
   3.6085619932340612`*^9}, {3.6085620553619223`*^9, 3.608562062217628*^9}, {
   3.608562207830041*^9, 3.608562216220642*^9}, {3.608562284152171*^9, 
   3.608562292797234*^9}, {3.608562364423594*^9, 3.60856239245321*^9}, {
   3.60856244329643*^9, 3.6085624446382103`*^9}, {3.608562607725037*^9, 
   3.6085626288480253`*^9}, {3.608562839637931*^9, 3.6085628852689257`*^9}, {
   3.608565098349894*^9, 3.608565099089189*^9}, {3.608565762161375*^9, 
   3.608565857460856*^9}}],

Cell[CellGroupData[{

Cell["Symmetric, One-Site", "Subsection",
 CellChangeTimes->{{3.608559657965395*^9, 3.608559662699814*^9}, 
   3.608571745026094*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gamma", "=", "0.8"}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.0384615\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9}],

Cell[BoxData["\<\"Static: 0.0390172\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.608560607596312*^9}],

Cell[BoxData["\<\"Differential: 0.0401438\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.6085606076308937`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "9."}]}], ",", 
     RowBox[{"gamma", "=", "0.4"}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00159744\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}}],

Cell[BoxData["\<\"Static: 0.00163709\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.608560648366104*^9}}],

Cell[BoxData["\<\"Differential: 0.00167814\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.608560648401084*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "17."}]}], ",", 
     RowBox[{"gamma", "=", "0.67"}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", "3."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00112099\"\>"], "Print",
 CellChangeTimes->{3.608561091222733*^9}],

Cell[BoxData["\<\"Static: 0.00118115\"\>"], "Print",
 CellChangeTimes->{3.608561091223535*^9}],

Cell[BoxData["\<\"Differential: 0.00124526\"\>"], "Print",
 CellChangeTimes->{3.60856109125744*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Asymmetric, One-Site", "Subsection",
 CellChangeTimes->{{3.608559657965395*^9, 3.608559662699814*^9}, {
   3.608561292043438*^9, 3.608561292915244*^9}, 3.608571746394112*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gammaL", "=", "0.8"}], ",", 
     RowBox[{"gammaR", "=", "1.0"}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaL", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaR", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9, {
   3.608561297164441*^9, 3.608561311075807*^9}, {3.608561496385501*^9, 
   3.6085614965427713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.0475907\"\>"], "Print",
 CellChangeTimes->{3.608561311694998*^9, 3.608561497051201*^9}],

Cell[BoxData["\<\"Static: 0.0482617\"\>"], "Print",
 CellChangeTimes->{3.608561311694998*^9, 3.608561497052268*^9}],

Cell[BoxData["\<\"Differential: 0.0496212\"\>"], "Print",
 CellChangeTimes->{3.608561311694998*^9, 3.608561497086829*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "9."}]}], ",", 
     RowBox[{"gammaL", "=", "0.4"}], ",", 
     RowBox[{"gammaR", "=", "0.2"}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaL", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaR", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561566186021*^9, 3.608561576049532*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.000799281\"\>"], "Print",
 CellChangeTimes->{3.6085615764950857`*^9}],

Cell[BoxData["\<\"Static: 0.000819131\"\>"], "Print",
 CellChangeTimes->{3.608561576495863*^9}],

Cell[BoxData["\<\"Differential: 0.000839689\"\>"], "Print",
 CellChangeTimes->{3.608561576547785*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "17."}]}], ",", 
     RowBox[{"gammaL", "=", "0.67"}], ",", 
     RowBox[{"gammaR", "=", "1.98"}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", "3."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "eps", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaL", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gammaR", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}, {
  3.608561621305478*^9, 3.608561633135004*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00330201\"\>"], "Print",
 CellChangeTimes->{3.608561633442235*^9}],

Cell[BoxData["\<\"Static: 0.00347858\"\>"], "Print",
 CellChangeTimes->{3.608561633443009*^9}],

Cell[BoxData["\<\"Differential: 0.00366672\"\>"], "Print",
 CellChangeTimes->{3.608561633493264*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Symmetric, One-Site, Voltage-Dependent\
\>", "Subsection",
 CellChangeTimes->{{3.6085618310168047`*^9, 3.60856183825518*^9}, {
  3.608571756449953*^9, 3.608571760689451*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gamma", "=", "0.8"}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"eps", "+", "v"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9, {
   3.608561869026668*^9, 3.60856187006143*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.06639\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9}],

Cell[BoxData["\<\"Static: 0.0679934\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860949708*^9}],

Cell[BoxData["\<\"Differential: 0.114507\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860951642*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "9."}]}], ",", 
     RowBox[{"gamma", "=", "0.4"}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"eps", "+", "v"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561871904711*^9, 3.60856187204823*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.0014771\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9}],

Cell[BoxData["\<\"Static: 0.00151231\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868115507*^9}],

Cell[BoxData["\<\"Differential: 0.00143116\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868117034*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "17."}]}], ",", 
     RowBox[{"gamma", "=", "0.67"}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", "3."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"eps", "+", "v"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "I"}], " ", 
        RowBox[{"gamma", "/", "2"}]}], "}"}], "}"}], ",", "eta", ",", "V", 
     ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}, {
  3.60856187446447*^9, 3.608561874624112*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00129587\"\>"], "Print",
 CellChangeTimes->{3.608561091222733*^9, 3.60856294359204*^9, 
  3.60856586886353*^9}],

Cell[BoxData["\<\"Static: 0.001371\"\>"], "Print",
 CellChangeTimes->{3.608561091222733*^9, 3.60856294359204*^9, 
  3.608565868865465*^9}],

Cell[BoxData["\<\"Differential: 0.00166364\"\>"], "Print",
 CellChangeTimes->{3.608561091222733*^9, 3.60856294359204*^9, 
  3.608565868913623*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symmetric, Two-Site", "Subsection",
 CellChangeTimes->{{3.6085618310168047`*^9, 3.60856183825518*^9}, {
   3.60856688943511*^9, 3.608566889673839*^9}, {3.608571764473648*^9, 
   3.6085717673455257`*^9}, 3.608572464659236*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gamma", "=", "0.8"}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "3."}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9, {
   3.608561869026668*^9, 3.60856187006143*^9}, {3.6085669227783127`*^9, 
   3.608566953497655*^9}, {3.60857246779872*^9, 3.608572470997814*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.101007\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.6085669577670803`*^9, 
   3.608572473241787*^9}],

Cell[BoxData["\<\"Static: 0.127042\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.6085669577670803`*^9, 
   3.608572473266419*^9}],

Cell[BoxData["\<\"Differential: 0.186815\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.6085669577670803`*^9, 
   3.608572473268015*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "3."}]}], ",", 
     RowBox[{"gamma", "=", "0.4"}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "0.8"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561871904711*^9, 3.60856187204823*^9}, {
  3.608567123188352*^9, 3.6085671709820766`*^9}, {3.608572492437396*^9, 
  3.60857249486935*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00043159\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172027678*^9}, 3.608572495543988*^9}],

Cell[BoxData["\<\"Static: 0.000494645\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172027678*^9}, 3.6085724955807457`*^9}],

Cell[BoxData["\<\"Differential: 0.000568266\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172027678*^9}, 3.608572495582803*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", "1.1"}], ",", 
     RowBox[{"gamma", "=", "0.67"}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", "3."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "1.6"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}, {
  3.60856187446447*^9, 3.608561874624112*^9}, {3.6085671276450663`*^9, 
  3.608567138346734*^9}, {3.6085672016315737`*^9, 3.608567213897045*^9}, {
  3.608572513972678*^9, 3.6085725155166903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.459683\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.6085672143617487`*^9}, 
   3.608572516208329*^9}],

Cell[BoxData["\<\"Static: 0.560554\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.6085672143617487`*^9}, 
   3.608572516229681*^9}],

Cell[BoxData["\<\"Differential: 0.230111\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.6085672143617487`*^9}, 
   3.608572516231256*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Asymmetric, Two-Site", "Subsection",
 CellChangeTimes->{{3.608559657965395*^9, 3.608559662699814*^9}, {
   3.608561292043438*^9, 3.608561292915244*^9}, 3.608571746394112*^9, {
   3.608653062637244*^9, 3.608653062891259*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gammaL", "=", "0.8"}], ",", 
     RowBox[{"gammaR", "=", "1.0"}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "3."}]}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaL", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaR", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9, {
   3.608561297164441*^9, 3.608561311075807*^9}, {3.608561496385501*^9, 
   3.6085614965427713`*^9}, {3.60865307270079*^9, 3.608653113872177*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.121622\"\>"], "Print",
 CellChangeTimes->{3.608653114276626*^9}],

Cell[BoxData["\<\"Static: 0.149936\"\>"], "Print",
 CellChangeTimes->{3.6086531143138638`*^9}],

Cell[BoxData["\<\"Differential: 0.213248\"\>"], "Print",
 CellChangeTimes->{3.608653114316226*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "3."}]}], ",", 
     RowBox[{"gammaL", "=", "0.4"}], ",", 
     RowBox[{"gammaR", "=", "0.2"}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "0.8"}]}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaL", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaR", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561566186021*^9, 3.608561576049532*^9}, {
  3.608654127331006*^9, 3.608654155718215*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.000216257\"\>"], "Print",
 CellChangeTimes->{
  3.6085615764950857`*^9, {3.608654139337287*^9, 3.608654167402419*^9}}],

Cell[BoxData["\<\"Static: 0.000247897\"\>"], "Print",
 CellChangeTimes->{
  3.6085615764950857`*^9, {3.608654139337287*^9, 3.60865416742727*^9}}],

Cell[BoxData["\<\"Differential: 0.000284847\"\>"], "Print",
 CellChangeTimes->{
  3.6085615764950857`*^9, {3.608654139337287*^9, 3.608654167429421*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", "5."}], ",", 
     RowBox[{"gammaL", "=", "0.67"}], ",", 
     RowBox[{"gammaR", "=", "1.98"}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "1.6"}]}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", 
      RowBox[{"-", "1."}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "eps"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaL", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gammaR", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}, {
  3.608561621305478*^9, 3.608561633135004*^9}, {3.608654326686021*^9, 
  3.608654373899062*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.00292927\"\>"], "Print",
 CellChangeTimes->{
  3.608561633442235*^9, {3.608654329191028*^9, 3.6086543741169767`*^9}}],

Cell[BoxData["\<\"Static: 0.00217835\"\>"], "Print",
 CellChangeTimes->{
  3.608561633442235*^9, {3.608654329191028*^9, 3.608654374118792*^9}}],

Cell[BoxData["\<\"Differential: 0.00164361\"\>"], "Print",
 CellChangeTimes->{
  3.608561633442235*^9, {3.608654329191028*^9, 3.608654374120946*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Symmetric, Two-Site, Voltage-Dependent\
\>", "Subsection",
 CellChangeTimes->{{3.6085618310168047`*^9, 3.60856183825518*^9}, {
  3.60856688943511*^9, 3.608566889673839*^9}, {3.608571764473648*^9, 
  3.6085717673455257`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "4."}]}], ",", 
     RowBox[{"gamma", "=", "0.8"}], ",", 
     RowBox[{"eta", "=", "0.5"}], ",", 
     RowBox[{"V", "=", "1."}], ",", 
     RowBox[{"EF", "=", "0."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "3."}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"eps", "-", 
          RowBox[{"v", "/", "2"}]}], ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", 
         RowBox[{"eps", "+", 
          RowBox[{"v", "/", "2"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
   3.6085597161193333`*^9, 3.6085597675553083`*^9}, 3.60856060722332*^9, {
   3.608561869026668*^9, 3.60856187006143*^9}, {3.6085669227783127`*^9, 
   3.608566953497655*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.107326\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.6085669577670803`*^9}],

Cell[BoxData["\<\"Static: 0.136415\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.608566957792622*^9}],

Cell[BoxData["\<\"Differential: 0.222768\"\>"], "Print",
 CellChangeTimes->{
  3.60855976800518*^9, 3.608560122773534*^9, {3.6085604061611958`*^9, 
   3.608560427293494*^9}, 3.60856060759524*^9, 3.6085618777577677`*^9, 
   3.6085619169801903`*^9, 3.6085620002320127`*^9, 3.6085620660086317`*^9, 
   3.608562220305375*^9, 3.6085622607926617`*^9, 3.608562296356833*^9, {
   3.608562375300941*^9, 3.608562395503661*^9}, 3.608562454577463*^9, 
   3.608562633005458*^9, {3.6085628728115587`*^9, 3.608562894958743*^9}, 
   3.6085651031270647`*^9, 3.608565860948419*^9, 3.608566957831621*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"-", "3."}]}], ",", 
     RowBox[{"gamma", "=", "0.4"}], ",", 
     RowBox[{"eta", "=", "0.8"}], ",", 
     RowBox[{"V", "=", 
      RowBox[{"-", "0.4"}]}], ",", 
     RowBox[{"EF", "=", "1."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "0.8"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"eps", "-", 
          RowBox[{"v", "/", "2"}]}], ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", 
         RowBox[{"eps", "+", 
          RowBox[{"v", "/", "2"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561871904711*^9, 3.60856187204823*^9}, {
  3.608567123188352*^9, 3.6085671709820766`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.000433828\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172027678*^9}}],

Cell[BoxData["\<\"Static: 0.000497406\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172063036*^9}}],

Cell[BoxData["\<\"Differential: 0.000577222\"\>"], "Print",
 CellChangeTimes->{{3.608560623291505*^9, 3.60856064836511*^9}, 
   3.608562942494643*^9, 3.608565868114399*^9, {3.608567140970661*^9, 
   3.608567172112912*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", "1.1"}], ",", 
     RowBox[{"gamma", "=", "0.67"}], ",", 
     RowBox[{"eta", "=", "0.14"}], ",", 
     RowBox[{"V", "=", "1.4"}], ",", 
     RowBox[{"EF", "=", "3."}], ",", 
     RowBox[{"beta", "=", 
      RowBox[{"-", "1.6"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CodeTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"eps", "-", 
          RowBox[{"v", "/", "2"}]}], ",", "beta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", 
         RowBox[{"eps", "+", 
          RowBox[{"v", "/", "2"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"gamma", "/", "2"}]}]}], "}"}]}], "}"}], ",", "eta", ",", 
     "V", ",", "EF"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.608559675225573*^9, 3.6085596803105087`*^9}, {
  3.6085597161193333`*^9, 3.6085597675553083`*^9}, {3.60856060073641*^9, 
  3.608560648126318*^9}, {3.608561079437639*^9, 3.60856109013211*^9}, {
  3.60856187446447*^9, 3.608561874624112*^9}, {3.6085671276450663`*^9, 
  3.608567138346734*^9}, {3.6085672016315737`*^9, 3.608567213897045*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Zero bias: 0.631062\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.6085672143617487`*^9}}],

Cell[BoxData["\<\"Static: 0.457519\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.608567214363552*^9}}],

Cell[BoxData["\<\"Differential: -0.0108761\"\>"], "Print",
 CellChangeTimes->{
  3.608561091222733*^9, 3.60856294359204*^9, 3.60856586886353*^9, 
   3.608567139289658*^9, {3.608567208187553*^9, 3.60856721442752*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Look at Sample Data", "Section",
 CellChangeTimes->{{3.5866809247599163`*^9, 3.5866809276715612`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
    "\"\</Users/mgreuter/Documents/Research/Codes/histogram-fitter/master/src/\
data\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Real", ",", "Real", ",", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListDensityPlot", "[", "testdata", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"conductance", "[", 
      RowBox[{"V", ",", "0.", ",", "0.5", ",", 
       RowBox[{"-", "6."}], ",", "0.8"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"V", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6035539278489933`*^9, 3.603553942902207*^9}, {
   3.6049301747949553`*^9, 3.604930175986545*^9}, {3.604930211295864*^9, 
   3.6049302662990932`*^9}, 3.606511073084403*^9, {3.606511128241623*^9, 
   3.606511131412725*^9}, {3.608575901673624*^9, 3.608575902352335*^9}, {
   3.608575952415876*^9, 3.608575975810545*^9}, {3.608895500842579*^9, 
   3.608895500930874*^9}, {3.608915030630342*^9, 3.608915031460792*^9}, {
   3.60891551493591*^9, 3.608915519236918*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxE23v81/Pdx/HM6Squclk3Q+YYa6lxYXaFnEIOMaHWNe1azpbDupY5bbux
pjY5RJQOU7vWRoycqYt02EVYVORMVBTKFAqFrlvdXvfn5/vP7/b46/W6vd63
3+/+x/f22+X0n5901jdatGix1XdatFj/s/95R+zdetK6aceuGLJfxwGDDtH/
PmbEh90WNL3tEX+57Sc9fpf+4XurvrNyStP7D99kYasOV6W/fdA3x7Qf2fQp
b5/ZbvLGg9MHDh04f95/N73rfoOuW/ZW0y0X3HDUpicMSR82aNGsUY823aHT
yivv/+7v021eWtdl9i1Nr76i9SfvbvqHdOf2/S66bGDTbZ+7sPNNC5tee8lv
ltz1w6vT++ww55xDpza93ZNv7vzjPYemWwxY/urA0U0v3W7t8Os2vya90+M9
2u7yy6Y3O/fUZw9Y3PSH/9Z/yCk9r023f/jRzd97vOkt+j0zfaPO16U/bvnq
Ze3GNv3qA0v3+X7L69Nb9eny4FMXN/3ZRkdfsOidphf8rfceX540LL3NiRNv
Hza96a9/feq9p3zrhmbevEXXnnZC0+/u0f9nFw5ueqMvtu74H481/enxYzY7
8pOm3/vzLot7drwx/fpnE6f912lNf/Z0zys7jGp62Y6v9v3+nKYXDOzX5fDN
hqfXHNlyzRZdm/5wzA0vbXtR0ws/+tYDu/+t6flHjB+2z6KmV2xz9IlfbntT
evF5czq1PLHpl6f3brnN75v+ZPi6p9+a2vSSpUNuW/5p068d1Pp3X+x5c/rZ
G0f8dLMzmn7/jIN3nju66TcmP/HlG3Obnvuvx7/6/uYj0n8/ff5Dqw9u+q39
fnPx9F82/fzVm5z87F1NP7ngmr1eW9z0onv3WzFh+5HpFzd9bPa9PZt++sfd
7pj6h6Yfu+eZwc9Ma/qV3w486ubVTf/jpTW7/k/nW9LT9hy07u4zm379q47T
Lxnb9HMn3f/Hq55vesbtXS67seWo9ENfTu817tCm5z33s23OvaTp/9tt5ccX
TWp68qWXzvntu02/cOwuNxy3w+j0rPETz+9zctP/++lex5w1tOlJxzyy+y9m
NP1Mu35LDvy86akDls48eq8x6XufuHB8r7Ob/sv2q391+q1NT18+7qBO85t+
4LA9tuuyxdj07SPvXnXk4U3PPLf3w20ua/rhqW8O3+Hepu/Y+qyff3dp07ee
s/y4/Xf8Y3pKlxFbtujV9F3X7/D+ltc2PX7xhCe2+3vTjz7UY8jiL5q+p9X8
01fsfWv6zz899ZCvzml65IOL2rUa3/R9Q65544UXm/7r61tPeXvLcelRe68H
oekHv9Gt9yOXjzvkyTWb7fGDVo0fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5lXfmh+
aH5ofmh+aH5kv/JD8yP7lh+aH7lf+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR9yw/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
P763SZcOp539dfzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8yLzyQ/ND80PzQ/ND8yP7
lR+aH9m3/ND8yP3KD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzY+8Z/mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5MfSmtd8eOvOr
+KH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmReeWH5ofmh+aH5ofmR/YrPzQ/sm/5ofmR
+5Ufmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH3nP8kPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Njya6Pf/OBHRs/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzKv/ND80PzQ/ND80PzIfuWH5kf2LT80P3K/8kPzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Mj71l+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofhx+/5Ut37j8y/ih+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
kXnlh+aH5ofmh+aH5kf2Kz80P7Jv+aH5kfuVH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh95z/JD80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzY9xh3dZt8vLa+KH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmReeWH5ofmh+aH
5ofmR/YrPzQ/sm/5ofmR+5Ufmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH3nP8kPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/NjzdxN
V3Xet/FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzI/PKD80PzQ/ND80PzY/sV35ofmTf
8kPzI/crPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND/ynuWH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmx4/6PfVB72Fr4ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+ZH5pUfmh+aH5ofmh+aH9mv/ND8yL7lh+ZH7ld+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofuQ9
yw/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND82PBz4a+vYVy76IH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+ZV35ofmh+aH5ofmh+ZL/yQ/Mj+5Yfmh+5X/mh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfcsPzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND/aXHH8SxO7N35ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZF75ofmh
+aH5ofmh+ZH9yg/Nj+xbfmh+5H7lh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfes/zQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
OK/1VrPnTfg8fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kXvmh+aH5ofmh+aH5kf3K
D82P7Ft+aH7kfuWH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmR96z/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PyYdevzM9as+yx+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmRe+aH5ofmh+aH5ofmR/coPzY/sW35ofuR+
5Yfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+ZH3rP80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nit84hHduvb+KH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmReeWH5ofmh+aH5ofmR/YrPzQ/sm/5ofmR+5Ufmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH3nP8kPzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/Pjmv1nTTl+8ur4ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZF5
5Yfmh+aH5ofmh+ZH9is/ND+yb/mh+ZH7lR+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofec/yQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND82PpE1ffc3Hbxg/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82PzCs/ND80PzQ/ND80
P7Jf+aH5kX3LD82P3K/80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/Mh7lh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of3Xr1+Ov4
Aavih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfmlR+aH5ofmh+aH5of2a/80PzIvuWH
5kfuV35ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+5D3LD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY/x77Qe+9TsT+OH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmR+aVH5ofmh+aH5ofmh/Zr/zQ/Mi+5YfmR+5Xfmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH7kPcsP
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/Nj7UD592wskPjh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5kfmlR+aH5ofmh+aH5of2a/80PzIvuWH5kfuV35ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+5D3LD80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzY8+G988ZPvBn8QPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj8wrPzQ/ND80
PzQ/ND+yX/mh+ZF9yw/Nj9yv/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzIe5Yfmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aHw8O
7/3rbgs/jh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmVd+aH5ofmh+aH5ofmS/8kPz
I/uWH5ofuV/5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+ZH3LD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ttp1u1+c37XxQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND8yPzyg/ND80PzQ/ND82P7Fd+aH5k3/JD8yP3Kz80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
8p7lh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5sf5971+zojRK+OH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmR+aVH5ofmh+aH5ofmh/Zr/zQ/Mi+5YfmR+5Xfmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH7kPcsPzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/Nj6cOHfeTx1etiB+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmVd+
aH5ofmh+aH5ofmS/8kPzI/uWH5ofuV/5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH3LD80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/2s/td/LSno0fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5lXfmh+aH5ofmh+aH5k
v/JD8yP7lh+aH7lf+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmR9yw/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzaadtTwnft+
FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Mq/80PzQ/ND80PzQ/Mh+5YfmR/YtPzQ/
cr/yQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND8yPvWX5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+zJ1358iL2v4zfmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5kXvmh+aH5ofmh+aH5kf3KD82P7Ft+aH7kfuWH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR96z/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80Py4esVeg56cvTx+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmRe+aH5ofmh+aH5ofmR/coPzY/sW35ofuR+5Yfmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH3rP80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/DiszUMXbDt4WfzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8yLzyQ/ND80Pz
Q/ND8yP7lR+aH9m3/ND8yP3KD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzY+8Z/mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH58UXn
A/6zf9cP4ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH5pUfmh+aH5ofmh+aH9mv/ND8
yL7lh+ZH7ld+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofuQ9yw/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82P+3tMO+KxVe/FD80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzY/MKz80PzQ/ND80PzQ/sl/5ofmRfcsPzY/cr/zQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
yHuWH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh/9zzti79aTlsYPzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/Nj8wrPzQ/ND80PzQ/ND+yX/mh+ZF9yw/Nj9yv/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzIe5Yfmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH7sOfbpdv7OXxA/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82PzCs/
ND80PzQ/ND80P7Jf+aH5kX3LD82P3K/80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Mh7lh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofr008YfP7d3w3fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kXvmh+aH5ofmh+aH5
kf3KD82P7Ft+aH7kfuWH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmR96z/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Py4adYLH2/8
8uL4ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZF55Yfmh+aH5ofmh+ZH9is/ND+yb/mh
+ZH7lR+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofec/yQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8+O4JX0W9Bq2KH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+ZF75ofmh+aH5ofmh+ZH9yg/Nj+xbfmh+5H7lh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfes/zQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND82HjTBU/f3n1h/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzIvPJD80PzQ/ND80PzI/uVH5of2bf80PzI/coPzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj7xn+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5oflxafcn+3+y7q34ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZF55Yfmh+aH
5ofmh+ZH9is/ND+yb/mh+ZH7lR+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofec/yQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82Ob
C64fOHbAm/FD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzI/PKD80PzQ/ND80PzY/sV35o
fmTf8kPzI/crPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND/ynuWH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmx5A7Rx17yMLX4ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+ZH5pUfmh+aH5ofmh+aH9mv/ND8yL7lh+ZH7ld+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fuQ9yw/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82Pz5au/0V/JX5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+ZF75ofmh+aH5ofmh+ZH9yg/Nj+xbfmh+5H7lh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfes/zQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND8OHf3uz8fMvPF+KH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmReeWH
5ofmh+aH5ofmR/YrPzQ/sm/5ofmR+5Ufmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH3nP8kPzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/PjldMfmdNx3xfih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfmlR+aH5ofmh+aH5of
2a/80PzIvuWH5kfuV35ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+5D3LD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY9j/jTjtucm
zI0fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5lXfmh+aH5ofmh+aH5kv/JD8yP7lh+a
H7lf+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmR9yw/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PwY+esvadzrMjh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmVd+aH5ofmh+aH5ofmS/8kPzI/uWH5ofuV/5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH3LD80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/Ttn/rjs6tZoVPzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND8yr/zQ/ND80PzQ/ND8yH7lh+ZH9i0/ND9yv/JD80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzI+9Zfmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH7sf9/0H120bEb80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Mi88kPzQ/ND
80PzQ/Mj+5Ufmh/Zt/zQ/Mj9yg/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND82PvGf5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+fG9
PnducenoKfFD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzI/PKD80PzQ/ND80PzY/sV35o
fmTf8kPzI/crPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND/ynuWH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmx8Kxt81pPXlS/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzIvPJD80PzQ/ND80PzI/uVH5of2bf80PzI/coP
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
j7xn+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnxj9Yr25x6+c3xQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND8yPzyg/ND80PzQ/ND82P7Fd+aH5k3/JD8yP3Kz80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/8p7lh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5sfJt1x7Rvtf3XwIPzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8y
r/zQ/ND80PzQ/ND8yH7lh+ZH9i0/ND9yv/JD80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzI+9Zfmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5s+LM6eVL80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Mi88kPzQ/ND80PzQ/Mj
+5Ufmh/Zt/zQ/Mj9yg/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND82PvGf5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+XHiATf2u3P0
lPih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5kXnlh+aH5ofmh+aH5kf2Kz80P7Jv+aH5
kfuVH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh95z/JD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz46gNf7hnxA/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND82PzCs/ND80PzQ/ND80P7Jf+aH5kX3LD82P3K/80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Mh7lh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofZ92+0/wjW82KH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+Z
V35ofmh+aH5ofmh+ZL/yQ/Mj+5Yfmh+5X/mh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfcsPzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND+u6rTFHl93mB0/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzKv/ND80PzQ/ND8
0PzIfuWH5kf2LT80P3K/8kPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/Mj71l+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofszrs/bA
1yfMjR+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmVd+aH5ofmh+aH5ofmS/8kPzI/uW
H5ofuV/5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+ZH3LD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Tmu38swf7PtC/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzIvPJD80PzQ/ND80PzI/uVH5of2bf80PzI/coPzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj7xn
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmx4s0l190088X4ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+ZF55Yfmh+aH5ofmh+ZH9is/ND+yb/mh+ZH7lR+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofec/yQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND8+OKP73x8Ec9X4kfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5lXfmh+
aH5ofmh+aH5kv/JD8yP7lh+aH7lf+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR9yw/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
P9qc8fxbxy18LX5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZF75ofmh+aH5ofmh+ZH9
yg/Nj+xbfmh+5H7lh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5kfes/zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8GLf7U/8yccCb
8UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/Mj88oPzQ/ND80PzQ/Nj+xXfmh+ZN/yQ/Mj
9ys/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80P/Ke5Yfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZHiw2ft+OH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmR+aVH5ofmh+aH5ofmh/Zr/zQ/Mi+5YfmR+5Xfmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH7kPcsPzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/Nj6MXXt52UveF8UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Mj88oP
zQ/ND80PzQ/Nj+xXfmh+ZN/yQ/Mj9ys/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P/Ke5Yfmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+bHsJmrOvQdtih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmRe+aH5ofmh+aH5ofmR
/coPzY/sW35ofuR+5Yfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+ZH3rP80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Hh5woCurV5e
HD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Mq/80PzQ/ND80PzQ/Mh+5YfmR/YtPzQ/
cr/yQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND8yPvWX5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+7DR4Wc/JO74bPzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND8yr/zQ/ND80PzQ/ND8yH7lh+ZH9i0/ND9yv/JD80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzI+9Zfmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH6cveGzJH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZF75
ofmh+aH5ofmh+ZH9yg/Nj+xbfmh+5H7lh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfes/zQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND8mNR9/RciS+OH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR+aVH5ofmh+aH5ofmh/Z
r/zQ/Mi+5YfmR+5Xfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH7kPcsPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj9Ud+g6bueq9
+KH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmReeWH5ofmh+aH5ofmR/YrPzQ/sm/5ofmR
+5Ufmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH3nP8kPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Oja6v134h8ED80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/Mq/80PzQ/ND80PzQ/Mh+5YfmR/YtPzQ/cr/yQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8yPvWX5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+bPg6ZPCy+KH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmReeWH
5ofmh+aH5ofmR/YrPzQ/sm/5ofmR+5Ufmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH3nP8kPzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/Pj2dnrP8vjh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfmlR+aH5ofmh+aH5of2a/8
0PzIvuWH5kfuV35ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+5D3LD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY+2G74Q+Wf80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/Mi88kPzQ/ND80PzQ/Mj+5Ufmh/Zt/zQ/Mj9yg/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82P
vGf5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+dF3wz8UfhQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzKv/ND80PzQ/ND80PzIfuWH5kf2LT80P3K/8kPzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Mj71l+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofnQ/+J5LP+i5In5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZF75ofmh
+aH5ofmh+ZH9yg/Nj+xbfmh+5H7lh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfes/zQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
+GDS8kEzVjV+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmRe+aH5ofmh+aH5ofmR/coP
zY/sW35ofuR+5Yfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+ZH3rP80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Lh+p47XjRq9Mn5o
fmh+aH5ofmh+aH5ofmh+aH7o/y+qzkF/AMAwjjMo10BhkLMUk3IskgyKUsqZ
EibH6NjIJln8cyyKyTW5NhldE2JxTvJfJBnc97E8n+c3fqf37X2HDz80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pzovfmh+
aH5ofmh+aH50v/ih+dF944fmR+8XPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND/6z/ih+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
sfDE7tN7ln2sH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+dFz80PzQ/ND80PzQ/ul/8
0PzovvFD86P3ix+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5of/Wf80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Hg24tK5la8Hfmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH50XvzQ/ND80PzQ/ND86H7xQ/Oj+8YPzY/eL35o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
9J/xQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND8+PgvuHL0498qh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofnRc/ND80PzQ/ND80P7pf/ND86L7xQ/Oj94sfmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH/1n/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PyYMTzzxud5n+uH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR+fFD80P
zQ/ND80PzY/uFz80P7pv/ND86P3ih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5kf/GT80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
bq/fduvBw4Efmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH50XPzQ/ND80PzQ/ND+6X/zQ
/Oi+8UPzo/eLH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh/9Z/zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82Hn3zP3ze7/UD80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzY/Oix+aH5ofmh+aH5of3S9+aH503/ih+dH7xQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82P
/jN+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofoxZ/OLJgUlf64fmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+ZH58UPzQ/ND80PzQ/Nj+4XPzQ/um/80Pzo/eKH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR/8ZPzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND+uXpz8au3NgR+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRc/ND80
PzQ/ND80P7pf/ND86L7xQ/Oj94sfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH/1n/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PxY
N3nD27lbv9UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj86LH5ofmh+aH5ofmh/dL35o
fnTf+KH50fvFD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzY/+M35ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+vB03+82ffwM/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80Pzovfmh+aH5ofmh+aH50v/ih+dF944fmR+8XPzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND/6
z/ih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5MXRo+4cnF77XD80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzY/Oix+aH5ofmh+aH5of3S9+aH503/ih+dH7xQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82P/jN+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofix4f/bX5VU/6ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH58UPzQ/N
D80PzQ/Nj+4XPzQ/um/80Pzo/eKH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmR/8ZPzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND+e
bns56vC7gR+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRc/ND80PzQ/ND80P7pf/ND8
6L7xQ/Oj94sfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH/1n/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pw48GjKhC3Hf9YPzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/Nj86LH5ofmh+aH5ofmh/dL35ofnTf+KH50fvFD80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY/+
M35ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+TFu+ceqCRb/qh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5kfnxQ/ND80PzQ/ND82P7hc/ND+6b/zQ/Oj94ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH/xk/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80P25dPzln9POBH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+dFz80PzQ/
ND80PzQ/ul/80PzovvFD86P3ix+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5of/Wf80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Ngx
6/H8Vwd/1w/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82Pzosfmh+aH5ofmh+aH90vfmh+
dN/4ofnR+8UPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/Nj/4zfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH6MPjl+yY0Zf+qH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmR+fFD80PzQ/ND80PzY/uFz80P7pv/ND86P3ih+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kf/
GT80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/roxcvWLozsAPzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/Nj86LH5ofmh+aH5ofmh/dL35ofnTf+KH50fvFD80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY/+M35ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+rN1/dM2OXX/rh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5kfnxQ/ND80P
zQ/ND82P7hc/ND+6b/zQ/Oj94ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+ZH/xk/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz4N
39u8dOy/+qH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnRefFD80PzQ/ND80Pzo/vFD82P
7hs/ND96v/ih+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH50X/GD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY9jL09tmnht4Ifmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+ZH58UPzQ/ND80PzQ/Nj+4XPzQ/um/80Pzo/eKH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmR/8Z
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND/+A3yRxyU=
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
B+STY5up05rCZ/2kU6o5vzrzJqWv4t+SU3/5N9nLV0wcKeFJSn0SuGr4TBNJ
s9TymR4RZ3Xiykt3yJeGSe0zHSN8TZ/VKKZcKp/FblOXivhW8LepET6NL6af
5KfFdhDbyhmLo47PNFFt+tVmTuE+pL42GMWlcVRT12f+D+yn++zeyUWuns/0
hvRDOuenx3YTU21dMPq2ZHR+Jp9pkFd9pl+E20m93pN0vD/1faZp1CODz2qj
OmZPAq69xMTXAM4MzJCeGcWjGXaTi2qqu/Rp6DO9o/rGPtMO0hCN2MtXn8w+
0x7SMMKrTrEsCeKKNSKumkzMJbxmky4SVjW/0uM34opldZbNZ1oqK/v95KWP
9PdT0kf13T8/vOo3/aRvrb51+pZqds3chHPW873K/j75qT7TRdJdzZ218Nl9
+iJx5aVdpGFec/40fnv97k19FovqqKnkxd00QXwa+IdwNKOX9Eoz1ub0bUq9
ZpSGmeHsTdaX6B2tEV9u4spLI4mjBbWq+78G89n98TKxmcRn+Uy3aN/SZxpI
HK3wW5LLC34KZ5KDvHDSOqU485LM0AK+fNTOwp/NDNI6rX12x+UjP5u97r6/
scfg1Kc1veb67B7U8+hbpO9acup0d/5fF2kOZ/OcLXC20BfTIcq39Zk+Eq4g
ccXaEZtHXHxt4SxA37ngpIFUN99n2kg10jDz6VmY+Hz8BczQ3lkHn+ml9vC0
o74QfaV7lO9Avr0vpq8U6+gz/dHZWReeryj8iseR6+QzzSS8tNAiZ4vxi7Jf
hL8QfGfqhVviMy3T11k/n9156uelTzFwxZnpP2Zc6jOdswRsV5/pmCXEixPz
wqe6TvSVDlL9MjDdqO3lM60gLeEn3t3ZCp+9f8sx+SXJBcC+Al9J1uX4PcBE
sdpH9YrWns5WOlvlM63iZxb1Lk2uDH4pZinNuhKensz+Cs+uZ1vtMw0k3rd9
ph3Ksy8LZ1QnCSsdIz3T29kaaoR/g1gE/GryYXLR+Brw8eD78Jsmwk/EPjF1
YWaWDnrH2VrWCvSO1sSDqUB+mLPrzob7TBOIrx8YcUj/bPDF9MW7PtMt65wN
8Jme6M+qfTJylamN5pJg/YhVgWs9fmX2VYipl74RA50NcjbYZ9+OQVgKX0wv
JQM3gFX7jcy8Ab4NvpgWEpe0RWqePw2xIcTf95lOec9n+iMlOWmiTb6YtlFs
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
BtNH+kM6ZIOzq86uhUzjrCemnO6rH0J2n31N7SB4rlBXhZqqxK+GYlprE2ck
PXTd2Tf0GQZmOP515qvOXNWYYSO5YdTpft3hbCdnsI5nFu+NkGmimyH7M679
ByHTMe+zal+b3Ejww6mXfytk2mN0gpqofnuP2Ch6fBsyvbLZ2RasLrGt+Ip9
B+ct+m9mhlHMcJOa2uQ20UvnNpb62/wW3/N7SLtIw2wDo/w44op9SOwOcdX8
yO9Yl/nqsW7DH8uc31H/KnzqO57e2zn/BuS3h2IaqAG5O+DHUTOe2HZqPuT3
a0TdHyG7W3T3HQ7ZvXMoZBrmJ2d38SexV92ukOkSaY2fnf2CP5X9LnDqI23y
Ucj0zI/wTIRrErF71E4Bq5o9+HupncwswjSh/2567WZ/F64pzDGVvXSFNMtv
+Fp/Z2bNLv3zccj0SjPywv/Kfi/538k1dt+rfeA/huNXeJox715iM4hLr0i3
7GcGcUnr7CMW1TTyP3F2ImR36HH67AOjuvvU7uGsmmC7iam+FXzSI9JID0Km
UaRVDjp7yG+v3/0Asdb4reDQ+3AkZPfvbDgekj8AfjYx8bxOjfC6xx85+zNk
+qctXIrPJXeImjbYQWKPwPwBXhz/11rOnoRMMyxgL/9xyPTJX86OhkwDfUrd
X9S2J9eB85vFGT7Avw92Pnh9H/SNGQ1Xe55jAf3UWxroGL/RcX6vjuCOUPc0
ZLrmCf2PMcMCej2mpgO5rO7dyha290D9bzGDuPVORO94rSdDds8/C5lu6ULs
M2LPiesO9jpOn7N/nf9fyDTKCfCd4VnEvKrvCp80i7TRP85OOTsdMg2h+L/w
dCd2mp5L6fsP/nNqu8K9jJzqPw+ZHhLHFyHTItIhZ4grL60S52b3hM1fwb4H
OGmSSmG7qyqGjes0tf+BX07NCmKqO0utzkZnJL1yjhm+YI6z+P/o7NA3mkM1
q8D0BKfZPMQrMs81nvsUZ6TfYA2/iVZ/2HSPtIo0UcmwxQIJ4oqVCtv6f90U
Ni1SRjoL/Bq4XwEjHSetIw5xlQ6bTpEeCoXt/g7CcwmuteTW0Vc9v2Itjf8O
fKqV7ivB361J66guHDbdIP2QKGxxxSLOyodNt5QLm8mXrlFuPRyJw3YHb2SW
MPNoTj3r16zl8OOpFUeFsJ27zlw6qAK+MJolqmnkq48w5albDy6qx66QS8I8
wut+qefW+vg/sZcukWZI6vzKzqqETeOoVjHlpEWkL1K4fTVn1cP2Z1va5zrv
b/Kw5TcTrwTfJrjEo29CVTjk32Qvvxqc2itehdk0Q7KwcVZmNu2lh5TXmpy+
Nd1aK2yaQVpB+iS129cImzbR3KnCpl1Ssmq/jZwwmkH3lO7JJmHTQoqLI1oT
1WwpiN0mr/4f0jONs9ph0zG1wNRktlrE5evbpe/WM2ZJzTyq385zJOd5k/H7
6Hx0DmnBCFvHWd2waRJplxecnw7bRUxarg4Y+ZqhNu+D3ot74HZQL36tO3hX
9M6oR3pnGcKxO1ur9ntYM/KevQpnemZIx4zi0Qy7yKm+Qdh0j2qyhE0zfMzv
IN3SKGyaKlPY9Il0y8/UZSS3h3xmMD/wfHU4p7Q8yy/UNQzb3aa7YyG14hGf
eotDXI2YQZooK7Nl4fk0g55xH7n98Iv7V9ZG+B/Dp1p9s/Tt0rdJekV1ujs/
cvaas6bEFctOTPd9U3Lyde8rJz0jbIuw6Y/mbn0xbHrmEO+z3uX7rE3xc1Ar
jmZhq5NukSZqht8czj/gygm3MK9RdwCuqDZ7QE74g9TkYh7V5gmbnsgdNp3x
Uth8aZ5HPIfiR8i1dNYqbBpHPIop9yfYlnDnShBvCT43vcTXOmyapRUxzXGM
veLCSxs9Bvs3a5uw3Y1dwnZ3qi4vtbq7dE+V5wxycg6qeZ33S6v+jMuXbnk5
bNpFf+bbOr9d2GLK5QubHhO//IJhu38LhA37FL584I/D8xSuAuClVTqETau0
Jyau0+wVfw5Os+RnhvzMppmEe06PY8wk3fMP3DoT6ZLOzjo66xQ2fSLtUsj5
hbEzxFTbEczfnNET4h3gEO409Zq3EDN3ppd6FHFWNBzTN1qLMk9nfidZV36v
IsxQmPq4cExHFUnAI45i1PmofdfZ+rB9d6UX9PdE0indwqZdhFseNn2zjH1X
8j3DpgOCWA9iHSLuWSOmyYqHTbcVo74k/MIHqFnhbGXYvhWrwvbt0L4UudLM
0p2a7uy7gVkOrjt8AerLULsmbHpBukT6ZHUCfxX7Xs7eCMf0UJh9WXhW8ay9
yPVi35P6NXBGqOuNxRPrg6/Y28yjmgrs3yEvXCJ+p3P8bhXAvx2Oac3lYPuG
Y5opEXv9nlX5TdeFTausddY/bFqlH6v2SckJUzFBLjHWl1hluN7Fr8S+MjH1
0v09wNlAnusdOLVPTj4ZPQfQfwD7Dcys2QeBV101chvDph+Ghk1DJAcX1Sha
BxMbHI5pOdVVZ92E/w7PXJFa4YeE7Vuh70MBaqvS+72w6R/V12T/Pn4N9kOY
LyUzDmPOocSHUF+DGdKQF25v2O4T3Y3P+Dbpu1STPtJTI8J2vw8P232/2dkW
/Nrs04KTppkQtvtad7E0yOiwaZcPwNeipjYx1Y2kdlvY9NBWTL50TX1yH8In
3lHMsRVMOjhGMtsW4qPAp6N2DPOMczY+bLqhPtzSHWPDplekVXaETc9sZz+G
/IGw3V+tqK2XYL7t8GSkzxhiDcIxDZaZ3jud7QqbjmkIZgf+TuKZmDUzayZm
aAhWuJlhuzvf5DlH8ty7w6bz1KMJ+z3OJjqbFI5poGzsm4DfTU1jZpAW0Xuy
l992IjUT2U+AV++RNNCUsN3Zk1m1z8k6Fb8ZfB8zwyTwTeBqmqA+O+c2nl6q
2Rc2DfUJv4d+i2lh0yovkm8BZjpx5fcTV/4gv+MBanIy34us05jzY3hywRXV
Tp/QV1poBuefm3x0n4dYS/rux99P/XSwL4HVbyk9cDps94rumv/C9t3VvXbI
2eGwaZU27KO6RXWznH3q7GjYdEY79u3hngVO3xp9c+bC05rzaMN6iFppnyPO
5oCNfqfkv8UsbZlhdti0Tj5sFrEjYA7DeYSZpEuOh007aD2Br9k7MLO0yryw
6RXhj4GdR04z6Jum79lw4vPBH4PnKLiCzN6RuPILwqZVCtO/MzMUhkf5hWAW
0CMtPQvTR7iT1J7gDOZwVnPYz4ZDXNJD0lGfhU3TLA6bXtHde4rfvCv7ReQX
4qtWmkPvRFzEOE4lwBcFtwRO1eq90fsjHfR52N6r0/Ash6s7OekYabF/wB9H
U0lbdaOXanuCPePsC2fnwjH98Qb7nuTPOvNGTMt4ItbnDPUe4is5k86cZRfW
z6jvBZ/uJd0btZhfZ7CSGXqB9bmYP2I6ZzX7NWA94Hsz43kwmk+4XnC9QXwV
OelG/V2Y/q5LNX3gCERMH6nfV269FDZtobv+bfLSMdIz+neaQbcPRUwHfEms
L3hhle9DLhoPgu8H/mLYevXH789efa+F7e6/GjZ9FHa1kYit0k3qHa3pB2Yd
uBAY9RoIn54nsYsniZiOEFd8xPRSoojpFO2/DpsGusyq/WBywqxPkBuIXSK2
ES71kb+B/UZ6q690zJUEzxVhhqs87xBsMLivWbVPGjGtpGfQffmCW9PxTIqL
X3frnbDdMSldPFXEtIX+vOvbcp13L1nE3r/hxL4hlpz4NeLDwL9Hf+FGUJci
YhpINVvYp8TfzP596sR9w/k3w3av34DnG+qFV99R5G9yHteYYQvPo2eRbvjO
2W3wwn7r7FbYtJF8aZjUDp8mYv429qPBSc/obBTfSm4bsVvwR3XSmAT9xhHT
2Uu3pI1Yv9HMkpb4dmZQ/+2safHvwCM+/Y474FP8e367F90+V8TuGmH0O0vL
/BA2vSL9kCFiGid9xPbfk78bNo0yGfuJmDjSwzOBPt9TH9VKwk+iJqOLZ4qY
HsocMZ2j/R5yHzHLj9T8yF4z7GE+4X6EbxL14lFt1ojpB2kYaZMskZivftrf
c/7P4ZiOmcpemL3g9Kz3yN3j2e/ClxXOadT9gk0n9iu+YtmYRzWfsM8esbxw
0je6s/NF7H4UZj84Pe9unlnY38Ix7TSDvX5PaQb9pjkjpk9yuPV+2DTN76za
zyInzIEEuTex34gdgkvvi/yD7A/xDqmX7uwHzh4ys57pAPs55GfT8wH9H7B/
iZk1+x/gVfcpudwR0yp/hU0/KC9cVFdpfUTsEXvVqu4oax58zZWD2d4C/2fY
vhP6Xoyk9gi980ZM+6hev4v2+fCPsVf9PPg042Pm/Iv4n9QLrxkWkBdOd5fu
sPP85i/zuzfkN9Y7I30hTSFt8iRs+ubvsN33+V28QMT8k+wXgpO2EZ/iJ8id
JKb803BMMy1i/yxsekixghHTL9Ixuu91t3d19hzMM2ZQ/1OsBfHzxrvniTdN
tDgB92l4CzkrGjH9IB2i/efktRaOmO6RDpHm6hSxWJEEccU6E/8cjo7g/4VX
2CLgukRM03TlWbpgXuKdqBVHMWbTjGfhkB8Hl4e8cNJGult1h5aP2FmpRzdn
5SIWU65UxLTHRX7v4m5fwlmPiOmZ7ph8P7kvwfrg87N2x38FTBSrfVT3aNV/
H9bTWa+IaRZxnaN3kFwIP8AsQVblLsJRijMpzvO+ETEdJN4+EdMg8eyj+iiq
pYSVdpGGKeP83tQIXzpiMeUiYHtzTqUTxHuDvwxHWc5W2qUsaznOuTT1mlma
qK+zfqyJ6B2tEV9i4lFc/4jpncTs5deJ2B2je2dAxPSGcBUjph8qsGovTdMf
jGqrROzbUtmtgyKmWaRHojVXsfLEpGPUY2DEtEuliNVWhucbvlXilS4ZDOcg
5qnEDMmYYQA81+FKBrdmkN5R/ZCI6YdhzoazSq8MjZj2UJ+q4IVNRVyxasSG
EtdcVZktJbMNBifdo7qh8AtfnXg1ZkhNf8WUi+oirTXA1yD+N9/D///zpouN
iJgGGsh5JIdzOPHbcNSMmG4Y42xsxHRRrYhpFWkYaaWREYvVThBXbBRx1dSk
5wvw6/0Qtja40RHTPuqTgf1o/PTwvQBHXd6xOvDU5r1LB1d68sJFtVMGuKVF
FKvn/FedNYiYFhG2XiSmz+TX59n13NJK4yOmccaRuwe2Js/4f00KRnid9WPO
fix1mah7NRLTQFo1xwRnEyOmeV4Fpz5ZyGXFz8wsWViV+wUO3YeTIqaDxNUo
Yvej4ruc7XbWOGL3ezaw0i7SMIpPdjYlYnd/I7DKtYrYPd3SrU2dvRYxXZId
jsn0aQQ+O7GopmoKXjpoqrNpEdMuiolL8ZzkmlDzO9aY2FQwU5hBmCbUik+6
SBrmzYjpiBkR0ybTnTWPmO5pxqq9NM10MKrVvbXQ2SL4phOP1jzEXiOWmx7q
J+3SImLn05KzUky5mcwzK2I6aCbztGCG3MwwA55HcGmOYsw1hWfPAbd+j+i7
pbV1xHTR7Ijplr+JtSE2h3g+5lDsLWfzIqYzxNcaznzMOYv6J/SRbpE2muvs
dWdtI6ZXCsAlHmkXxdrSMz995+LPoVacbTiLvJxPu4hpJnFIO0hnnNAcTh/N
RicVYub5mDSNYscipqGk/1R7MmKa5RmziLs9/O3gKMTM6tORXgt4B6I6pgj7
zuRPYp/Bv4AZ5pPvyByFyan+VMR0jmrWRuzueYdVe9013cAIu9jZkohpiG7E
TkdMZ0hvnHG2zNnyiGmOYtQUB6P8WWLFeI8+g78LtdI/S1mXRWLapSS8JZhh
Kb0/j5iWKkGfJcx2mvgZVuFWOlsViWkYaZVz8It7BbFexM/hf0GuNFjpNv19
1xq0yko4e/J8vVi/wF9JrTjOO/syEtMwmmc1fpkE+3LEdFduitid15uZzuOf
h6dHgmeNnp3O40LENJH6rdHMEdMoF519FTGN04+9/Ark36b/GvbSLXoX1kVi
OuwC/gXqK1Cn90d39yVnl/EHsP86Yne6Ymvhq0S+P5jo+1eBfX9mrQz+3Yhp
lasR0yDSHBucbYR/MD2kYdZHTMdcJjeQ2ivUr+E5V3NGfTnP9dSrl74h+ka8
Rd1guIbgX6F3dWYZxlzXqa/C7NeJXwNXlbnXs1Zlpmvg9B3S90jfrE3wq89w
uL7BbkRMe+iuf8/Z+1gtYsPBCaM7+XtnP0RMj3wbMS0jXA3qN7FqfzNi+kY9
PnC2ORLTNLXZ12HdAt8tOD9ghvepH8kMtchF9dVI+nwXMR10ixk1652I6Z+t
EdM9Y8DdJrYtQVwxaRndcbqj9jNTXWbcir+FHmOYsz4c2+invtJD2yOmdT7E
XgX7KrkG9LsN/jb1UQ22jbpRPN+3cOvsJ8CxA549EdMN0gwNie909lPENMyP
mPyJ5BqBnQDnRNYf8XeBiWK1j+oVrdJbd53di9gd3pBZ1HsyuSn0/In9JNbJ
8Oxm9p8jpoHE9RHPovivEdMO08lNhXMa/s/4Wn+JmHaRhtkLz172+/g9W8A5
nbrfnd2P2F3dlJqoBlLtx9Q2x2/OvgX9foVnBlzSRL+x/zVBTTNiv4GrwH+r
pf9m601imuGZs+cRu4MOREy7fMKqfWvmnQX+cMT+jB9i1V6a4AEYYf+I2Pdn
TgKuqJbbTyxaL93yCHy07s+Ifbva0P9gxDTWLPrMZn3IjAcjMX12EG5pmLz8
XdADtz5E97Rj3iP0UC/pl3bEPiX2F3G9l9L2WYnNJ34YfFtmfkSd6tvD9zhi
ukU10lvSNMfZ/0X+bzDyo/8MrG/lUXjE9zK14njIOc1mnYMvnidwSVPljzed
8jRi2kW6pWC86Z8C8abDnhJX3UJql/I+/ANHAXgWgntKvXg+A7+EmkIuXjje
dIvql0VimqcQcc3yjJpn7J+C0XxRDukC4YvHm34oFm8mXxpFWqWI2xd19q/z
/4uYHipCrTiWE4+LtzM5wVmeZNXziecMdZrhFHNo9n/hLEpv9fXEmzaKY9V+
FdhlPPd55i7BDMKuYOai8ETrFf/gJXfnOEuW2/i8cKr+lXi7533xdvfr3ldM
GkZxP3HlSxJXvoKzivF2N5eJN11SGl5hVzNnifiY1hKX9JC0Ual40zDSNgHn
B+OtXjyKa7+WvPDqq/4XWVUvvgCcpahXrepC8aaNpCXi401PKBYmXtat5eJN
t1xmL1/6RHnhdF+libc7K8Q8mkv4Szz3ZVbVv0tdJN50S3nOSf4V9uvpoZlk
iZhNOWHKERcmwoyKf80suiM/5Fze5uzEX4HfQr+J/nzLl25JEm/aRXqnkvMr
x1t8IzmtmiGxs+TxpkOSxRv2OnxRnDDiuQ5XMvDSM1Xj7U6vQkxcm9krLr2j
OZJSJ86kzKaZhLvBXBuYSfrgJtzSEtI5NZxfzVn1eNMs0i4pnJ/SWap426ek
thoY1daMNy3yLXzVwG6mXvOmYGb1UK/qcKbmXZDJT8M8wtXEasG/lZlSMaN4
bhFPBU/teNNzqskRb3dMdlbtdcdIt3wP9oV40yDbiStWJ950h3RIPeend5Yh
3vRHWmqEv0u+frzF/8fEecf/XH5vXGbee3zsjDKTjOzskZE9QkT2zs7M3iR7
ZGaVlURkRLYIIaKQVekrRUlKqd99/c7z9Xh//jiP+9znXOc65369X173lfp+
N/Me1WIGzSwdJE0kjq2sno7RKl7lxZmZ3nV8pqsU30JOs71IXHnNJv8J52f3
mf6QxpC2aeAzfnFn89le8fo+M/m3qBVOmFHORsO1ndwOzqjz3WKt70voro/B
NXTWyGcaRjU5fKZl5IsvByYtpLjudv1dhu7E28zbEL8hPHU5Yx2ev56Fnk9j
n+ki9cvlM00i3ibOb+ozDXOHvXzpFWGEzUmN8HoPcjs/j8/w4myMr1X1u6nT
+6O7+yW3NsP/Ndm+uc/uc71fuXnHlBOmqS/x/u1mr/hdZlB/aR7pj5d9pi2k
G/I5Pz/c0ifiz+uzuPSLZmhGX9W28Fl9Ts6Xg99E5/qZ2n3003dB34n11Ilf
fcTzO7ECPptDM7T0mcb5g3rxaOaDzOph9zO3TP4+ztSSc+Xg/dJ7pm+dvk36
LolbmFbOXvGZHpKvO366sxn4z7BXXjhpmo4+u3d1J0uTvOozPfMW+ILUyH8L
/tbUzvKZXpiJyZc+ko5RbrbP+MTbhjlmgpHuEUdrZptBvA34h8zSlnnau7WD
zzRNEbilc9r5TH9Ie8z1mZaZ47N9W/Lv+OwOK89shZPNNwce4f+hZg48RXku
6qne85zN95keeg7MXPx5xP9l1v9YtW8HZi64Xj67R1/jObTm3At8pp3UoyT7
t511ctbZZ9ooFWtnMCXAzcfXDNIb0iGL+G07UdOJfUd4F/pML3X1mV7pwqp9
GtZu+GXgW8wMncGXhKtUsvpUPLcO9FLNEp9poGX8HvotuvtMu6Ql/zyYHsSV
X0pc+eX8ju9Qk4b50rJ2Z87F8KSDS7qnHL3VV9qlJ88/PXlv7yNWjr5L8ZdS
3wPs42D1W0oP6G7R3fe+s6HOhvns3lnhbKXPtEpF9vID1PV2ttrZuz7TGVXY
V4W7Nzh9b6RJ+sFTgedRkXUFtdI+q5z1BetpGvn9maUyM/TxmdYJYL2JrQKz
Es5VzCRdssZn2kHrWnzNXo2ZpVUG+EyvCP8e2AHkNIPuKN1ZW4i/Dv49eN4F
F2H26sSVH+gzrRKjfw1miMGj/CAw8vUd/JNvZIw+wq2jdi3PoC/Pqi/7PnCI
S7pKOmq9z7TJEJ/plQz83vrdN7AfTH4Qvmp17+p9eAOODfBkID+YWG3iwmei
ZqOzD3x2j6s+iy+hczYS1yxDqRnKfgiY95Nx1AW/hee/GZMvXSJ9ssnZh86G
OxvhMw20iVpxZCM2gmdSg2dZk3U9PHWpe8nv7lm//R1EFniz0mMzfaWdpING
smqfHWwWzt2QuT9ihhHg68FVP1m98vq26RtYipqtPrvPbzob6+wHZ2N8dt/n
IN8YzFjiym8jrvx2n+kSaZAd+NupHw2+If0awSEuaSDpoY99CT0zztl4ZxN8
pnvGY0+Rb0LfbfjbqB9LbS722+F8Ci7pJ2mVyT7TEZPY5yE/EcxOZ7t8plua
sW8OLje4ZpxxB/4OcHnIi/sTn+mdXVgLeF4mt5tZ8oKXP4XZXgYvnO7Fv5w9
9JlmygeufcDdI87+89tzycX5X4ZbumeHy+3kPdOf9z3OPsWkVxSTXtbfhUnD
TPWZ5lIf6Y7ffaZL3iQ+FY5W8N/zmQbSO7zX2T5f4s5uzb4N63747sO5lxk+
pX66L6Gj9lK/m37/r/N8pk3u8zykGf70mRY64DN9MhvMH8QOJosr9oCzTeEs
+6lvA/5VYvfh0Zzt4DhIP/WVDjrsMx1zCGsPtj25DvR9AP4B9XPAHaRuHpw6
U0fqjvjs3krrt7umI7HPnP3jM13zN+ZpHOU6gf3PZ5rkX2ef+0yvdKHXQ/AP
qZd/lFpxPKJO34m32S8ktghfXMfgfpuZHsEhrs7EF5DrQkw1x5lHtV/4TDec
9JlGOYG/mF7/Ee9GLoV7Ho/5TfMcJ9YN/H/ku5Lz4inAn6SX+FL6TbeIqwdz
9GSvuPDSNEvBLmNN5bff9gi/k+pOUXuU8+mcrxFTTjWp/abNzvnsHj3rs5j0
ieLSM2d8pjP0u6fx229/htxpYsupO038NfDLyQv/pS+hV76k11n69qHmFJyP
+03DpKNfOt63PnB8SU6YlXDoDNJM0j2r4JCO8bs14Le4Yukxnz+hW1T3Fb7W
8/CkB7OM5/UOuQFg9S3S9+Ee/b+CS9zSPqrVDO8xxwW3fu0zPeMHI+xAYl/D
fYH9BfbqqTME/aZ/svjtftnKDOqvb9hAOL7xmZ656DOtojted33Ib7FLyeKK
hZ1l8tt9ndFv+iPq1hj4QXCqv3g0wxA4xBXxm26RJvrWZ5rmss943odrKLlh
9FXPDawR/CHwXabmfbjfoO6KzzSDtMR1n8UVu+osyW/6Je43k/8BueFgf/bZ
fXabWa74EppNZ/2ANY5/jVpxZPDbs5EG+pD9ZjDXfQl9I/8GGM0k3HBwI4hv
IjeZmaZw5qE8g4z8FuKXNpGv30d6Rbrle2eZ/fYe6B34jtho/FHMIO30o8/u
34/gUN0ocKOJZ4ZnLDXCS6tkdfFsftM54+BSfBu5H6gZg2mGH8gJo/luMM9I
asUnDSRdksNvGiS737TKE2695TPd8z9W7SeSE0a1Of2mQXbB9wScXo2nzX4k
tpMe6idN8xPvwG3eh0nMkpN5csGfk3l+Ygbx7IBrEjHldlPzpLO2frtbXvWb
yf8bjPLSDbrjf3F2h9hTxKUv8vhNl+jPc3Pnt/Abfgo1yguX22/vzi/kxP8J
c6hO34RmaCz5v8F5D97sTqPlCJgOU3/pnT3M9CYz3sW/Qz/1FU6aoaW0m9/0
SX6/6QbN+rLfdIr0Sl7n58MO+BJaqwUY7zul75bqpIW82n3U67x5eSYtwQir
ngXoqzle8ZuO0Wx/gH1ATvEQ364gtZpHc0nriKMAz0DPQmeV9tQ/C+m5HSL/
tN/0SWu3tnFW0Nkz/oQG0voMmL/AaS75mkFaRO+D3hHd1wWpLcj+aXj13uid
edZv93chVu2PsRbGfwRfO7/NoP6FmKENPF698sK195tukvaQVinm9h2ddfKb
1ijiN60iLSSsNIyn2dRTvYuCEbY1Z3yFZ3SYZ9aBWnHoHtQdthaewsn6iMvT
UR2Z4SRzPee3M7ZjZu2/YPYU8KuP/A7Ui68YnNJr+udK6cPOftNLnbCU9JIO
kaYo7fzizkr4TYt0cWtXv2kb3f9d/Amdo3wJ4uLpjN8Z3GnyJTFpIMW0lvJb
P2mbbs66++2uL++3+1vxNOS64qdmn4aYOErDUwr+knD18Js+kn55zW8aIy25
dOQfx5duKes37SJ8T2rKkitD7HHqyhA/C/5x8sI/70/oJ/nlsAvEzvKMxdHb
bxqoF/16MadwX1HfC4ziukd1Zw7223MSZzniig3xm5bo7zfN0MdZX7/9edd3
poJbK2IX+fYEwHmYr8GJvwK/RT+/fTv6YiHwYXzlKzmr7DftEmBmnU93umKV
6VkJTCX2FZl3ADMHqOtDreqqOKvuN/0gHaK9tIvyWqv6TcdIt0gzve63WLVk
ccUGEv8WjgHg1Ve8wlYDN8hvGmgwz3wQlkT8dWrF8QKzVYenGvPG4IqTF+46
aw1/Qidp1V734Hi/fX9vEKvpbJjfdMtQTH5Gct/BMcJvmmO4sxf9pmGkQzLw
XmRkHYpfi1pxvEGdtEpm9lmIZcUXV224MzPTG3CIy9NjmcgJ/z01dZhHtfX9
pifq+U2X1PWbn41eI4j/SG6ks1F+0zfiUUy5bGBHwl0nWXwk+Hr0Et9ov2mW
UcQ0h3TLKOLC58Afja91jN/uzz3OPmX+BtTq3LU5u3SUYg2oGes37TTa6Ysx
6AzFchGXbmnkN+2i330cv30jcg2J5YKrIfHb4HORF76xP6Gl5DfB7hK7zVzi
mOC3u/0p+k3AF+4X6ptSKw7d//q7KmmoiX7TIqqXbpjsbAr7CeQngZEvXdWc
WumdXc4+IS9cXp7zGJ5JC/DC6dui70p/9s3hy0ed1zs/Mf0+0ju74Z4Mbjfx
l+H/BP8TcvKnwiM+3au6/3S35Scn3fM978N3ftMS053N4N3Qe6F7f5rfdIzu
/31+0wR72b9J/lNink4oQG6vP6GV3oJnGr56eZrmGfZznM312x2/39kBv2mm
NvTeD8db1LQh5mFag9MZnoX7iN/0w2FnB/2mqcTbjv0hZzOdzfIntEth9u3A
H4RvJrmZ7GdQL+724A/hH6Zve84l7TKb3m2ZuSi5YuSK0r8I/RXryBk+c3ba
2Rm/3Z8d4VdO96Xu1aXOTvhNTxx3Ns9vv7u01VG/aRjpo/nElT9G/Ci4ucQ7
0rMTWNVI93Sh5nNMfboS/xz/M/hUK+2ywNnbcCxIxtMZLuVKgX2O5zEXbk8r
LfGbFlnsbCH4t/EX+U1/nHT2hd/0THf2nrYpDa47nCfwT4ArQ34xVpZYWXrr
+UrPnOJ3KEXv0sR7kvsCvwf7nsSW8Pt4PKf5HcsRX+bsit/umW/5nXuDkW55
x2/aRRriS2dniZWnVtpjpd+0xUr2K8D2hm8Z+HLw9Ca/Arx0y1d++0ad89t3
Svvz7BXvC06zLGeG5ezPgvMwy+HuT624pB2kM752dgF/AD0u4EvHrHK2GqtK
rD84D1MZ3ErWyvC+Dte71Hoc2ldjfc+f0EWq+Qa76DdNVJ28cPpe6ntWAPw3
YPpw5r7ghV2DvUDsDX5T/bbSKpecXXa21tk6f0IP1WAvzGBwL4CrwfoC3KrX
OzIU/GX8b+klf4Pf7vL1nGkwM9ciV5tcLfrXpP96Zta8V8G+D177a37TUNIh
0i2b/KaBaoPb6Dfd8iLmxVQ3gtrr+Nc452Bm/IBa4XUH6Y7bwzxXqR1J/Q1M
d9co4jfw68Dl6TDN+CGxTf6EBhsBl3L1wYpvNDyKbfabzvjI2RZnmQIW20L8
B2c3/aZnxrD3tE0DcLqXcwXsbpb+kB7ZBl69vsf/nvqG1Kmn9MyPzv6HPy7Z
/pbfNMpW+BqTG8dMqm8E303iY4lt9Sd0lWo/Zs6cAZt1u980k+LSStn5O6WJ
9P1J87rYD2jBB367y2Yz5/+Y7RY1E+BqSk/VTyKnvrvofdutP/tN6yh/25/Q
RZPJSXcKv5OaXcRuUyPuZwJ2NxYM2Fkb8TymwPGLszt++7MtXxrmKYfNHTB/
D/up4N4ENxUOaZDf/KZbngwYfjc1e4ip7i61eQOmTfIEzORLH+0nly9gfOL9
1W9zCCfMNDjuMmdu4vqdnuS9Uu095rnv7A+/aQjxi1u643e/aRfplgIB0zX5
A7a/R342tQ+o3ZdsvvzwzKDPPerFc4DaWdQ/HbBnLx0kTXSQnofIHWaW+9Tc
Z/87eGE9Dv2OwuuuSR2we0Xf3dLOL+PsT+f/5U9ol7nspUOO8C787dZ//Akt
soD9Z+QLBUy/SI8UDti7/CdcWufwTKRh/qb+c7BFsKIB0ywPwc2DX9xHWZ/F
n8eMD+Gbjy/tIR2if8/+L6v2j/ymNzS7+ki3HAezkHwx4spLs33B36udJPdc
wOr/Aa/5izDzQrgWgRdWuiVFwLTLYmLFiZcImL7RXvdhBbdWDFjtCfotZv4U
nFvP9ijPTP6z8Hm6SfpEWihlwPRRyUBCtyiWKmCxUsRPM0dJ3oOyAdMfjwUM
vxTMKXCqfwc+vT9f8g7pnUqT7L0qA4+0i2Jp6Cn8GWrkl6JWnOJOGzAtojpp
jsfdPj32LrF0YISVlnnereUCVpMmkIh/RW4J51nKuoTnuRIu6R59L/Td0HdC
z0C158g/Dka/j3RO+YCZp7+eB686H3OmZybhLjD3Ks6j2coRV7+79Fed6qWB
9D58TU/5ei90vwcCpmOkYSoH7O6vFLC9P2D5uLOkgN3T0iIh54d5tyrBI/x7
1FSC5yL4ddRUcVY1YJpI9RvISytVIa5ZggGrCTKbZrjMfMIpHgIjPuki1b4Q
MO0gDSNtUs3tqzuLOIsGErpHq/bCXAHXMGB3VYOA7a/ArRkj1EbYh+FVP/XS
85GOibHGeVY1mEe4G+xrBmwG9Y8xQ3V4vPqNPJNLnFm116mXLhK3fo+6AdMW
ddyaIWAaSPlaAdMt0k0ZiStfm3gteJKoE7/mEn4zNdI60j2qeRFTn5vEX8RX
XS1qdZdLi2UOGEemZDzfw6XcVrB1mF88imUJmO6pHXT8QdMxWcBnxs8KRlpG
tXoG9ZzVD5iukZ5RXjhpIGkR6RDh64HR76zf+2d4PI5sAdNY4pC2Gk2ttIv4
9W58DHc29uJS/glqszGLYuo1lhk0i74R+vbqv9mSTlBuXMDuGN07rYkrJg0h
bdPIrY2JjSc+0dmkgGkO/Tlv6taXwP9MjfJ5wOisjThvLuZR7yYBq/W+F3eT
cf1GTBhpJs3wFP0nMJPi6jmB+Hj6PQVGuqG5W1s4m+JsasA0SzP4X2I/mbz8
vOyVF+4e72R93m1x3oN3Evg81OQlprrm1L4ZMN2i3i8HTNO0YKb78GlVThpJ
30t9w/7/nzEDpqXyUV+AfW7ON5Fn0IRnKG2kftMCpktaurWVs+kB0zNvYfIL
kpOOeYD9QU2bgOkPvRfTqHmatSD+K9SKY2bA7m1pmRns5c8K2L0+k3esNdyF
mGkGHOLS+1eI2ZR7lRmEnxsw/TInYP/NoTRJu4DplML0kXaRhmlLv8LMNJu6
ojz/loGEFi3A81Iv1f3DLK2Zpwjcs+k1Gx711xz6s/Qc881j3lfhUbwYuXbU
PMLaEisGnzD6ey79HZg0pLjmB0wHFQq5czg76r5HCwOmM6QxFgRMvwjXKWA6
oCOr9inJlYDHy6XAOhArCdfb+CXYlySmXtIxnZ11Cdg9vyxgOkD71ORT0bMz
/TuzX8TMC+FbCGdXasUhTdIjYFoiNTlP92jt5myxsyUB02FpiXUnVpZ4V+Jp
2Jemf3d6qG5pAA3FWZZynnLEl1K7iJ6aqyez9YDH6/s8vdOTF25gwO7fGLzv
8Ky0f5289EPfgGmIXgH7M/9awPTMcmcr8Cuw94Hzsy8PbwX85eR7BxKayc++
D/0UWxWw+3wl/XzMvpJ4JfquwF9BrhLzBuFLz1nFUQXe1QHTEdIu7xGvTK4K
eemZ/gHTMWGwVcFr34+8sO+SC/Oc+oGrSm4APP3x9Ww9TRNl35c61a9xtjZg
Wqg6XGvgGEBNdWLCrAuY3lmL1SCue/DHgN01NcGtdzbI2eBAQtMksa9JrXBD
nQ0LmC6RFnnf2caAvS+DqBnEXu/JhoBpm5rUStMMYR0aSGidTPDWhu9FZhgM
fj1cNZPVZyBWmx6q+yBgmuhDZ5sDpiOkSzYReyNgGigzsTrUDCeufF3im8AN
I/4iPeqAVU1W+OuCV2xEsviHzJCNmHIjA6Z1smFeTPfpLmefONtC3WaecW3O
Oopa4d9339ON6LyPA3aHbguY5pM2kV6SbvkoYNpFv/tNfvuPyG0hNpa6LcQb
gB9LXvitgYSW2kqvbfRtzLxbqL0VsPv9f/TTOh5cI+r/B0Zxzb8dronExSFN
87OzX4gr9hN2O2BaRRqoKfUvse4A/xMY6dDveSbKNQOrb4r3jdkOTxO4J1M7
Bf9nfp/m1P9M/Da/XXPyO1mb4Tejp85wJ2A6SL/5dWc34P+F+DXiyktb3HP2
e8Du/d0Bu/ulZ3Tn3yW2J1lcsV/BtyB/B/xUcMJ/Cu63gGki9ZnO/jd8xf8K
2N3+p7O9AdMWn8KjtRV9fwUvzL5kuFfAzIBTfQ44OxgwDSFsa3Bt2O939kfA
dMt9TP5Mcq+CncGzmcl6H/8AGA97IJDQK23p/YAzzYGrNb1nk5uDP4tZZrM+
gEcch5x9EbA79ST79uQfC9o9rDv2qLNjAdMT83ieeq7SLtIwR5w9dPZ3wPTO
EeLtwf9F/jA5L/4QfEfin9GrE34n9p2pbc+M0jD/OHvEuoDeXk1HMAvI/8nM
eiZd4NN5UgTtnEvg+jdg2ui/gGkP7btScxw7QexfMAuJC/M56zH8xXCpz2Lw
/xFPQd/ucJ5k5kdwnuR36Y51A3cCXzOk5DfSGfQ7nqJmGblUzi46/1LA7iFp
hZ7ghFH+HeKKnSaWmri0R9qg6Q+t6fBPweP1Wkq/M3CdplaaKA3xLwP2nZKd
Ddj3qjdx7dVT+HeoWU6sF5xn4FROs6imLzznA6YfpEOkNb4idg6MsNIzj7u6
9EHzV7HvC051Op/iK8mtInYOTmFU7wua/lnNXr4/aHpGuX701zwXmO08OWGE
13dO37Q75IWTXurFWfVs1sAbCJr/HvvLAdMe0hHSKF87+8ZZKGgaJxg0k7+W
3CCw4hHfWtYg/kUwHvYi78xg3h/1DDtsJGj3+EDmVe/15Dbgr2OW9azKDYZD
M0eDpgnE9S1nUS4eNA3yATlhxCnN8j51G1ljQdM00jZXAsZzhf0F5tJ8wolX
nLpLdKd8Qs9vAwltpNqrAdM/2l/D1zqCGWLwSBMlOT9D0NZNzH6N2qtgNoHT
t0nfIn3rVJMxaLrodffPlAOdxUKmQ6QpspCXDhEmSl46Sfd/bf5O7LuAaakb
mPyRzHoDXxziyoR9RExr5qD1k7ap4/y6WL1gQvPcJCd9Jv8H9vIVE0cWeDLD
rz6qrQuP9EuDoGmM+kHTP+qRzdkTQdMs9YgLLx2VjfhP1Kg+KxpxG/Fb5KRL
hBWX7jbdcS2JK5ad+obMsI1nnJWc9I2wOfAVaxQ0bdSQOvm3mUszZAWrGukk
aR9hVCfN8JRbcwct3jhof8ZzBe3907vXNGh//psEbZ8zaHlhm4BXfBe5JuAV
fxIe4eWrl6eH9tBbc+Vktpfc2ixomuhXer8Ex5PU/gruN87SiFl0hr1w65nq
2b7s1uZB00HilW7RvoWzPM7yBhMaSGteMPfAiS8PmDzsc1Mvbmkg4Vvgv0xf
+fmDpoXycSZxauYD5A6SO0D//fTPx7uhM7RyNsdZUWezg1ZXgFrlXgmaXmgb
NO3wqlufDpr+kPZQXnpGmILElW9NXHnhClD3AF7hD1Pj6SXVtMHU52/ibfBf
ZQZP2zzj9oWCxvFMMp6/4FLuKFjZEWqeJV6Ic0uvFAkm9JPOWoS4dIvwhYOm
Y9q5tX3Q9M4j9p6vOu1VUxiODkHTOO15Dgd5FuJW7xPkhBHPUfp5ekz1HYOm
f4QtFrS48B2Yvxg8wnUKmv5JQd1j1ArzHPmUxHWvlgqa5igeNM0kjDRPZ2dd
8FOy74wvDuFLBBM6SWsJaroGTaucJlYSOwP2C/qpplvQNIxqSoEpSd8u8HQF
k5ozqF5nku5RfXdqS3MW7XsETaukpVY46R7lSxPvDqZn0PRNDzDKl8Gkdc7y
TbjL96IHeE8LlQ2aHkpPXHyKPU+8LDjxSfcoppzwrwVNB6Wn7jWsF3Hdm7oj
dfedp66cs95B0z7CSU9IV/QLmoZRro+z8s4qBBN6SGsFMH5w0gblwZRnX476
vkHTQwH2QWIh/EpB00UV3TooaHd7nJhyl8hdpP839K/IzJq3P2sIbtVVpla6
QTqkWtD0kGLKVQmaVlFsQND0j/RRVeLKv058ALVeXZientZSjXrEqBmIDeIs
MfZx6gZQe5W5qtO3WjKeKFzKXeMcunO3BO3+HMyzGkTsI+LSNJ6+eMFZjaD9
3cEQtw4NmnbRuzAEX7pG+RrBhPYajD8Y3A3yNTHpJMWkm96nVyb4hzHvC/TV
PjP5WtTWBJuJGT5g5o3MrHqd+w1qxSGdMDJo+iMzOU9zaB0eNH20KWjaJyux
EcQ+JP4G8Szg69B/BD1UtzloOkg1Ddhvwa/Pvi51m5hrFLONhGcE9fXpm538
KHyto7EcxPYG7c7RfTeGuPLSDVudbcNvxD4HOOkSaY3tznYETYOMD5pu+Qh8
Q2oaEVPdWGpVp2/Sx5j8JnA2JT8e3nHM8TGYXHCMZbZtxMeBz0XtBOaZ5Gxy
0DSEfOmVifTS7M3YKy4NsytoGmcn+wnkdxBrRvwpcjvBN4NjEr1awPVJ0LRL
XuZoAX4XvvIvs+7G1/dR3zoftaqbwtnGclbt85PfEzRdpPq3nE0PmmZoRVx5
6Rjd4W86+5TfXr/7VGIFwO8hn5+cF/8U/NPgp9GrIH5B9s9Ql58ZpYP2OdvP
2preXs3TYFqTLwTHdOKqk4Y65Oxw0HSHYgeIHwyahtF+RtB0iDhm4s8g1xb8
bp7Jy+SFk+7R/XGB+6oQ/VXbjtqD+IeYQTppVtD0Zzvyh9gXJV8E7ln0mcX+
SNB00GGsA5yqk66V7tH/j6v3/4X2udsfD5qmeI783KBppc+Cpm2eIzaP2FHi
c4gXA9+B/sIVp+5Y0HSSarqw/xy/M3vd76ecnXY239mCoOmk+fDMo74zfUuS
X0B+fjChtT7nLNIWi5wtBi/s284WBk0byZfeOeHsJH439qXAlebZdIPzBP5x
8ouCCW1UOlm/ssR0JmmYL+hXilm+IN6DvifxT5KTvwQe8b3r7L2g3allyUn3
6B7Wvfp10DTEcmcreJ56lvqzvixoOkbv4JdB0zhn2C8lf5pYL+LPkzsDXvF3
4FmGr16edqnAfgl1qj/r7FzQNEwfep+F4x1q+hDry8w9eWY6QyW4v+aMF5x9
FTRtJN7+7M87W+lsVTChaSqz97TUV/CtJLeS/QrqxT0A/Hn8C/QdwPOXpllN
737MXJVcNXJV6V+F/qv5jXSGb4KmA6rxW2p/MWiaR/dMlpC7r52tCZpuqE5+
MJi1xJW/RFz5DUHTIuudfRs0fTGU+vfAD6TfIDjEJQ0kPXQZvHTMOni+dnN8
w989rYe/JvjB9B/Cehm+dXBeZg5xSk9F+bspaYukkOkI+dIb8ZCZfP0d1tWg
aZorrNoPJyfMxmS5Ydi3xDbBlwTPtWBCMw1nP4L1OrNkYJ6MIdNB2is3Eqzu
Td2lOcEK8yHPogZnvgHeq9N+FL+pfk9pi0xuzRwyrSIN9J2z77ExxLaA8zCj
wN1gHcU7It2TGT75H9FrK/kf3HozaHe5ODdzvnHEbtLzB/Y/sP+eebMx8ziw
Pzp7ImS6SbmfgqZDJpIbD1br/4KmW/7HXnlpm+1w7GDNHrLZNJfOLPwtavVN
0DfnS/qpVvOoJkfINJF+D/0uOYjJ38lME+C6zZw/Eb+FvwOuneSFkwYawm+s
9+ITeuTifdA784Lzfw2aDpG+kP742dkvzp4KmbZ5MmQmfze5qWDFKb7drE/i
3wHjYbX3NJDWu85yO2yekGkbaQDd9X8ETTflJi5/D7N8yqrcNDh+hfsuvHlD
ponEmz9kGuMAe8XF6ekqYaVXpFvuOctHjfC/EZsOXljl3yLnxfOFEjpK+N+d
3Q+advmd9T5n+43nrJmlewq42qdDtmpO9fZqZoA5CE536HMhu0fv85xmEStO
XP+tlnSHNMUzIdMsBd36Z9A0zQNW7eeSE+Zwstxs7A9in8Gl/xZM/hH28gvx
34ZJx/zl7CEz60yH2c8nP4+ef9H/L/aFmflZnkVBav+mVhzSJP8GTYfMJ+fp
Hq3/BE0fFQmZhnmb2CNiRYn/TXwB+GP0f0QP1RULmR4qyjPX/jn8E+w/p07c
mus/ZvsXnkfUC6++i8n/h681RchsCbFKIbt3dPc9Rlx5aZgSbi2Jf4r9EnDS
JdIapZ1fJmQaJHXIdIveC+G/oOYUMdWlpFZ1+iaVCpnJPwPnl+RTw5uKOYQT
RppJHCmZrSTxVOCXMUsa5knn1sdDpiHkS6+kDVkvzX6OveLSMM+HTOOUDdle
PGk5Z1nwii8nVxa84ivpoV7n4SoXMu2imOZQ/Cty8pW/wFoeX984fUf1TVxN
XfqQnU3nTsX+XfIVQqaLVB90FgrZfSqd8jV5aRdpGL/zK4bst9fv7gtZzNNR
Fci/S86LVwS/Bo4AvaRXAqxB+vqo14zSMJXdWiVk6yXeO69GfMJcAieNJI4Q
taqTLqkeMi1SDa6qxLVKs8gPh0zDiaNC2M0cNu0VIR7mGeuZ6DlLT+nfC0oT
3eZ5T6Ze/YWvRl/1uMocusN0tw1yNpj+VcEqHic3ED/GPk5MHC/Ao/oh1Ol+
VLyGs5p6Fs5qkdf9rjtVGkY56Rjd90OdDQOvnGqlQ14MmeZ4kX1tsBnhqwH+
OjwZydcGLw0zPGQ66I2Q6RntR7BXXLpJOM1SixlqMdswcB6mFtxZqRWXtIM0
zChMGmUkPUayl+6p49a6mPSNYlnBeZib4HTeOpz9CfLirketx6H9Ldb6+NnB
jsbGhEwTSesoL9ybIbsbpzL/aDD6Z3bdU5/xPIdx9ga8W+KQDhoXMs3S0Fmj
UEL3aNVemLHgxrAXvzTIBGcT4WtIbUP2DagZHzI91CRkGqUxq/Z3WZviPwWf
tM0v9G/MfOPg8ep/4Qz1OZPqJoVM4+hZSEdIl7wUMs0hvaF8XjDNiCs/mfgk
zpqTs6pGczXFbwpfbvrlgUNc0j1T6K2+0jDN3doC/16yvbSLYvnoO5karVOY
rTmcU/l981P3csh0ie4Z3WcLQhZrSfytkOkH6YhpIdvLl45RXrgZzmaGTG9I
W0iHtA4ldNib+G/C8YC6ViHTPaovhD892X4GnK+EjE+808G9Rb10zwPmfCaU
0GavhBL6SbVtQqYh2rq1nbNXQ+ZLu2j2wvSSnnmVuLTILGezwSvXhlhhztyG
+EPwhcmr1z/0U/2ckOkX9Zam8XTUbOLKF8Ofiz+H30K/k37n9tS245nonK2I
KScN9Bz180J2j3Z21oX9/JDlO4ZMr6Tg9y5BTvsO5LUvDj4F3B2IlyDXCZ6O
+Orl3d8p2beHU/Vvu3VhyLROSXq/DUcnakoSK8XcqeFTXWni0hbSJUudLSKu
fBn2i6nrGjINo7UbfhnwizhbMZ5XWvLC6Rujb8eT1KZmljJwe721LnHWI2S6
qDv5JeTSkXucXDr6pKWPYuXgWhay799T9C/HOZfC0ROe10KmP6Q9lofsvn/H
WS/iylcgrrzuYt3ba5ytCpkGWUl9T/Dl6F8eDnF5OmpFKKFnejvrQ31l4toH
yVek93L85dT3otbPfiW1qusbMi0inaK/SxpIrB/x1c7eDZn+qMJefpi8cLqj
vnP2PbVB5qrMmVfjr4YjTF1/no343+MZVcNf7rTVCjSWp3Uugq3GDKqPwDcA
vz/Pws+ZL1L7Db+FekgDXXF2NWQaogaxtSHTS5dCCQ2j2Dpil4mvIf4C+EH0
Ea4mdd+GTO+oZhj7K/hD2Q+mTtzSYhtCpmPWw7OO+qH0rU1+AzxXmP/9kOkS
5aU/PnC2if0G8hvBvM+5h1MrjXPN2XXywknffOhsc8j0ywjw1/itR/F7XyN+
lb51kvWuR+w78Dfg/gDcDeKeHruOf53cSGaoB5/+91/674z1v73SXPXJ6T77
NWT3z5aQ6RXph5shu/t/YL+Z/Mch0xzbnN0K2Z/5/4Xs3f2B8ym/FYxiY4g3
oK+4fqRO34px7McTm5AsfpPcR8y2Bc6x8DYk52mjRvSWdpB++dnZjpBpCGmV
icz9E2fZHkromKbsJzKDcPrO6LvVk/hP8Dahvil+Y/bK3wazk77qP4VZfmGd
BG4Ksyqmb5i+heWZZ3uy2cXVnLNu5ZzjeA43ye8CczdkWuWOs90hu4M/wd/D
/g6YqczwC/69kL0Lv1EjbAtsF7Fp9NB70wrOT7FXiO3FV2w6nPfAtoR3GjPc
paYl+Rlgfw+ZbjkQMh0iXfIgZJpDukW6aB94YWfSc28ooZmU38/57nDGFjyn
XdTdp/ZXzv0WHPvgOQDXfmb4gzkUP8hsMzjnPfaKH4J7Fvx/4N/nXG3gENef
IdNLs9nPgUcc0kvSF0dDpkkOh0yXKCdd9Jezh/hz2bcH14H9HHrMxf+L/JFQ
QjN1YH+U/WfO/gmZzvnb2cmQ3eXd2Ss+n74P8R+Sm8/MHZPxHYHzbXgfhUxv
SMv8R3wBubfJSxcdD5l++RzsQvCKHSMu7L/kuvCcjoFbSK4ruePYiVBCx3Rj
f5Q61adwd+djYdNDi+FSrCv13YinAHMhZPfoeThP8Mz8Ybt3fWHTFGncmjZs
f95TujWVsy+cfyqU0DQ92QuzFJye/RfkvuC3EH/qsH03hBVXarhT00+5MyHT
MadDdiZxLiGmXG9yvej/Gv0VE4fmXcEcS+FQ3ZfUSjdIk3wVMu3Sm9zZkGka
xdKFTc9IP50jrvzjxJXvk6xuBX1Xgj1Hj9XUpMd8PF/F0+OrLh21/ZnrPBxf
JeNZBdd5fjth00ZMO0lDSdNV4O+pMoXt+6s7qFLYtIf0VSBsmsaPH2RfEYxq
w2HTJSG3VgmbfrlMjbDSbO+yl3+JHpXDpmPEGcLEsw7OCPuqcFahv/TVGngu
wqWatXApLm7NcIX6amHTDy+4tUbYVmmU6mHTPdJC6ie8sNIt7xOLUl+duGLC
r4f/W3oIt5G66vALHyMeZYZrzKF4nJx0jPRPnJh8xRuF7f5syNw1w6aBKvOs
dUZx1iC+CY6ksGmLOm6tGza9lCFs+kR6RtqrVthiGZPFFatNXDVJ9BRe/MIJ
nwnci2HTLOqju/pFYvJ/gE+14sjMO5aJflq30Lc2PMoLJx2g+W/CrX0Wt2Z1
ls3ZE2HTEMJmIS9Tfhu1Orc0V/2w6Z161EvLbONsH/LM6oERPg3fltQ8u3rw
qC5bOKFdtGqOBmH7fW6T/5g5pJcaEJd/i1l+YlVuBxzZeR8G8vvnIJedmHKv
O3vS2VNh0xKe3tI7Iu2iOz+n8xs7axI2TSAexXaBb0R+Jzkv3hj8J3Dkopd0
VS7WJ+mbP2x3e76w6Yqmbn0pbKv0TpNwokZ8wtwF1wSMekk/iU/naeHs5bDp
B3E1C5teaR423aF9nrBpl9ys2u8jJ8xvyXKeZhO3Yr/D1QL/Hnv5LegrDZQ3
nDjXS8yQj/Pux/aBU/+8zNAybBpIZ9Cd2cFZR86kuPh1rxYN293Zxq2vhk1P
SOtIUxUImz5qFTY9c4jY02GLvUJcz19x1Qj/B/0Lhq1G+NZh00GqkW7Rvg3+
X+wfUNeK2mfCpmMO07sgPYVXX+WEKcTzyM8MDzmPziK9Utj5ReASVrro2bDp
D+2lZ9q6tR3+P+yPgpNG0bNR/G9y/xBTvnA4oY2OJet3nJievfRMe2YV72fs
FZdeUl/1/5e1PX5ReIrwO/4Hn+LF+O36hO0u7A1Gv7M0Q/GwaZbn3No5bHqi
EzHVKl4ybNriNFaCWEewj4E/QU0neBQX/hQ1XZx1Dds3qlvYvlnapyKnuHSU
ZlKN/JPsUzFfF2YuAaYrPKrtETbtIJ0hvdE9md+NfSlnpcMJTaO1NJg04HTW
UmBKsS9JfQ84z1JXBjsHX1l8xXoyj2rSs38tbJjnwembtoPvWnrwPTlvSs4s
rDSS8NJF8hWT9pB26OusV9i0irRXN6eXukdMN0krSTdJ+5QPmyYuFza7AN95
+MrB0Yv3pDfvjKej+tBP9/hKZ6uY+TX6Kl6J3Ar8iuwrEevDvEHqV4dNE4SI
9wubbnkvbHqkMrgqYKviv4uvmHRX/7BpnP7s+zFXL2arRo14de/pDtId1w98
iNoB4YR+kv86FgsnNFVVuNaGTROtgXcNM0fhGEDsBeKH+T7pG1OD+nXOBju7
6OxS2DTF+2HTI8qtD5sO0b0/CKwsA7Ea4DxMHNxAVu03hE3TrMdqga+Nr/wQ
Z0PDCZ0kfxh+RvYZwGVkzcAsmncjM9eG733qM8MxImw6QxrjDeLKb3L2Ydj0
SmZy0kbSMNJQHxAbTnwj8RfhykKuLlzi0d2nO26ys81h0y0fgh/OLB/As5Fc
fWobULPF2Uhm9mbX/gl6fUC/BtSqJjv5Uc62h007fOxsdNj+fCv/Udj0jN7B
McSV30r8I3CjiDdgloZgVePpJdVsw9SnCfFt+FvgU620zVhn4+AYm4ynEVzK
PQl2JDM8AbengyaFTUNMdDYe/Dj8CWHTLjuc7QybxnmJvfzc5CeEE9prO/52
cLnJT8TyEMtDb/2u0j67nH1C//HhhB5rTm4nfjP2zYmJYzI8v7vvY4uo0zkR
49odNu2TD8wUZ2+F7c/sNPItwUhHTA2bppEW2ePsU2L5qd0Dfjf7/HC3Ir4H
/JvhhGZ6k17T6Ps0q+aQjtkXNh20l35aXwFXgPq9YF6h16f4bajfHzb9cNDZ
obDpDXFPd3YgbNrlVXAH8AuRn4E9S+wt4s/A15aamWBm8Lt8wnNrB+YgeeEK
M1tr5lNsFvF2zCitU4TYLGKHk8UVm40VJXYkbDroMLE5YdMn0hC6V4+FTcMI
9xn5ueGE7inGfg71s8EdDZvG6ci+E3hh58HbGdxRfA/fgX7zw6Zj5jGPaj5n
Xxy+4uBKcIYOnFexBcRVczxsOqgk8bfxS7DvAq4ruVLkF+IrdiJs2uc41g28
vgX6TowFqxrpnu5gVFeG2CJnJ519ETbN0538SfyTxBeHTQOVgW9ROKGlFpH3
/r5Dd+SpsGki8S6hVhjpG09rKL40bDrmtLMzYbv7X2Mvvxz5pcR7wv0a62kw
yi/DyhNLg56SluoN/5fO/C4WiNj9r30f8u9Quwxsb2ZIx8ziOuHsJFrtLLXi
kA45Hzb9oJhynjbSei5smujxiOmffsS+Ipae+FnifcGvpP9X9FCdL2JaJj2r
n7O8S077VdSJW3NdYLbz8HyVrF59Xycv3PWw3SW6Q/WcPK2k/TXy0hKXw6Yx
vgmbdvma3z4UMX0jPxix/UBwg+BUbg35tcSUvxhOaKZB4YTGGkIsEjGtEo5Y
v4HMHiYurbSOGdazhvEvw3OJmgvMrLpoxPSP9IF0Qhw+9fNyWqU9roRN3wwD
J3wsYvtvyQsbAz+M5/QtOOEVvwrPFXw9W0/rDGd/mTrVJ7naDBHTPpvordgb
1A8nngQmY8Q0Tgbq5Cuu++tO2O4dxTJFTHfccPZdOKFjRrHfDJdwPzj/Zti+
LdIs0iBZIva+3KDmBu/PdbgzR0zTqFY65nvWH8IJfTMW3m3wZY3YDN+B3wLX
R8nqlRe3ZlBcNdkipn2yuzVHxPSDNMoTEYv9GDbtMY6YsKr5H3HlpWs+Jj+O
uX5ktqzUCKuaCfBvB6/YrWTx7MwwkZhyP4VN03h6yYvpG6lvor53OSOmgXSG
LJwxM2fytNJteFSbJ5LQF9It0kI/h+0OzxVJ6BnFfiH2JPHbxCeD30X/X3hX
PF0k7FMR66E1N/4e9p9QJ269X3d5x+7A8ws48aj3NPLCiSsPfL+GTaMoLy1y
z9nv7O+S/w3Mr5xdGkTnl/7J6/b5IpYXbjrP6TZnFGYfON1PulN6sN8H3wzq
vN4zmaVAxHRQ/ohx3wOXn/gB+NX/AGt+/PvweHzaSwOp7umI6aOD9NC+YMQ0
hOLSGH85exhO5BR/EDatI53zTMR0inKz4f6DveLi+hO8V6e9NJA00RE4/qTX
XHj/AD+P2F/gC0VMK31GXSHsWeLSDtISxdz+X7f+FzatUJi8cNJFf4dN80hP
HSX/OWuRiOX/CSd00gL2is/nmQhXNGI66HP2x8EL+4g5NE9RsPKPUz+f82nO
heBPUvNcxPYL4VsIbhG9jjHrYmI6p/SB7t+0xBVL4fxSEdMLZ9jrz7vyxSOm
Z/Q+PkY8Bb2V0yxLyEnrSPeUcH7JiPmn2Eu7KJ+SnPqdIXeKPsKXJJ4qYrpn
GdwpIwktJV/51yKmK9Izyxc8G+mrbpyxDOcq7dZi7p/PnouaTurBc/D0kjBl
wJdNFtOcqn2cmp746dgLK10kfE9mSg+mJ35qzqKZpW9U87yzXsz/GvFzyXLS
Q4qVw/di2ksf+Knv7ayfs/6RhPZQvnzEMMoHiCtWgVgf4uIrn4zTB29FaoTv
GzE9pJoQ+374QfYhYmFqK0VMI0k7iaci9UH6SusoL9w35D1NpVjliOmPqm6t
xvki8Cv+LbkqEdMiwkvbDHD2On6E/QD8/uBVp3rhBkZM++iu0n1X3/nV6VEN
ntfBVKaXZhwUMZ2jemkc1UgXDSQeI36FnLSPagbjx9kr9wK1SeSliWpHTIdI
U0ivCFPD2dCIaZ4hWEbwg9nLv0FNTXyt0iuZqB8WsVitSELHaK1FXLU1wL0R
sfv9e/KaKxN9h+IPA6O6a8w6PGL6QPUvchbVZiU3glwWaoWpAy4rcQ83MmJa
SHlpHmGke+QrVi9iv9stakeAV1y4unA8EUloKsW9vDjqEq8HT3bwo7An4MjO
fjTvQhXeJe3HREwHLYzYN0PfjgYRu9/1fo2PmM6QxhgbMU2imoZgGuA3SlZT
H45c1IzDz8leWGkk4ZUbD38usE/SIyezSeuoprGzCcwznvjPyXLSRopNcf7U
iGkFaYYp+Lmpn+isibOmEdNAqmuCL1P8JfDC5iGnmDRSbmaYAE7aRfHJEdM9
k7C81DZz1hyc5pnMTE2YuTFz5iUnTSMt1Jza3+itveLaT6RHHvDKtYjY/dva
rW14BgU4u3TIKxHTGy9HTC8JL/3zprNp+AXYv4kvDuFbRky7yOS3ouatiGki
xRV7QJ8H7O/TT/npEdM2bzGPh30aroLknsGXTmjr1nacTVy/U9Oas8xw68yI
6Z9C1E7Hn0Fcz0L6Rs9mVsT0xUye1V88r5nEhX8VvFenvXRPETCzwLQlXoie
M5j5H+YWfnbE9FER6mZjc4i3p0ZnnBsxjTQHKwZG+kKaY0HENIxw86jtEDE9
JJPfEUwxcNJW7cHIf8Re9fMjpkGeY1+cWAn8ThHTMR3xO0dMxzzGPiU57VPQ
oyN+SeZ9m7UE3KmoE5enaboTV6xLxL5D+h4tctaVnOKp8RWb6zTRPLRRSfro
2yUNdQJO1ZeBT99Afe/0PVlMXPkvmOEkHAvhKQOuLOsS/J7UnMLvwf558kvI
nY6YRurJXv6ZiOkU5VZETD8sZ98LjLTNsojpm97UfOlsKbnnifciJ+w7kYRO
Ks++N3V9iL9Dr2XwLGVfkfzZiGmiPtSdxT9H/Cy9l1BbkTNI9/QDI2xlYiuJ
K/YV2JXktD8fMW2zKmL3UWXwXxGvDF55aZmvI6ZTLkRMG6l+NbUe5gK418Fc
ADcATuHfjZiWEu4bOKuQ83RbVXD3+d7NQlcp9p6zixHTQaqXjvjW2ZWI6aI1
EdMSg8FcJLY2WVyxS8Srw/kNeM1TA+xacJcjppPUZyj7y/iKfxex+/2Gs/UR
00Pr4FmLPxiuIeSFq0WuZiShnYbSZ6OzDyKmM4TdEEloKfnvO7sWMb1zFZP/
BrkXwQ7j2bzBehV/IxgPuzGS0DR16H2dM42Eqxa9R5AbiT+cWUawXodHHJuc
7YzYPbqDfT3ytyN23+oe/cjZ1ohpidE8Tz1X6Rjpmc3Ovnf2Q8S0yYfE6oP/
jnw9cl78e/ANwG+hV0P8huwbUVePGaWDbjr7kXUsvb2aBmDGkr/BzHomjeHT
eX7inJPg+l/EtNOtiOkX7T+OmBbZxqp9U3ITwHu5xthWYhPh+gl/AvuJxNRX
2mU7z38cc4xn34z8S/TcTv/t7H/mN7oNVr+ltM4Ucr84O+zsSMTuvxbkd4FR
fipxxT4hdoe4dMevEdMdWn/D3wne6zWZfqp/GT7VSifddbbb2Z5IQhvJ/xS/
Jfs74KdS8yax3XB+AuddZlH9K3Dsj5jmaINJs+xztheMsNIf9yL273XlT2f/
CrjWnG86Z7yH/xv5fWBUr38nPBOe3/H/iJiGuc8M+5jrALPtJzcLfHH+3kJ3
9Kvg2nLW3TyX2fA+wJ/F/rOIaQzpCWmjg84OOfsrYrrmT0z+HHLtwc6Gbw7r
n/iHwXhY7T3NpFXv0ENnf0dMq7RjXvWeR24+/lxmmcf6EJ4jzP5PxHSPuI5y
FsWPR0y/fE5uAZyeTvoHX+ujiOke6aJj8Bxjf4C52oL7N2LaRd8IfRPG0PNo
JKGrjtH3L/d7PEQ/SSsViyb0z6NIQnuJ8z/WRcQ/Z/4u5BZHEjrqJL95iqjF
ldfdpjtO96f0hnRIajCPRU1PlJCGi5oOOsVevnSG8sKdokdxfK3CLSWfEltG
ndZUUesnPVPK+aWjds+nj9pdrvgZcuov/zR7+YqJIzU8qeBPCVeZqOkiaZbn
o6Y1xFmauPLSP/Klf9JGTdMIXzZqNYoplyZqsXPUpSG+HPw5aoRPF01oI/mP
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
53SSMwqzEtxInvcIYiuI96PO692fWXS/SfOkjxn3OXDpYwldJn71X82aHv88
POLTXfkufIpfiNr9WMHtv3Hr12B0l65hLx0jDROM2d0fiNn+AvlLUdMog7GL
xMQRgOd1+lygXjxrwA+iJuTi4ZhpokjM9Iz268itZ5ZvqPmGvWZYC2Yd8Ytg
wvCoNhYz7SANI20SjSV89dP+svO/jSY00FD2wmwAp7NeJneZs1+CLwbnMOqu
YG8Qu4qvWJx5VLOJfVLM8sJJ92R3+xwxuyeF+QCc7jb987v+bmAtv43OP4K6
a84yoocyuPVG1N6566zajyInjPSSemdgliwx0yCZY4maEdg1eLbQI1PMdM93
zr7HpFMU+wFfMU/rZGGe75hBPJvhGk3sO57BNc6zjbqsMdMST8Ts2UhrSCPd
BKO8p2EU+5FYNuI634c8yzHMN5b1Jv42ZlU/1Y+HT3230/t/br0VNR2j/P+i
CU0zgdwT9FRv1X2crHY8s+3gN9bv+1PUdI84/ozaXfjA2W3iyks75IqZfpCf
M2b7SeCka6Q3nnKx3DHTIXeipjP0HqlmJ3W7iKnuZ2pVJ73zZMxM/m4495AX
n3h/YRbhhPF0lbg+Ibcb3FTyqr3LPL85uxc1PSFf2uXXqM2dJ2Y9fyUuPZM3
ZrpEuWnw/Mp+LzNOg/suceH3wvFbNKF/xJUvZjpmOnMovo+cfOUPsObHn8hv
q99iBnW/c7afOav2M8lLX6mugKt/lTtVuuQQOcWlc6SR/nBWMGbaQ/n7xGax
F/bpmHHfJ659Qfhmg9c7ky9uGmhfzPSLdNBD6mYy4xH6PQOH9oepnwNfIeLC
tGH+h8SfjZmWkvaQTinC/kiyvDSMYqrT+dti7WKmaVQnjLAFeMZ61tI8bcHo
+5CJ79HfxP+hn+oLx2wG7aVppH/aO78DeXELo/i/5NRf/iP28hUTR1F41DMz
faV1FCsKb8eYaSKtj+E/56x4zO57aZFOzjoTV6xYzO7t52N2F5eMmUYpAfYx
+IqBPwHPY+RLgJeeke6RpulKTFzSKF2Jd4kZTvqqOHPJF29n8qnAFIdbOig1
nNIP0iM9nHVz1j1mOkc9SsdM/2iVFpGfBpwwg2J2Rw2Esys51ZaKWZ3mLUWs
B73Uo4yzsjwnmfznmUe4nthrMdM3ZZihNPXpmEGxMvCk5HdIBU9PasUrDaTf
QndnX2f9nJVzVp6cNIy0Ui9i0i9eXLHe4M/zu/aCW/NJlwhfHlyfmGkf9Qmy
74MfoE96OCrGTMdUgEcc8v1wBcgL52mnINzaV3JrZWdVY6ZDLoOtRF6m/CVq
dW5ppQEx0zj9qVedMNVjplmqkYuAH8hvHYOjP/Eq9Fa96jRDVfDCRsFcZo7X
yUXhHkAswhqlvzg0g/7ZXPeRvvlX6aEZdefobhsbM40i/fCC84fE7O6XxtH+
GnXSJdIatVzsjZj9ec8ETufSu6ycMNIsScQGx6yfuK7yrRjqbBj1GZPt34gl
8hmZ5Tpz1YBrCD21Vx/la9Jb+xFuHRkzLSHdIK1Sx/nDY6ZT1OPFmOmY2vh1
2L8BRmfTN1DfrxTEVC/u2mA9/VaLWBbyWekrzrrORsVMy4wkN4LZRhKXf4Lv
ZTFm0czqUQ8u8dTkfDV4Bhn5naSRfgQ72tmYmGkV3bv13doAk3ZRLDs4YbIz
g2Yc52w874Vwt6gXr1btc1Knd6ahs0axxF2uVftfWBvD9yScDZmhAfU5mFWx
hvBMiJluUt1LMdMh0i2TY6Y1JsVMFzWJmW7JDX4C/e4wi/JNwWTnfKN5VvU4
S27qJjLfWJ5BE3gaU9+UWSYxg7RSM2Z7iVmf4pyKNyeXG+48rJPw71Knc61M
6/5MO6uU1rinxExDiUN6STz5iOuubxUzvSvdIV0iXAtnb8ZME0zFCoCfwl7+
yzHTNC1YtZcGEnZazPSRYi1jCW2ktWUsUaOewr4VMx30gHwrer6ZjGsamMMx
0w2HME9TTImb9sobN9z0mGmnVzhjK2KFiEujSRdJW80grvw+cq2JKfcs2IMx
00DyD7AvTH4m+0PMM51536LmIPHZ1MyCe2YsoZNmEj9AD81RhJzq3o7Z/b2A
c+tZHImZjphPXLg5Mfvzr9xnMdM2Hdh3pPYIsWLg52LPEesE9qizecS9/Dx6
FqPPHPDHYnbfz2Oe4tR3ZI5O7IVbHDOdsIgzzoarOOeQLjoeMw3zObyq68K+
K76eyUKeSzdqTsBREp5u4I+DLUWuNP5Cak6CLU1sET0/p9ciZi4NVrqoO353
ar8gfhKszikt1ZPcKfwe7KUpvoyZHlHudMw0jDTNEmdLsXLEeoLzMGXBLWbV
/kzMtMxprBf4XuTUb5mzd2Kmb2TLY6ZzyhNfTs9lxJaxX0r9WWbuxV7nWAGH
alfHTF+sipn+qUD+K2fnY6ZXKhKTNpJ+OkdesZXEz9HnLHyVyPUDK57rzm7E
7A68EDMNcx78SmboC885cgOo1fp1zLROFWpW42utCuYCOMXeJV4V/z18rdJI
38ZMc1wmVp34xZhprW+crSH+Hr2/JlednDTKYGou4Q9iX4P8WnLqM4T8QDCD
ySm+npp1cK+NJTTQWuJfM9dA+IZSW5P6WsR0tivEa5AbSmwY+w3ghxGXDqpN
bAOxq8SlTz5wtgmM8u/HTB8pfy1mmkq5jfgbqdtI3MPrPRhB/AMw1+C5CuYa
OL0Pen/6UaOY3h99N/Tt+jtm97xi3zn7KGa6Ygt7xfXO6f7/MGaaZjS57zmP
cnWJjyIn7Gbw9fG3UPMD2PrEGoCvB98WZmgAVhpjDP4Yam8SV0w64aeYaQVp
hO3OdsRMl4wFK10ifbWVuGI/Yv+LmR5pTH6bs4/Zb+OZbKV+Athb2Hjqm4D/
mHluMdNEam5xpo/g0YxNqRPuNvN/TK4JZ2nKfhyzjudszch/GrO7X/f+TuLK
S0fcdfYrMeWke6RtpAt/JraL+M/0v81e8U+c/eLsTsz00BT2U8lJ93g6air9
psD1C/up1Au7O2a6pzn1LYi9zF7aQZogf9xmnARXK+r2cJ7fON9uYp6W2sPz
uBczPSLcXp7Pp+zfora567HT2S60lDTVPvKqn84cmicfefn7qX+T8/0eM31z
j/lVUyBu+xnwzAA3k/U+/kz8P5w9HTdNJQ5pB+mIZ+OWk2aQXioIRtgHxJWX
PjpEfiYx4TWHsAfBqkYa5gjYZ7BCceun+DPxRG+tyqnmr5jpInH8mYznMFzK
zwMzB4xiD4nLl4bRd+dRzPTGUfo8Iv4PeH2T9G0q7HJF4qZLjrH3fNVpvwC8
aqV7lC8at2+iviV16aseC8kJI9559FOvE+SKxQ33r7P/iB8n94i48s/FTfso
rxrtT5BT3SIw0j7CpXJ+6rjpixRx0zHCKV8iblpHfvG47YtTKw7hH4sndJLW
x8CVjJv2WUosJbaM2GL6qaZU3HSRalKBSUnvEvCUBHOa+RZzli+pL805pJ1U
r32ZuOkWYc6AkzYSRtgvwQkjXaK1LBjl02DSQ4pJx6Rz+8fjhhNePdLGLe7p
q3PwKCb9o3ha8uITz0q4hH8+bproK+qex8oR1z+n3eOfD9V7NbOUJy+cNEcl
t1aOm5ZQroKz9M588YRO0uoDcwGc+NKDSc9efSrGTZMIW4G9/Ir0Uy4QN03j
d2v1uN3vV4kHk+XW0P89+vvh0LyXmP0i3KqTLlKNtIU0SSRuOklx5UNx0zqK
VYmbLpJuChNXvirxKtR6depZhb7CR6iRLlJNNc5ylZi3vwKX+lxiNtVG4dCc
Hs+3cCm3EWw25z8Rt7v0BZ6VeLMRyxo3jSFNktH5MWfxuGmpGm6tGTfNc529
fH1LlBdO8WtwX2cVbhP5JGcZ2MuXttFe/aSNasdNB2neGH0VrxW3XC16ag7F
b5ATR0Z4Ypw3Ss2LcdNCdd1aL25a4Xt6Ka68NI98aZDMcdM0wtWJW51iymWK
W+wmdZmIbwF/kxrhs8Czlee6jVXPeRs1GeGoHzcdVI8Z/wefasWTlbgwymlt
EDd9JF/12r8Vt3ttGvuGcdMt0j363bM7yxG3fXbqG4CRzsjp/Fxx0yiN46ZP
hN1OvUy+ztAobhqkIZyq9bTRLriejNtenOJrAudOeHMwo3huE88Bz8/0UJ30
hOqaOr9Z3DSENMtL7OVL86ifp4XuglfsqWRxxVS3m1mVb8pcmk96SFjV/EoP
8X9KLLezPHHTT7nZ7yU/OW5/DyXd1CJuWko6ql3c7si2zN6M3M88Zz1v7aWB
lJ8aN70krlfiphmkLxRT7s24aRlppJfZT+O3117x38ErV4B5XqZHAeJPw6N4
y7j10L5V3OwVYi2o04zP8J5Nj5u+eZp9K7hagilIXPpG879CXHXSTrOczY6b
3lBsBvGZcdMw2rehvnXc9Ij8NuSeBT+FZ5UPjPLSPR/ybcoAh/qLpzC1M/Fn
McPf/D7SS4XJK9eW305xYV4lpj6vUlcUjjlYEc6m37099brrdFfqvlvg7O24
aQppCWkn4aSX5sZN2/xHrAOxecQVE16cwhelp3ApqCsOdn7c9Mt8enr6SXvd
70ucLXXWKW4aSfUdWTuAe47eKcF0AtMJXAm4dRZplm5x0xgpwXSOm6bSvkvc
9M5CZ4vwS7FPRT41+5I8o1L4C8l3BZMavxuWlr46kzTMYvApmWEx8TL0XYS/
iJz87vB4fNqn41mVhVt3se7Vd3l2y+Kmf6QnejnrDX4p8Z5x0zTSM+/E7fdf
xl7cPdiXB/8a+J74vdiXp345MV8y3h7g/cSVrwC2IrXLk8VWEO9ObTrmDsCh
fCUwfZz1JbeS+AriAeoqk1sVN40jfD/ilcj1Jaea/s4GxE2zqGZ13HRNkDpP
O1XhOb+LvxrOVezFE6amGrj32IfhCYNTL/07Ef3zs/5ZPMIMr8ftXhsdtztR
e2kI6Ye1cdNHa5wNJK78C8SVXx83DSJNsgF/Pf1eh6cac1WHZxBc68BKI0kf
DY6bLhoSt+/WYCwD8Rr0Xou/Fo5B1Mfgq0lePEOpf8PZ8Lhpk2GsmchnBPO+
s41x0za12Xs6JyNYT4dtwN8AzuMSdx3qPsBehLcu+03M482iubKwr0u9cPq+
6dum719WMMM56yCejbg+jJs+qste/hhnY+OmJ7JRPzJuemezsy349dlnI/8E
+3rw1sffTH5UPKGF5I/G1Efvz9a46ZaPwKvvCPaKN6TvFvwt5Boycw74GsO1
jXPkJCc9Ir2yHUyjZLiPiWltgj8ubhonFzaWWFae5Qi4mlKn91Tve3XwOakZ
D49qJ8RNC2mfG38C9U3prb9Dasa8L9FjBzwTqN0B7iV4FJ/obBL7ieSbwyV9
9XPc7nytv+DvjpuGaYGv9ZO43dMHnR1y9mncNEArcsLswnImubM6uwOfeKWz
7sZNJ31K3R5iv8ZNb73Jfhp41d5hFs3REttNbSv2e+B4i9rf46Y3ZjDjvrhp
lTas+8Dei5tWkv8be33DdV+dZM69cPwG7ldi+4jvh1d76ZcDPKf7zPA7mAPx
hNY5wHPcT6wNc9xj5nvUydd9+l/c7tSpPI+7cP8RN031IG76yPPnsJe2ORw3
7XEIX7F2zKHYZ86Oxk1bHEqW/wMucf4Jp/b6dvwVNw3zWTyhX/4m9pD8Q/Zz
qP+LOTTDEWo64M/keannfOrEJ40izfJv3LSHdMcxZ5+zly+t9A+4BdT9w3P7
l2d3FGwnMPPBdSLeGc6u8Or3P+7sBDwL4epK3NNIyp+k9jh59X6UbO632Qsn
baD36xtnF+P2zQ0m2fch4NbHkkwTpUgy/fGFs1PUyVcsdZLpllRJphXOOPuS
GtXqPelFvDd9v4DjP3DCnAbTCy5xSje9Q480SaaXeoLtySzy1UezpqSn1qXw
iEO+NMM5Z185S5dkmiVtkukczXUWk47pQ046SHpKvbVfTn1Z5z9PTDwrmDMN
mN48A4/zHLz9mUMc59nLl95ZyVzyH08yLRRLsntyI/XnqF8FVrjTPLPXOHcq
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
tvP8A30mHTx7e7WHqo8fwUMNM2c8Nhe+BX+0Yy7GHXKRs//21riLuYc7Oae+
gxqruMeq6vH+DPddOs53CB781V07Phd5U+fHil3NveG8bU87OV9dHr6ncy58
w6658CUn5sKv7Jxil1x4FMZdzam/Zx8n5MLPjLDvVXw+PMftPfcIMez1m98U
vifHy1tDXfQ/8Pehn872clJdP+/7/MDwW35ofFDX/5r2tZbjifbD+zAvF9+u
J/1enZwLf8QezZ2PNGdcx3GU+R658Ey7p/H0XNzH3MXc/6Nz4QFY/1hMc/XR
xQ+1UOv6FDfkwrecKheNG3PhaW4w9qrDwH9ffgv7oZ5x7VQ1mHeVix4+Ah9y
c4qxufBJY8wLzm9KsTAXfqSrc/KpKc7KxX2Vs88xYm4Ul3etpjlOXZ4L/ug0
e2D/W6yNs366uNPkjHN9oT13k7e3tftyca9yp3bxOe6p7q258E635cIHMe9u
Tg3fgmeZ4Dje/HRzfkvu3okpJjkfL/ZWdfZVE73bU9yRC3+Cb2kpF40DrN9p
9BDbXR74M+xpgnlL5/t4nn3VgX9XLrzEPSnuTTE5F15lPfMpzu/OhXfpKedu
83t9dgfLWdczHiCupzrrWV9fTbwQ7wCe5Ux7uFed1q6fKWaDutoU6/fYz91y
D7QGlvcKT8C9cn6KC3Lx7eUOeioXXuX+FA+kODsX3mGa44bmfEsWpXgoxTm5
+NueIfcQ+dQ2sb6h+05z7RCfC+vTxaDZR91D1e5rD2A2Nt/YXnrZY2/HB80X
qcP83Fz4kVm58CGPpHjUnmfmwg9tZt7GdTzLw0Y/e+AbdkkuvmP9rT9ijw+L
OUetTdWa6b70sIV9kM923t9e8DiP5cLzkH/sd3Z3OW3UeVTcYT6D6T6/Bz1v
b3XRx1OdlwtfMsd8K+dPpHgyF/5lgPNaTg+P5+J9eDoX9/EAa0/I37JO83x1
uad5n2rv0lPyL8zFXd7evL2YreS2s5cj7eEp8yfFXyT/uRTP58IzzPW3wLM8
mwt/8kwuPMrR1p62Rv/4GHzXxfY+2/4f97yPuX6RGO4k7o5m7n2R64PUrvUy
xH62sZ9t3fNo931BzPNyn6vrf2v3miufOd8ivmN8j46R/yI9pH+efIlnl8ZL
c3G/c6+SX+acdXzMUDkvmV+R4spc+I9XUryaC49yjLih6qA3Ty00d5CLd7k8
F97mFbloDDe/Qu0d5Vwm/mX7eUnuMGvHOr4ij97wM/ica3LhJa52ju843r1e
M2d8XQzrVzl2Mu+k5lVih9vv8fJGOL5hfrX7st+bufAtbxgniDnR/E37Az8/
xTr5uCOb58Mz7Wqdf0bn3zFU6p4Lz+R/ucCBeTsX3oR37R1zavzNX5tiQS6+
Adda+59z+B/kwnO8b/1a195SA82Rar4jDp/ynkFe80Jr5sPvfCBul3xw4b2b
C9+1u/1c53yBz+RN90RjLXXWzsfzwDPgWT7MhT8ZY/5RLrwLHqZZPsYbzE9U
7yT7Ge05m6nNHh+ow9pYddH8OMUnufAxzf1dFlofl2vwR2BOsz62rh/2oPeb
PMNCceAX58KrnGa+LBf30He58Ast8uFTGDPmn6b4LBc+5lNHNHJpPZ8PT/J5
Lv7ezxBzuvq3+G6hl1UPXfwLczQ+l7dEnS/Uut090Mcr3SpnvP1MMD6Te4Zz
8oI8+ivnwzuU8uFTis4nudeXufAtk8zvkl8Uf6dzxjvMJ8qF85X8L82nOIdf
ci9qX+fCz3xlXvM35N/kwtOApV+e280+u3tdK/vcbvM5TJUP917XKynWy4dv
4C5dmuLbXPiVs8zxLS3z4V2q+QhyPEzF+X1y4UyV863vCf7kfjXWdb8HfJem
+z7dqxY6rD8o74E63tnqfif3e/nTzWcY5D+k2CAfPqV1Gtf3jGjjW5i3yodv
mSGeeWvXf8zF2g+ea6rPjfpM1/hG8E3hewJnkbpgfso1eCDyn3PhYR6xL/Z5
WN654n6W85Pz1vb/sFx4G6ZYIcWK+bhvRtrHKDGsc6dzz/+ai7t+jvlvufAx
3P0b5yPIN0pj23zc1dzTm+XDi2yajzUwaP6iDtrnqYvm7yn+yIWn2VQuHuYC
63+69oe13+XX+qGPTfKRMz7puGm+wQtdoA6eAe/wdy58Tpt8+A7Gzc2Xp/gr
F95luSMa2+Xju8399pTnhLfc9T+tU0MbPTzPMz6XLdJ8yxT/2Mff1p+tW+M5
1rDPqnGR/Vxs/CWXu3SVfNyJv/uMeC7o/5tr8Nzk/+XCq8wzx79slbjt8pG/
4Jz9yfkt8Rr4p475WKPO+iVqorWCvgpN3ifeq5qHeUk+PodaI9fANPI9vMy+
6KGdXo2xvfk/noPntZJacJvkw380tr+t8+FVGPEu5HiZlfPhZ+CSU4PLc7vG
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
dhd/UiU8VjNzPMn/KuFx5otppu7aYk6uhP/pLLa5a9RHOq9hrnWv+eJ3FbOO
OPJRzndT71pjgdyxlfAQY3wm16jTQu4pnrWF+XWeEX4X59ebM+7p88nK6yK+
hruhDjNaHLW9rN9oTi0nZoxnGGUfXcXcaM54k1qjKw3eKSe3q+vdPG/BdWoL
rd9WCY9xq+vjKuEZiuanVcLT4G1uNvaWv9C8pj9OjZL8GhfOLQb74H9OTzG+
0uBjyCe4vp+YfeTU8CU1y+Ir1suudZfLmfAh+JY7K/H9qarPd2hiJXwL+Nsr
4UUY7zA/Q0xLMbfVrfcQc6c5Nb5pfB/5rqyn9iTHieZV+51gb/DvMu6uhM+Z
LH+SmLus45kOFHe3OfV7XStXI8e34I8eSPFgJXzG1ym+qYSHYZxqDva+Svic
KeKoLxXzjWtg7q+EV5nq+lmO37pXLzH3ij9YDOvTHL8z76Xu/XJ7W7vX3u8R
W/NBy8ypTTdfJo8z9jHIF1XC2/QxB/99Je6l6fKYPyQODP7kxxQ/We/rGvnD
zvua9xOL//lBrR/U7yfmkUr4nH7mP4if4V7nqME/L/IN5Bv3qJxHzA9zjh95
shIe4+dK+Ag80i/m1PA3j6V4XN5j1h41P8yz/Sx3tlw0BoiF+4T7Ufs1xW+V
8DPPVeJ+HyTmSXFPiH1czV/qeOfJnW2N/HfrrOMtnknxrGdD86kUT1fCG9Xy
gc7/SPFnJfzP+c5r+e/Oj1Krxn1GPrwLxV9kvtzzHG0P59vb72JY/8vxQjUG
qnm0z2SQ3NdTvFGJu/MieXikldPfZONq3Ll4i5dSvJzin0p8K/6uxPdirjW8
Db7mBcfnzQebD5EzV/1L5P2b4kX5L5izFx7ov0r4l3n2/Lx6Q8UMEz9U/iXq
gV+hGtz/PNPf7nuZmqzjH/AIr1XCbwzzjK9Uwnsca/6q80bV8Dd4mxWrMb9c
zRXNX5H3spxX3WMluXCudM4z5vkfbw+X2deKYlb2+ZNfIWe4mq/5242Qz2+F
J7rKGr8pnof75pMUiyvhEcA0qUbOuEqKtyrhad50PMEcv7FaWm9aDU+Cf3nH
9TfENHHfxmqiN18evmXVavDelvtuJbTeUf9/YuGtKpd+TrKXt+SeZLxtH3Dp
Cz+DP+H/79EN5niWNaqx13uV8B+jzE9xDczq1QjyBeqtrua7ckbKgft+JfzP
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
NXzE+/4m5O9Vw5+86z7XV8OfXGdObS9/u64+m2vs/V25I+3/HfMF8vew9q71
G9TZy/1H28MN1vY039O997SX6+1/lP2e4sg5Ki3jW8pdw92ytBr3S9U66x+l
8eNq3PH87h+ZL07xaTX+fvmOjHf+qTn1hdXwNt2MrtZOk3+6mh+qe2s1fMwt
KT6phodhb+58PEQ+9XOz63urdbM52jdZ+1juWPf6xP3wB/iFL9REr5AimyLX
MvzJkhSfV8OjLHHke9nK+5E7je8V3xC+JfiyrNwz5E6UO8Fns8Rxr5axL3vi
ab6shnep9fW5vX1p7Qt75Ow5eyRnL75lfNMG+cz28bmc5tk/8bnc4ho+opT4
5RTfVMOjfO04xZxevnJ+v+9By5bBvVv+NN+Rb8V9JZc1MMWWsb5UDDr3qUWO
Hn7oGzFTzafaC3vR472OFfMfquEVvq+GJ1m/ZfwW1M9xDT+yrBqeZL2W4VPW
TeN31s92Tv0Bn/NXnpvfpOjvUvQs5Hhw7ineaXSmea7v1JtmL63q+vnRnjjr
up53kT2BJX/Q+XR7+94zTDfnO8a3iG/ZBjzTFBs6TjN/xDU8y8/V8CqzzBm5
Z/EfG7cM//JbNbwLHgQung/+b9Z+lTdTLpiHxbE+WwyaG7UMXWIT9dn/l//X
xJnHUTl1bZiSsWgwD2c+J0OEDCUkIpWEqETGkgZFkpKkEhVSUkllDhGZ5wxJ
hpB5yDy95swz+fb1rev8On+s31577XXfez37ec5ed+V9zftZf4o1lq2TEV30
pDyL5fpzm9AP6Av0x/aZ0AzU+/s2oTeu0P/DHLTKdpkwfOq4Lpv6WbJrs5HD
2vbWSE71HH6Xe7q8cFLDX9YxQ3+mtexgPc0yoWmY0+/olWtZ/3R5djCHfHru
7mm+RybO5RfPcKb8fyf7J9m/28SdslMm9Aq/7x0zMcd/zr2J/Zf8NTLRo/4R
x520c4rtkome/Jz458250r1eMI8ceOCY7QjnXHOooXkmbJl1zbLOqzT8Vb6/
xb7b3TKhEV72ufGJoUd2TWOLZHUyoVfWdJyrf6Xn8rf1P+szg31JPM+H/6I4
aga7q3HWeSd1M/FeOP9XrOUa46xTQ11jdRyphb2o8WXH3fTh4R2iVfZP4wGZ
6DON0tjYvkR/XzsTPb5lJnTKnpkwfLD8ptfLxO+6dSY0y15prJcJ7PXOib/p
nnu6bz3X+e5aZSKPnHUzwVm9L/DXz4TOoY5WmdV6q6X1sdc6mdA8zPHXlYPY
vpnQCftkQo/Uz4SWeNu6986Ez4hG2cC8m/UZqWFQ+h2+mmxwNuL1a/JuMgee
t2p495ETjbLCWt51bGMd8DRItmEmdE8Dz/A6f4/7WD88rM835w3PrnpuN/rs
8MONtmqbCU2yXyZ0yfvG0BZojIaZGDfKhE8N+Ogz+i3fQxPnG5m7n5zwfyBf
9TuiV/Mt3SEWDvQK8XaZMPwDrGf/mm/vdutp5Dd4u1gwByY7OFmHTGiLczKh
JzZ17aBM6DVG9An+nT5DE7Folts89/08nw19tv/XnmLh4D6Z7Z1ADQfKD89n
5lIH9aBtRloPdW2cib2buEZOR2sAAx6dNcL6R4jD756Je5Wew93FncUdt7n8
7DMqExqF3k7PPyQTuqVTJnxiR2aif3dN4/mZ0Czoj3PFgz00WZdMaJdO4tAR
m5tXzWEdXTNaLnjGyMmcNfbvbB3UgH+edbLfVvrn6Y+WB71wRCZ0wvf61Hx4
JnTJYZnQHmMzoT8y7s28Vyb6Dv1qcvIvy0S/AvetWGrnGZlnrHmMc+LkoGPQ
Lxd4Zt97bhcYH6flrGGs86x18gzsiX+Ec2o7zvoO9Yw6uxe845NdlAk9cmEm
NMpRaeyWCc11lLEjnVPXpEz0p4liwBb8XnpkoheTf5SY8eYV/K56mDtRHnpc
U/1J5vDddXP8Sb/kXhfpM07wPZ7nu0QrHJPGYzPxPpjj98yEPkGnXJz8SzKh
X9j3Yn00yWTfXd6zKYgFd7TPRv1Hi50knvVfzYHnUrl6Wcexxrdz7VL9S7Tt
rIG9jrHW330WnoHe0j8T9+qcTPSc2c6JD8iEJqHPH5+JkfeOz++W3++0TNwn
3CUnGSd2RSZ0DbpgiobPd0zuiZnI/0tOuKfJeXmyEzKhW9ifvo926CPn1Ezo
nB3lnSpvM8/5BOs+Xo4T3ROdMCPZzGSnZIIXzpOT9c6ERpmeWa1frnCOz73B
/cTdwT3C3ddR7BqewQyx0z2HK8Se7PpJ7lvXvanjykxolxZiZ+jPNL6mtfVx
n97GOllHR8+ruWfCs5/oc091jXi/TPTdUzOhVa7KhF7Bn+WccXdrGpiJvjtA
3FpiW/mtzBW7uzjW+9bktDQPjnXkgXM9Y7PN2dO9Z+tT59ruid/fOXrj2kzo
hcGZ0BUbGLvO+DWZ0CZXZ0KvnJZskHPie7n/aa5faf27+V76+m7q6vNM9Mmr
/L5b+dx7OV6tTz2nWxO17Gs9A91rPXM2sJ4N3H+Qz9Xa2vd25JnQWfw9GPqH
v+dC7/FnzfruhUYakokef4b+Rs5vSHZjJnRAG+f/r2uSfZCJfow2uSkTWoWc
683bUO4q55nyolvQL0PFzhN/Via0UCP9RuZsJLahtbS1hnn6N8rT1hjYYXLd
mgkNgla5JRMa6eZM6JR2xtAhaJCzHYfpf5GJHjTO+m72GRub08RYO+MHyjc/
2YJMaKiNsuEf7Pw266GuEZ7jOWLnW+dwazrb2K3G6Zn3Z6LnNvRMhrrX7ZnV
+gn/jkz8rjvqc9d8mOwj/ZHOP9CnBvoTfeoT10a63kFOuBbKCyf65c5M9OtP
xH6ciT5O7C7HO/UXiulkDdQyyvFj/QXux3ndLRfY+zKhG+5N9mmyzzKhqRjH
6KNT7smEVrlbv4vY+z2/0db6qTld3GO0MXg+lxNuNMz//Abuk+Nw45+7hn1h
zlixn1vHPdZ8uHP8LzPxXYHhXqXv/JKJ+5Y+81SyBzOhUR7IRJ//KhMaZbx4
5o9kQos8nAmd8W0mNAu4rmKJf+PaePf90vX7a3IuMg++bnLC38PY1+Zc6N5f
61PnUe6J/1BmtT57SB70x/eZ0BGPZUJDLEr2XSb0CTWv1CeGRnnUnB76xLhb
uA+vl+Nocx4xp4fP+Z2cF8u50v1/sAbGS2vqOSazWtc8ngktxB1On3xOnirH
Y+Yc43ld5Fkc5fP+vy6Vn33QWD9lQlMw/qz/ZLLFmdArTzr20tj/iWRLMtF/
TzCnl/HJ7lHlmyIn3xLf0a9iwT3l/LdM9O+pzi83d4ocx1nP8dpiseCmmf9M
smczoRv+zIS+QJ+gRZ5OtjQT+uQk/SXGeQb0y+/J/rD+S32GYz3PJ8yZZh73
AffJKOfTrOUZ91hqHc/6nv6ynj/d72nr6GPOc2J7i7/CWqY7/qnPO+6ajXfH
fcXdxZ010z3+1v7JRM9nnKVPn1+WCd3yvD6x1zLRs19N9mKylzKhRZ53/RT5
/5bnXznhRs+syoSmeVEcWua/TGii2a7/p1/VXv9aBzW8IOZU/Red46+RDR7w
dbOhGepkQ2+gs5YnezkTc3y0yprZ0CtzxTNvkGzDbPSq/j7jAHPmmDfAeJXz
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
zH3e/CtdR8e9YB45s+Wp9nX8udnQNsvMPdUallkfe/Ed7ukc/5Vs6IWXs6Et
rsnGf/c4yDjr6JPl2dAoV2dDt+xl/CXXrjY21+d91ufYzXcz02fZTf9Ua+wn
R3+fbYA+sX2sqVoPtbzqPq3cq7U1720N1xhb7jMNdDxNHw3J35Pxd15wvZaN
nt4yn84l2ex8/Havz0bfb6N/Qza0Cz3/de108fRcevaGudAj6+VCz7xmDvzX
yQP3fvLC+WY29Awa6+1s6JrWufDRSEOND3XtRvHVeqjjDf035HlLzjfFviPX
u8ney4aG2CAXWmv9XGiQm42hW9AsKxzf0aefbZbWN8/F863vM55lzjC54CF+
i3z1kzXIxfnMd29qQMNU1+Z7duQ0sJ76xqn5bGt4VzzzL7LRg//nc7/ps58j
9/vJPsjGb/kc/Q+dN8yFduG+2SgX8wW+R+og1jhZk1z05NvMWyDPOfKPlBMt
9HE2NM1H2dAwjcUS/yQbPf5jx1FiPjS/kfVQB9jbjY3wrN4XBw/6BB3xeTb0
A1oFnbRxLnzGTZJ9lg3t8qnjaP1x4jg3ng/sQtc/MWdj403khO9u3z9aZtNc
cHwuz6bG7/Y7ucdccJuK/cy6z9f/3Dn5fFP07lIay7noPz8n+yUb/QYt82U2
dMuWuej3W+TC8MGiNb7JhlbZJhf6ZOtcfCdfyrG18Qfdcwv3/cJ1zmarXOSR
87Wc1b97wv82G3qJOsjFv9/5ePf6KhtaaLz+13IQy+VCM2RzoS9WZkNLPGzd
mVz4jGiW77KRN1F/ojVckAuucbmIr6zJm2AOPA/V8GblRKc8ai2LHPO5qAOe
75P9kA2tg/9nsr+y0V+z1v+I6xeb84BnVz23C312+OFGWxVzoSUKudATjxtD
q6BTfnL8Uf8HfbTXVL+HX53/aG5BTvifkK/6HdGfn/Qb+kUOejnxSi4Mv2w9
pZpv7zJr+Fn8ZWLBNM2FZkAv/JENjbFdim2f7LdsaBL0Ef7vNfOp1r9tLnTM
Es+m4Pn84LNxruxBHjncCY28k55ybYm8v1sH72h6TT3U8ow1XO6+f/oOq7X/
bv521sN+YJ82xns9Io1dc6vvLO6rHXLR3+Gnx+M3y4XPuGOyf7LR7/92nKlP
f66bi56OhkGDrHL9L3Oayb+DnPChh5rnQsvslAvcv2JfcG3nXPjLnIPbSSz1
zLKWf8TO0v61DrBwoEPQDy1yoR3+S7ZGLjTWHH20x6650Cm75MLwwbbJxb39
rtjZ1rmzeS8an+PaXDnXTFYnF2d0tfvvZg3EiVVz6tbkzTVOzS9Z13JHOE5P
dkYueutOniFnsnsuNBV7vOp8D31G9Eu9XOiW6/QZ1/L9UQP+urnQJeu4fq05
8LxSw7unnPRrdEtLcTeIJd4qF738DddbiSO/Ws/a1oTh3+AzsBdnhX5CA+2V
Cx2BDhmcbO9c6KHW+ugW5qclf1Au9Ava5jT9+p5dA+vYy9rAwnGNMfaqxveR
l3ePZtlXnsFyESOHON/Ju+a8Y5z1Qda8vrgNrI/8/fy26DOH5OKOPS8X/WdU
LnQKGmZILrQK2qFtLkaw+Nwj3Cdn5UKT8JtuJ2ZDvxViB+Qi/p5YOM4whzP5
0Bxyz5JzqPzMhyXb3zxq2d+a2lon+52pz9hQfCN9dAJ6pH0utAS6ZHiyA3Oh
Vagd/yDnZ5vTxL3P1qencY9xnw0352zrHGbOgZ5FO7ngZO+DrYMa8NEtzDex
lhHaObnQOtyv3GMzrR2eav0jzOEcDvBczvSZG8rfwT3QJGirjmneKRdzfHTL
ubnQLvgjnTNuZh30Yb6J0eZs5jp88Fc5v3Sfr/yWOovdUvyhuejlnR2/0gd7
iPhz/e62cNxSHyx6CVwm+WNzoR0O932gWc7PhTZBb43RP98aRhtHx3RJ42Ge
Swef4xyfa1P36WIufY++QW+ihi6uZ+QfYy3jauo5wppGu//WrufMydTgqJt9
DhP7nf4N3kXcY3mxaLSvOLtkFyY7Mhc9vqs+Gob5eNcLYsfrd8+FbkGDoE0m
5EKr5OUeL9/3NZxHyQsG/dItF9iLxGMT5YH/Z3PAgAVDLUVruEj/QnmKxsD2
sL6eaTwmF3oCH81xdBon5UIvsV9T/Umu/2oOIzxHy9XD2ETzy2LBXazPiFbp
6Z7wXZILzbKt65foX2r8EnOpE81DX5yRbKZz4scmWyv9+f+6NF7rWXAmnA/a
iTxyJie7zO+MsZk+v/vjcqFheuXC/0v/T7EnJDsxF5qjl+t/+t1OlmeKnHCj
Yabmom+fIA79cnkuNM5Orl+uv6PYKdZBDcfnAsMcf3vPhLOZJs/lngeaYXou
9Ama5aTkn+wcHw1zRS50zM7ir5DzUp+BGnnGquZpbt4q41XONeRdM429k/XJ
xXvZ1VrWMM56Hcc+Ynu7foX17uK4q/4pYvro13XO3ds22bxkV+ZCm6AdZukT
Q7v0TXaquL7G5uRCk8zOxW+9fy5+76eYQ+5MOeDcQ064rxKHlukntnpf4A9w
vaU5e9Tg6rn/qWLr1fhrO28llhpfSfZqLjQD3zE6pW76rgfmQqux19xkV+dC
v7De2nkr1/bSn+N8XWsdYF5rc+DfW47T3Lu673W50DTXOlb1EfF9rXGw+S08
O87tNeOveg5XeSb7ir0+F1pqsLlvJXs7F330hlxolTb6Nzp/Ixd6A/3yuvMz
5Hld/wZx14sB2zbZm2LBnOmcPW/Kxfc0T57X5DrT9aH6Q8S0lXOe2APE49/s
/AB9dMi7udAYZ/t8Z8k5TP8d88i/xTixFbnQM+2Mt/HseK75rhHnPvnHO+Ed
Od8256Dcam11ay40zHvW8657rbC29ubcJvZWcSvMJWeEWDgezMW9Sr/ivuKu
mmoO6+8nW5Ds9lz0+w766JYPc6FlPtDw0QL05v/lom9/nAv9MkquD8xZINfB
csF5R7KFudAz6JqPxI8ydmcuNM9C/WpeR7FV7fWh/odynOs4SjzYu3KhFe5J
dm8u9MYnyT7VZ0R/3J0L3XKo/qFiv0/2Qy562Sc+48eudzZntPEq72dycj5j
kn2eC91ymDV8bvwzcz73HD8zXq3nHmvqog/+sWSP56J3LvRcOJP7cqGpqtrq
/lzok676D+RCu6BhvtTwv3DvL3yP3+RCa3xt7ALj98kD95Hywsl39VAuvq2v
xaJbuhl/2LWHjD0ovloPdXyl/5XY+3wOzqq7OHjQHmiWRbnQVN/mQrMwfqf/
SLJHc6FpHnHs7rkdI8cE6/zGnO7yTzBW5ZskJ9pmZS6+hcfkWGR8kmsXu36J
80ly9LCeo7VHxfJNXWr+v7noO//koscsS/ZCLrQK+uWJXPT4H5P9pH+pc+4T
7pKncvF7/iXZr+IeF0t8ims/iv3B83jc3F/M+Vm+xXIucY+n3Jv1y6zhJ/0n
rfUJ/eNyq7XYYvnQDL8n+yMXWgI9stRaf8uFFmKcpn9isqfNW6JPjPuEu+Q2
156WZ4nrJ/i8v8rzu5y/WQP7T3f8U/8Za1qq/2wutA53I3fZOWKnyfeM6yd7
HlNqzmGxzw33DPnpsX8l+1ufEb3yfC40zCn6jM/lQj89q/9iLjTHC673MT5T
/irvP3LSt/mW/hV3qljiq3Khd65yfZW4WTX1LLOmvvqnmvef2DWTpqmTDz2C
vkGDMEdPvZQLrTJAf7n197cWNA3aZo181D3Dc+rt8/ZxbY778Z7b+67/E0sN
A91juXtTQ7WevslOzce+L7k3f7641vWXxS+3Hvbjmeb6bPCg6fi7L/TP7im2
Rz40FiP6CJ9/t3zNGPrjNWPoGXr+2vkY6+XDb5Bsw3z0abTIuslfzz/31DN3
DznZ43X5+DfSvfKhg1rlQ8uAhQO9g8ZhnfENfbAtxaxjTdSwjvgbjK/r/C1x
rfOhH/bh32OTrZ8PnYNWwt/AOetolr3F7O2cHrVZPu7tm3xOnhH+1ubAc5Nx
uOBEF3E+6Jj61sD+6Bhitxhv4PlVY2CJo6Peti6w7+h3yEdvPdhzbOWZ7Cd3
m3z8vt8z9r5j22QN83HXbOR4mz778x6Z03/pvY2dEycHvndruPaX+4B8aBXm
4BrlA0usXT60y4fmtROHjgJLPWinBfqNnHNObXyej+T5OBc6pH0+NEWTNG6c
Dz2E4aNbDsqHZjkwH4b/sefFuVWxC33GduZ9bPxOz+AuOTdJtmk+voO73f9g
ayBOrJqzWU3eXcap+RPr+tSxvd8T+Zvn4459IlkpH72sWz76UMc0dsqHltki
H1rlPn1GsJ2THZoPnbF1PjQJegQM3wocxIltJe5eseR8bh7rD5gD1yE13Ggg
Yuy/ZT7yqGFLa6LGquY6RL+TPF8ay+ZDJ6BN0CKH5UNLUO82+dAqD+tn8qFZ
uuQjr4tzahmXLCffN/J86xrzrz2HbTyLR+TNiMlZB4a/SI7DreeIfGgd5vTT
Y9J4rNhH5DncnO88M86Bc+NZv/B5F8mfT1bIhyZBZ+EXnR+VD81yZBq75mNk
Djfz7/0WuuejJ39v/Ad54MvLBSffUNnvqeQ31E0s8Uo+ennZsfrdga1+ez9Y
14+O3cwFi17qmQ+9gPZAp2yXX6150Fs98uEzHm3txKlh23xomqbWvsj6V3ru
XV1/yhzuAu6EO4xRQ1N5e7rPMdbT0zqoZ/t87M++3X2Pv5tL3m/WSz08wxL9
7Zzfy+/E98x9xf3FnbVDPnQS/PjN8tHjMXw0zHH50AG98mH46IE+yT8lH/34
xHxolBPMYf0P+eFij+fk3DHZTvnQLWiZ4/OBA0+seT60EDnNa/LAg0VH/WVd
fzser3+8PC/Is3M+NMSuaWyRD41ErSfpM6JZdsmHDnlRnxEs9zY96rp8aLF/
xL/oHjvL828N78lyci7olt750DPU0cIY6709O8Y+jsTBU8Ou1vSS9YOnj56e
7AzP8HnPhPdQRz50FBrqVK2esVnJrsqHftndOX5f8+Gg/87JRw8+1bVlrtV1
D+L95EWfoFn6i50tfkA+dMs6+uuY08+xnrXsaQ2z9Ynt5nm1EDtQrsH50BJo
k6vzoYXm5kOz7GWMNTTLaY4D9euLP9365vqM65qznrG9jLeW75pk1/oN7O3+
g+Wrru3t97GP89auER9kTaeJW9/YvmKuz0c/uyMf/eW8fPShUb7jIfnQKzfk
Q6e0EXOD/tBkZ+XjTrkpH5pkf7Hg0GLzXNvffa8X28DnILetefvLCV9Vv8Df
2BxquFHbzzqo8Uz321B/I3kaOp+fD52ALjk72fB8aJF21nyzPuMt+dAtjc1l
HKZPX+MuO9z5xjW5Z5l3s5w3yXmL+95qDdTSXv9WOahnE21EsnPy0SO5y7jH
bhF3oDnDzWvrWczzWTfyedvLfVuyBfnQI2is2/WJoVdGJjs3H7pppLFznKO/
6MN8E1sZH+lalRfOjnLCzXe0ML/6WwLP93RnPnr4Qu0QczrW4Da3llFiNtfv
bD4caIUxycbmV+uYe5Kdnw+NMtr1rY1tZR3E70p2dz50TXuf4WCfcxOfr7N5
5NAzltqbOrv/XfJv4x5Za6rWQy33uraV+44zb6y4MWLutv5DxXUxRv4F+dA6
DyS7n3MsrLHGhWkcn+yrfPT1I1xDt+Rdy4vFR2egNx7KhxaZkGyiGLD3Gb/I
tZzYvGvk8J0XzSnJBeeD8jN/OB+1Fa3lQsfx1nm/z9HV8UjxR+mjE9AgF+dD
h6AzHk02KR+6aqJ+xfkj5nR370f06THc69flAt/DtW7mdRdfkrMiL3tfYh3U
cKn+JdYD1yLtsXzoHfrhjHz0iKbyVOtfZM6z+eipz3gmF3lG8G/nHpflQ6NM
zsfv/Yl8/ObxH3fOeIx7X56PvjtV3PZi0R2Lkz0l9hhx27tfNec48+DYUR44
mxt70pxe7v2k/hT3u0y/mfMHfJe8R7TH0nzoh6U+N/7T+dAmS9zninzolmn6
zT2PS633sfxqXblE7AnW/5T+5eKbG1tifLrvZVf3720N043tor+Le+9iLVdY
/4nWe5Ijz1HVRrzPdQpx31b7zpv5uG+fS/Z8PnQKeqWv8z6uEUd3vJjspXxo
ADTHf/nQG3xHVzonvkrss+JZn2nOKnPQKv3khHuAI/xoq3/NecGamheipr7W
Q/xU116QBz60A9qjTiF0w8vJXrHmNQqhUxjX1F9uzkD9gdZSapK+92QTmkSM
nNPMGVBzDv/V8LHvXGtg/7qF8BnRNoPkoJ5X86FpBnk+MzyjOvLA96rrr3ge
q2rOpJ/PD/da8qNN0EX1CuEzrp3sjXzolNcdT9dn/9ecD/VbeMv5a+bAAeda
csLH97Ou3xLf1Jl+S2DnubZeIfwbnYNbRyz1DLGWN8QOEQsO7fFuPjTKinzo
h/qF0BBvJ3snH3rlLP1hxodawwaF0DHrezbUf61n/prPvb457MVdwr0w1f3X
t4Zh8q+wnuHWRC0Nauo5y73Jea8mb1hN/Tdb1y2OcHCXcV9xTzWzBmqBG/0D
P31+o0LolQ/yoWHO0Wd8Px+9+fNk/8uHFmlcCJ0CdsNC4D/Ohx75SNwIseTc
ah7r55oDT6NCcGFN5GT/D837QH+kNTa0TkZ00QJ5bpfrs3zoB7TNZ9bMHJ3x
SbJP86FR0CobF8Lw2Zt+Ro/6Ph89Kpdi+ULoo0/k4BnP8zmbiF1o/BPXNi2E
XrnbvT/3/DYpxNrd1rBJjU8dzM93n0+t/3z9cz2Hj3zO2z2DzdwLXnTV5oXQ
Joxb6H+R7Mt8aJcvHMdpY32nX+ej/15ozjjjcLJHlQ+tAid9Dc21VSGw4NBd
zLcuRM97wPmD5oKF4wLrGa99KRYceon875KtzIduyBZCY6BV0GHfJPs2Hxpl
gv7XxnkGtMw2CZMpxHt81HfJs9zj85DzkHk/5OPdf+/8IWv5zj2+tY6Vfh85
66Gui9x3gmsr5flOzETroZZHHLP6aDH6EX8+3zHFdrL/MNJz8On5P+ZDn/yg
T6zsb5vfNb/pX/Jxt1SMs14ohMZBL+Sd4/9s/hQ5L/X5S4XAwXmZe/6UDx3x
ez40QFVvFQth+AXPOS//ZOv8yb2myLddITTDtoXggvOPZL/lQ6/8mg+t0rQQ
euUpn4f5ht5X3FvcfdyBI8RNFUvetjXYxeKn+rzkTPc52HepNW0vjtqWGH/a
td+sc5p1TnPPEdbwvmdS8tx+9ll/Ms4ZsUbf/SvZ3/nQK+iWZoUw/B2sgxFd
tnMh9AZ9eIZYOOjRJxaiT+8glvw/zZkhFi0zrRA+HM31d5H3Ob+55/Wpg/mV
7kOd/+Rjjt87rfUphGZokWy3QugVYnWMo1HQKicXQsOgX3YtxJz4SYWIUQNx
znn7wur6p/te/vQ5pls3vwV+Ezz3ST77SXLiUwf1oGFOsZ4+Pucu7tnCepfr
L7e2Nayvt35vn4X/zzH+/zX4/x97Rf7dC6GF4GefPQrR6+n5+Hs6P7UQmgZd
0LcQc3z68eBkpyfrn2xAIfRKXfPWkhO+3eWCE43UqhA6pmUhdE5/scT3KoS+
aeVI3utiye9nPaeKrWdsbcf+4uBB26BH9imErkCroK0GFsJnPC3Z3oXQJa0d
39Knh40oRD8aIHYdeeFvLce6rq8n3/qeDbplkHtTw77ONzCnvv5gcYOMUw91
Uwv+Ps4PLkT//azmXDiTNoXQUvvq71eI3zOGz+96SCHunTM0/AbWcLr+0EL0
44bGzjDeRr53vSPgbJts/0L0cXTNmeIbGjugEP2dnANq8sCD3cgahugznulz
rPBZPpKnXSF0w0FpbF8IfXVWsmH6jOiXAwuhW9Av+IxgOTfOrL24RtbK+kfm
NDZe5T1bTr4B9MxwOT6VZ7jxs80Z7rdytvFqPQdZ0yfWD568c/yuLizEvUrf
oc8cVYj7Fr3SIfkdC6FX6PMjtc3EozMOSWPnQmgTdMl5fiNg4TjP+Cgxm7kv
Z9LB3FHmoGe+lBNudAhjZ2s415zNrYP5F9ZKnZ2cV/1D5EMnoEXGFEJ/dEnj
YdY8uhD6hPF8/UMLkYMWOdSRWsbK8bmxLvKR83V+9TmcV8O3jZwZsWP1GdEu
aBs4qOfwQmgeYvTJYwpxh4+R53xzvjP/XM91C5+XZ/3COsfJj45AY12gzzg+
2ZGF0CtdHb/XZ/8jCjGn//ItdHNOvKscOffIy8f3c5Hf0oV+Q3xLYEuuTdAv
Oh9vbsF6+P6oBf8o5yVxaKmehdANRxdCn1xcCK3RPVmPQugSDB99Qvxn659U
CP0y0bpzng/neYTPPdEc9uJO4D5o6P4Tjf8q/9HWw3uiJmq5pKaeXzw/co6p
yfu1pv6KdTV1vNh6eLf3FuLu+sD76tJCaCj22N75ZH1G9EuvQugWej4+47Fp
nFmInkuvPqEQWuR41/8wZ3v5q7yXyYmOQc9MEfe3WOJTC6EldnR9qrhmNfUc
Z00Y/t9y4MODrkKXXF4IvYB+eCbZFYXQWNP0d3H+dLKlhdAsJzrHvzbZdYXo
VVPl20ksHL8ba14Tny4v54J+mWEN7P+ssenGZ5o3Q8x015da80niTjb2aiH6
6iDPpplnA+9zhdBUzxdC+zDvq08M3YJmmeV4pf5Mfd4lfXd2sjnOrzT3OXn6
yAnfsmQvFEKfoFv2FAtHf+Mvav3M7SuO/KusaZb+ns57+zx95AH/UiG0xMvJ
Xkk2txBapZX+1c6XF0K7DBCzXP8Vz26QmJY+Y3/zBsjTyvhecqKF+AbQK9dY
wyvy7O36NebsUxO72vjL1rNc7EBj5PJdoQfoK7cnu6MQdy896MNCaJXXkr2e
7IZC6JXrHffV5y55M9lbyW4qxG97ntjB4om1Nb6v+17v2mDPhfUbzYFziLxn
yj3UGsjZT38/azndGs9wfEP/TXmYzy+EbrilEDrknWQrrPnmQuihA/TbuY5m
eVs7yxq4w+4pxD02zPg71vi2OTfJtb9cN7svNRxkHfi3Oh9mLWicdwuhefD/
sFceK6adPCvMO9szuNHze8PnPUNe+NFUCwqhS27T7+D8/WQfFEK/jHBe9anh
vUJ8Dx8Voh+PMPa++PY1nLfLS7/me6p+Sx+KX1gI3dJJv5M5HcR2tJaR1vCh
/gfm3yn+02SfFUIz3O27QK98Ugh98nEhNMp5xj4yRv3oGbTMXdZ+q/W/5/O+
6/qd5tCT6B3buvedro+Wu1rLGOvpYj2Hued57vu5OZ+J/bSm/kPd627xzLmL
uMe4j8aK/x9nVkxaKI1fJLuvEP39cP37nbOGjhkn5gv9B5M9VAj98VWyrwuh
UcaaN04e+O6VC86uYtEuDxRC23wlFo6L9B+U+0gx95v/pfV8IfYCY+MdvxJH
begZNMijhdASjzhHd0xwr2/0Gb81h/WHHbvpd5PzYXMvst4J4iY6fqf/iPuy
38pC6JbvtEnmXKy/0vrIX5Rsh2L0yO2LoYuONt67lPpmsmdKq8+FM3msEHnk
/FAIbcK39qM+MX7zjyd7ohB3wOPGHnMOHq2xuBB64zFzWPteDjgnywn3T8l+
LkS/flIsHL8Uopf/rE0xZ3INrpf7PyG2l/7Fngd7ThUL33bFOA80w5JC6LOn
kv2a7LdCaBa0yzTnU127XM7vrf9463zKnF/MO8G1p8RPE/tHsj8LoWO2970s
NU6sqo/ImWH8Cmv5w/GYYuiv7ax/hvl/FUKrzNBfpxh9aO1i6IVmxdApjDvq
/53sn0LomL8d4Wie1ncuhiZZVYjf+1XmzJQfTr6tKh+aB070y07F4Fgl7l95
/pNrmXu8YC5YOK60nlnaP2Kvco5PXWgesC2KoRfQD+iUXYvhz3GvNYqhW+bo
k7NLMfLwX3S+i5xwzxYLZk3xYPHRLXPdp4V7EatTDD1DTp3ian2DXzfZbtbZ
wnfxjGeHViLOOmfyvOdxrfi65rC+e7JWxdAN9NK1kl+vGHoFw0e37FkM7bJH
MQwfDbO781fFgmGf68XynaBPXpMDv2Ux9uJboo/zPb0i16uutzLndXEt/e6u
99sDu654DB8dNU9/vWT7FEOn7J3GvXxGeNEtzFsXQ7eAWc84MTTN+q4RX8uz
49yIo21Y407gLuFeAPumvORsUFytgfDrF0PDUM8+7r23e803r74Y8m+xbvLJ
WSFu32RbJNuyGP2G+4q76jJzWKen0+c3LEavv01/o2LoGHr/fsUw/DZpbJ/s
4GL06wOKoUX2L8YaOXA2KAYP3AvkhbNhskbF0DT7i0XDoHWIN3YNnxj5Cwqr
66GOtvqMHzjuX1ythcDBg2ZAO2xSDJ3Trhi6g/FA/SZp3LgY2qWJIxyHF+Pe
pr+B/dBnJWeh/B8Zq/KheeBEvxzkOW1qHdRA/BPX8Nt7hgeJPdD9qecua8cH
Sy/NFaMnNvSMOBf4Nyuu1tz4mxdDqzDHR790SGNH/c+d8w7xqQGdgd44pBhr
xA+WF064tpB3c78nvqsHxIBFf6FziG3lGjlb+R2CAU8N1PKFYyf9Td2P89pa
LrDZYuiPTBo7Jzu0GFqFEe2Cj5bZphh6Biw+MbA5z+8ra4Vja9cfNN5Zzi5y
wo3+OawY30BWDur41rzDtMPNIf6Naw9bT8baH7b+I/yuwExJNrUYfef4ZCcU
o98UiqFX8sXo812LoVfwwTMvF+NOKRXjN92tGNoE3CKxxI8qxhrYleIX+S1V
c340D74n5IQfXUHsyGLk/GAtR1oPdT7unvjF4mpNhg8PWuToYmiQbYuhdZqm
sXsxtAo199Anhl6pFCNnsT4x7hPuEu4/OJ6Shzor5naTF072/UVu9Aq6pWca
j3X+eDHq6mltxNE3rHEvcpe9K0+Pmlx4fvO8fvRsHvd5eW400aXF0FaXFaPH
Ti6GRtnBGBoG/XJcMcZexfCpAR8thc7gezjReS9zJ8uzvZyX1XxHO/kt/SMW
jubGL9d2MreZuOq397f1HC/+b7FgphVDV6BBehdDe0xPNiPZScXQKmgr/JNr
5uxP/VcUQ9/s7NlMtv5jfTbOfZp55PCuec/0uObuv7O8J1tHH2uq1kMtLaxn
lfuSU6em9pPNn249V4jdxVj178v4uy/4ZsoJzylyoSXQFP2LoUHQRVfqM85K
dmoxdEBfx7r6deXpa+5u7rG7uD3E1iuu1lb93G92MbTNVcXo+YOLcT5rm9Nf
bD9xs8yFs6XY2cb2rIkTm5NsUDG0yGnJBvic/fUHFkMnrauPzrm6GPplrobf
Sq65+gPErCNmoPytzb9a/5pi6JdBPtv61jZHHtavNae1uGvMW0/OQZ4JePrl
8GQjxO0j9tZi9Nr5yYYWo4+eWYzf+3XJrtdn5Pd/RjE0TAN9xtMd6+vvK38V
f0MNdkhxtZYa4l5oFTTMjXIMlqeheWeKGeL8BvPbiAU3z/328fnaGkMDnV0M
zdDEZ2xUXK25ziqGbmmsP6wY2gUNc7OGf5N2gJxDzW8kb+MaLJhbNM71QGsY
bh3z5Nrf9YPMaSemmt9Ezo3F8g7bm89729QY7/TCYvSb8ebcVgytwrhA/5xk
I4uhXc5xhOOOZAuLoTlGFUOfbGHOpvK3d88qX1UroVVul2OUuHP1z5Oro+ud
zO0gx2bWs7k2UuwWzs+1rkPE3l0MHYEOQZvcpb+Ve40uhobZSp+cO83rLM+d
2iFybykWzPniR+tv4/wu9z7U2Jhi6Jbz9auaBn9ssnusEww9clEx+uRhxu/x
TDp4HlnxY81h/d5kDxajp9JPxyW7oBgaJaePVrm/GPrlPg3/cPH36Y8TkxUD
lu+kq/n36z/gXnxL9O6C9dwrzwPWdKT59xsryDte7EXii/olDX9CskeLoR8e
SfaQzwhvN+cPF0PDlMzvZgwdM9G1CT5X1nMjXnGN+4D74QaxR8lLzqTiai2F
f7HvqId1PWxd7LWteReLmeT8EfO7i33Ud0wvpJfR0y4RD3aTUvodleJ7QF/8
Ugy98UQx+v3j+r2c/5jsp2JogkudTzaH3GLieqwYuqyn8SfFg7vM/Cn6PxdD
w6BlFhejj9Pb/zTnZ2v62fyf5HpSzFPiFzt/Up/4Ca79nuyPYugHuH71GX8r
hl5iPk2fGJoEPfK04xL9E/RPFHO5PNPEsc9S8U/rP1MMHfOHz3WFtS2R72Rz
ept/svhp8l3hWUyXgz5aJ51x3VJgwD5bjH5KX30l2b/JVhVDOzzne++j/7zz
v4uhadAzfzmf6fn/pf+cuGfFgEUL/SMWzCzn7PlCMTTNMnn+lGuW61fpXymm
r5zLxPYT38fzeNb4i66tWQotMdfnq+qjOfr/6TOukXKXF0PTvOTYX7+/nC+Z
O1u+OeLgBzuwuFpPvez51rEGauknT3/XXvb8l+sPlG9NOXl3V8vxqu/sFeO8
T7TBRmlsWIoeRM5rxdAcg/XRHvVKoSfWKoXhg0WDvFkMTbJOKe6aG+ReS/5X
5RokF5yvJ3tDPDpo7VLgwa4rD/M35K/mnS4WHXWddV3vuLb+2vKcKfatYuiG
d5KtSPa2PnplnvutVwqf8SZzWB+qP1SeofK+JfbGGvz6YhnRPDfJ8Y77o2WI
b1AKu9ncW4zVL4XOGWad3G3cadxt7xZjbYXndobnABbcfHOGm4dW+DDZR8k2
LIVWaVAKvXKrMfQMWuZ9x/f0h+uPEEM+/LeJ43v5oBh48j9wL/QK3xE9fIH1
vCffSHPONX+k+Nv8/shvJBYO9NHtxu5wbFwKjYEe+bQYmupcn/HjYugWYuST
u9D4J64Ra2KcM2vguRFDAxFf5Hn3FDtK/o3NIfcu5/Sxz4pR06fu8Yn1kbOJ
PQ7/TjGjzSEf7Bjx+J87H6NPH/8i2f+SdSyF7kALbabPuHkpcsaZN04cPv15
ZTF6LjoEPfKV65+bAwecm8oJHzppy1LomS1KgftS7AOubVUK/37n4LYQSz0X
WMsXYi/QvrQOsHCgc9AYmVLoiK+TfVMMbXSRPtpmm1Jolq1LYfhgty9FP1oq
9kLr3Mq8B41f5NoEOb9N9p1nNNH9s9bwnbFqzsqavAnGqfkh63rYEY5jkh1b
ir65hWfImeRKoYvYY5HzvH5e/cJY0P+hGJrpe9/fSn20RrkUeuMS14jD86i8
6CHuDriOStatFBqmVAosHN1LoW+6uY5fzQF/kbXA85hxdFXRc2Ivzqqqk+BD
O6BJeia/aSk0R0Uf7cG8R/KPLoWW+cU5PthjPLfFPiPYX+TuId/iGs5t5eXd
o322s4aevgdi5BDnO1lqzhLjrFMLNf8q7jdj5O/gt0W/2rMU922/UvSaU0uh
M9AbvUqhW9AOzUoxgsVHg6A7TiiFrkB3NC8FBizfCrGdShF/RuyzrpHDmTxv
zjK54DxefuYnJtuxFHnUsqM1NbNO9jtOn/Fv8fDgox/QJruWQj+gUfh3951L
oTeoHX8X5yeZg4Zhb+b4aDj+zqqF+P/M/de8VfK84DnABSd7tyhFHdSA/7J1
UQ9cvbU+pdA3g0vRNweJh6daf29zOIedPBee+3ifHf7d3AN9gibaPc33KMUc
Hw3TtxQ6Bv8U54x1rAOtwTfR35w6rsMHf5XzNfd53W+ppdh64luVoq+3dHxd
H+ye4vv63a3lWE8fLDoHHDrktFLoir1LoT3QLwNKoVPQVAP1B1hDf+Nomr3S
2Npz2c3n6ONzrek+e5nLncBdwr1ADXu5vp78A61lUE09+1hTf/dfx/UNzFmv
Bkfd7NNa7Nv6/PmPe437Ci440UUr9PdN1qYU+qPqo0OYn578M0rR+9EAp+vT
q+nPw0uhR84shQ6p73d2unwrajj3kxc9gw5qK3aI+P1LoXlYx//AHDBgwVDL
htYwRP8MeTY0BvYAuQ5M40Gl0BBnlUIXDS2FtsEnhm5Bs7QrxQgWn/40JtlY
6xvqM35oDrlD5WkoJ3zDkp3t+TRxb2pAw1TXmnh2GztvLI74gdbUTh/8x54Z
59BWLjjbl0ILMcc/N9moUvTSg0uhW1jH7+D8nFLoGDTMiFLMN/WdjtA/WN72
YsCif0aKBYOGGemenUqhXTrKM1yuzV3fQn8zMf+Ts6NYdA54/EOcY/jok/NL
oRm29vm2lHMr/fPMI7+zcWKjS6FnWCOOPkGPHJb8Q10jfrhrh4nb0n3IQf9U
dVaXUuDHWM/57jXa2r41p8rfRfxoc7f2u9rGb4v/jRX/jTH/jXDGbw29wD1M
L5pSCi1zRCl0ywWl0CzjtJz5E0pxv6BD+K0/VAqdwnMdIccE179xn3FiD3ed
52cdzXKhhl+Qv+we6C7qGK+fc/69dXYthR5j3tW8C+VBlzxaCs1wcSl0yaRk
D5dCt1DzI/rE0C4TzSnrE+MbRYfz54WmxiZZ50RzH5Kjm/t2l5v9F1kDY8+a
erYtrdZKl5RC/3Cncd8OlqfKcbE523oO433GI31+nv0x+dkHjfV4KXQK4xP6
k5NdVgodM9lxe439L002tRR9eUdztjd+jHtU+XrJSe9+MtliseCmOH+qFH39
OOfHm9tLjh2sp5l2mVhwJ5h/RbLppdAQS0uhN9AtaJTLk00rhW5prj/VOM+A
rlmS7Gnr7+kzbOd5XmrOCeYdZ21POj/BWq5wj2nWQT3omWesZ6n7XW4du5oz
Q+wu4k+0lpMcl+q3EEP+TOf4f5VTPZVUV7Jn0/y5UvR8xlP00QJXlkLPzNQn
dm0pevM1ya5KNrsUemWm6+yBFntWnuflhBs9s6wUWuYqceidF0qhiU51/QX9
qvZ63jqoYZaY3fWvco7/ojzgXy6FrlheCq2CtpqTbK5zfDTJS6XQJf3FM59f
it50oDXOFt9f/hedz67h3Ete9MrVns9p1vCy61eXVmub1ubMNb6Xey+3nuVi
8Vcke7cUfbav57FM/ldKoadeLcXvG/81fWJol+uSXV8KrXSdsWudUws9+cZS
9OVrzdlH7lflPF1OuF9P9kYpdMsNYuF4sxT65Q1tiDmn1+DauP/1Ytvon+Y5
seeZYuFDU6BJ3kl2Uym00Tz9A5y/leztUmiZM50PFbvCc2trnfPMedO8/V2r
ct4sL+8e/XKLPO/I1c4c4vPNu0XMza6/bc1DxZ1ljPxbS/Ft0WfuL8Ud+2Up
+s8XpdAcaI/3SqFh0C+3Od6qjx5Bg3xYCr2BBrlDDNh3jd1u/CCx7V0b7pl0
MKejXHB+ID/zj5ItMO9g/YOtYYT7va/PeI74kfroB7TJXaXQD+iST5ItLIXO
6aR/p/OPzRnl3h/r3y3HJuXAn+faueaNkqeTz3uInJ3FHioev4vz0dbyqfZZ
KfQNfTFXjn7XWZ5q/Z+as8Bz6+Bzf+Dzwn+Pe6BJ0FD3JrvPOT665X+l0C74
nztnHGMd9GG+ia/MGeP6YfJXOY+Ql2+Ib+kBsReIf7AUvfwBx67695l/hHt/
YT1fiB3n3l+XQvdky6EZMuXQKN8lW5ns21JosS7l0CrblEOvjBd/oTnomQme
yz0+x2c+1/nmTJCLO4G7pI37XyQP3Bn5eUePWBcaZpL1fGP+1+awnhNH/sPu
9Z01TdSf5Ls9KOW1L8d9xV3F3fV9KXp6VSv9UIr+fqn+j6XQLvT/QjkMP5/G
7ZJtX45+XC5H/y+VY42cRfL/IPdkeeH8KdnPpdAuJbFomynGf3HtZ2M/ia/W
Qx3FcviMTziW9KeKgwctgQb5vRR6qlIOfcLYVP/XZL+VQov86ghHi3Lc28vF
Pumz/ur6L8aJVfnQQHCiVbb1nP6wjt+NL3ENfzvPcFuxcFxuPdO038TSS+uU
o7f+5BlxLvD/WVqtn/D/KoVumaGPZtkhYZuVw3/GOe8Qnxrou/TfncqxRpz1
6XLC9be8cKJZ/imFPgEDdsdy6BZi/zr+o/+3mJnWQy3POe6o/4fPwXmtKgUX
2DXLoSfWSGPzZDuXQwsxolnw0Sz/lUK3rNKfLZZzu9pn3EmOVa5fZby5nLvI
CTe6ZddyfANrykEdL5m3q9bCHOIvujbHGtaw9jn6u/ldgeGOpdfsV467l/6z
UfLXKodeqVsO3bB7OfQKPnjm65TjTlm7HL/pluXQJuCuEUt8z3KsgX1Z/DV+
S9Wc18yD73o54UdXENujHDmvWsse1kOd17knfr3yak2GDw9apHU5dML65dAi
66WxVTm0CjXvpU8MvbJuOXJu1CfGPUZfO0iOefJQ57rmtpQXTvZ9U27239sa
GNEu1XrQNlV9tEE5NE/Ou2yRPFUO8jcQs6dnsofPzPP+vxaVn33QVfuWQ5sw
ttFvkMYNy6FdGjjO19i/foo1LEcvXmDOfOMr3KPKx/cD5/t+R23FLvBbYr5/
OXo5OW319xPbxv2p5za/QfyNxKGXyG+S/I3LoRsOLMe7QKugSxqleeNyaBXm
ja2hkc+Aljkg+e2s/x2f4RbPnOci50Pz6B30pZXOiVNLE/dobB3Uc5ffxCfW
dbv1UMdd5mwiFsxC66GWjx0P1N+0HFqH/AXJOiQ7ONlmyUYm29w5moU+T89n
7V6x+MQ6lUOnoDvQI1uWQ5+0Fw92i3LE7xcL7m6/8/Y1OayjazqWgxfOQ+Rn
zhr7b24dm1lnB+tkv6oO66DfUZ7DyqEb0Dn4jPeUQ19R71bJ39o5Ptqnczl0
yFfWwZw/F9MvnpULvXKo+V+a94DnsJWYQ+VhX7TKt/qHO0cXjSmHxhlbDs2D
Ty/smcZj5GAveMaYRw59lZ56STnO8D7PB174+a66lkOf8K1dkPzx5fjN89u/
oMZn33HJupVDk/wkFtwR5dAeF5VDf+TMvcD1lTU5F5oHDxxH6XeXl/WCdYzX
pwb2OtJaMXy00P98n7zLSckuLod+uNhnx0eXoE8mlkO3oFl6lGNk3x6eBWdy
hLVnPceJYidY9wSf8WexcEwwh/hvvhfezyXWQC1HlyPO+tGOv+r/aj0V95uk
P8n6t/MdXlqOvjOrHPftqeW4b+k5xybrVQ6NMrm8WteAmax/fLITyqFFppZD
A+woFhy6Y0o51nZ030vFksM63xtaZYo5x8uHrmGEH63SzBou03awDvahTrTT
X/rHyQMH/hXl0A5oj5OSnVwODdHcmi8vh884zRx0zImO/+rz/wf2iv+fYCfJ
UV2nzhPl2Mlnbi4f+063BmrZVX+6HNSDhlnTsbdn87vnM03czq6fbE4zz2KK
z/qXz7ur3DOSzSyHNkEXXalPDI1ySrK+5dAspxjr43xNv4V+5dAbfcypU8Pb
wu9nN7n5jq6q+Zb6yTG7HH39Km1Pc3avwa3l/n3FrqXf0nw40CUDk51WDt2A
frg62YBy6JX++us6X9saiM9JNrccOmZXn6GFz7Wm59nSPHK4S370Pmnp/nPk
H+ge61tTtR5quaZmb/YdZN5pYgaKmWv9rcTtZYw7jTuKe+tH76Wj5Icb/YNG
oc9fVw4NQ58/3XGw/tnJhpejT6NN0CU3igF7bTm0yJBkZ5ZDLwyW41pz2GtD
czYSD88NcjKfl+wM8xroN7CGfd3ven3GNuL300c/oDuGWXMT/aHJziqH5rip
HHplf/e7Sf/ecvQ2eit96vNy3LFDxTXUNvIZ24rf35yGxtEqt5RDr5ztmTUx
frNr7azhZu0A62hknY21s6z/DM9tQ5/7Bp8XrvnuhR5BY92qz3hbsnPKoV1G
OG6iv7HvlDn9l957rvPh5twq53w54UOr3F6OvrZA3EixHV27Q7+D89vMPdh6
NrOWc8RuZj449NL55dA0o8uhQ+4qh44Yley8cmiULfW3Mr6FNdxZDi2z0HfK
+9ysEs9wkGe10JxO5hzuu7/DtU7ynmcN7H+3NcDXxfko69jCeRdzthZfrf8Q
6+rsCB/9iT+P82fqJ5L/ZDn6TS997l76/X3J7rfG+4x9XY7f9Ffl+D0/mOyh
cmiAC13/ohxa4X8aPt/zkeYf5bPfJ/dXYtE1D5RD07Avvf+RZI+WQzPB+6X+
OOefu8dYcUeIfcC92BO9gH74rhy6ooecD5dDq6Czvkn2bXm1nvlGn7uKe4Q7
hDuQ+2V9sd189m/lr2K/Ft/NZyVnkXs/aj0ry6F/vhP7rfHvXOvus/dwr0eM
UcNg6/jSs6ue25GewQWuEUef0HsfL4dm+SHZj/qXOP9en3qO9/0vFveYWHoz
PfpnMZeI62nOMa6R85McT8rzlLyL3Zv1ydbwo/4T1vq4fi/naIbfkv2ebGk5
9MrTxomhJ34th15Bq6BflpRDw/zi2lRrWOL6Smu/2PfS03ezyGfpaY2XWdsU
n+0X/V/kpJ6TrYla/rCep9zneNdOtOYTreFpn+ly65umT2y/bdKfw7dOf/be
erV25O/F4J4uPzrjn2T/lqPv0/OfTfacc3x0Af/eOVP/T+cz5PlT3DM12FPE
k/e3WPa50jk65vlky5LVqUS/X7MS9Vxp7t/6M+V8Xt5TxS9z/rzzF1wjji5Z
oxL6YZbPh85aVQ7dgv+fPjF0yYvJXiqHPnrR2Av6/eRYJXaOWDgGmAt2eTn0
zAD3X9MaXpDjVHNeNm+5uS/J+V8NjjMBS3+kv25QCQxYtBM99Z1kK8rRT9eu
RE99tRy/7Vf0Bzuvm9bXqsQddI3zqs87YD5I7ir2NfHg0C3Xuhd+vUr0dHTN
6/JcLdf1rlNTPbFwDJYTzBvlwL/uni+7L/Ehrq2XMOtXQlfAtY7PuG4ltBZz
9MuNxtAw6Je3HN/UH6J/phjy4Zknjn3eLgee/Lc9W7QL+3P+N1nbm/KdZc4w
888SP8+6b/Kd3SzH2eau8J2yVj9Zp0r0n45pfLccuoVc/PecN6iEjqH/g2mg
Fvgg2Yfl0B8bpVjDSmiUW8ybL8/Z7jtczhFi0S7vl0PbbCQWDvTOAnNGmjdC
LPkbWg91gL3V2G2OcI20NvQMGuSTcmiJj52jO9Aq7NWoEj5j40rksP6R47n6
58r5kbm3Wy9YcAsdm+h/7L7st3EldEsT1/HJQcfc6fpo8z8tR3/NpliuElpu
tPHqWbwvFtwmyT4rRx45W1Wij26Zxs0rod1GVkJjdKiEziCObrlXn5G8TSuh
z+52jk8MXMca7BaV1boKn73o1XxLnawJHDwPmLelGPLv95sjH84vxR0iD+NX
jp31M5XQDw/7jA+WV+ujrSuhT8hFt5D/kPFtkh1qnHXObRNrQ98QZ517gfvh
dfm3do9vXO+iHVYJnUM92Zqa2G8b19E/34rtUpP/sDmP+H55z/Qwehm98XCx
cByY7KBKfBOlSugQNAV9/4hK9H7Grvr5NBYq0fvzjov0GfmWVrpHFVfVTeSC
reoWxmIldM2RaTyqEjqBnr9dJep5wpzHxeIfKWdXseDQIPg/1HB1M940jdtW
Qk/AWa6s1lv4lUroEOb4aJbuaeyh/7NzDL+beLCL5X+qBgsOrXJ0JXQKPntT
w9Pi4aG2nuYc7X5Hi21qvU95HmA5kxaV6Km7VkJH/SYHPfXkZL2T7Zhsp0ro
hmPSeGwl3jvjn34DaJkdKqFntq+E/4w+I+/hd/Hk9xJ7rBjym7kX2gUfLcR/
L/a3PEt9jztay3PaszX5f5ZX/3dmx4v93Wc6xlhVK6FTdqmEloCPZ0QLoT0Y
m6f5zpWY46NnTqyEpsE/oRJz/H+cL5Onin1RPvJOEsu5oltOcm9q4PxPsLbj
Pf//zD1JHyycu8jLe3vJd7eG72pN3+nLrrdJ/n6V6EN9KqE1yDlFnxgaYrc0
7i5uN2P9KqFFTq3EHbNnJe4Z+Hczt7cccNaVE+6+4tAwe1QCW72n8Fu6Xs+c
ujU4dBT77y721RofDuZVnUSNaAc0ycBkA/TRLK0qoT9a6qNDmPc3jxx4+tf4
/Zy/Ya1V7F7iMXw0z0D3ggs9Q6y1a+Tg7+1aa+sEc1ol7rZHvd/WM7a+59DX
MwGLXgLP+iBz0ApohiGV0Cj7pHHfSugW5vhomcHJTtffwPlg/UFy7yNHG/FV
LDi0yhnu1cBviG+JPj5InvWtY0NzT3ckv40YeN8X27YSGok5/v7O8dEhZyUb
5jPCe6Y2tBK6hXz0DBhijWriB7jGue3j8zEnjv6hj9CnDpf/TLEfmdOuEv0L
DdTOeqiliXU1sg5y6G8fax/V5DeqeYazxTJurD9cn9gIzofzrIQWQge1T/7B
zvE3MW9T/eHO6c/3VKLn3lEJHdLRnI3Ng49e3F7MOfKcWwk9gya6XXxHY6Mq
oXnO1d9CXFVnjdQ/xxzmH1ZCa90uz5Ziz6uEbjg/2ZhK6KKFye7UZ0TbjK6E
btlKfyuxjyZbVIkettBnvMP1Lc05xHiV9y45OR/0z92V0DDbWMPdxu8y527P
8S7j1XrOt6at9cFfnOySSvTOcz0/nn9sJXRRVVuNq8TvOqd/QSW0C9/dfRr+
ve59r+/xwUpojQeMHW58rDxw5+WFc3yyCyuhYx4Qi4YpGr/ItQuNjRdfrYc6
7te/X+xYn4OzKomDB/2AHplUCS30UCV0B+PD+hOSTayEjpngWPLctpXjKOt8
0JyS/EcZq/J1lxMN80glvoWL5ZhkvLtrPVw/2nl3OcrWU9EmiuWb6mn+85Xo
O89VosdcmWxWJfQGWuPSSuiGx5I9rt/TOToE3TGlEnrjyWSLxV0ilngv1x4T
u8jzuMTcJ815Qr7L5JzqHlPcm/VjreFx/cnWeqn+DpXV+usy+dAeS5I9XQn9
gDaZZq1PVUJvMJ6gj3653Lyp+sROVuf1Vg9dLs9U13f0eRfLs0TOp6yB/U9y
XKp/hTVN059eCX1Dv7w62TViT5DvCtd39jx61ZzDZT433FXdhD55Jtmz+ozo
lZmV0DAt9BlnVEJLTde/qhKaY5bruxrvLX+V9zk56dt8S8+L210s8WWV0Dt9
XV8m7pSaeq60pt30dzfvBbFzK6Er0CMvJVteCe2BnppdCa3SUn+O9e9pLWga
tM2L1n2y57SLz7ura/3cj/uAO6Wr837W0Mo95ljP1dZELVX9dZU17Ona1b7P
ueLnWM+LPkd/R7DcUdxZ3FMvywn3afov679SCQ3C+Kr+tcmuq0Tvv9YRLUC/
pj/fkuyGSuiQNuawfo2cL9fwDZYTPfNastfFgrve+RuV1Zrndf3XxL7q/tSz
r3ad2DbOr5djiNi3K6Ed0BjooRuTzauEtmmrj2Z5M9lb+kOcf1WJe368dd7o
c75pzhvOb5TrJnnhRPvc7Bm9Yw1vm3NzZbU2utkzvMnY/tbwljW/JW6oZzLY
8xgm5zv6jCuSfVCJ/nmO83croYsYh+ujX26thIaZr3+Q/kG+22HiyX9P7Lti
yL8t2YJK6Cp8tND77jtfjluMfWD8YPHV/OFyf2jN5H1UCR3wof7HldA9/6tE
vx5rfJR56Ao0yyeOH+t/WgmNMVp/tPGvfJ9fGv/MPOJf+75HyQPfGHM+t4Yv
rGOc/gXiPzP3AuNfmj9W7FjXP3f/C8xZ6v1PH7jQGujdazWN31LdNH6bxu8q
0Wsn6tNzv3VOz/8p2c+VuK8v059iDuvfmMPaZGMXGb/Ifb9xjb73o/mT9afI
+Uuy7yvRZy/WqGWl43f637u2Ur4f5OFe/LMSd/4f+sR+rUTvq/bG3yrRv6bp
/27Ob65/og5Hj8NzRU3OVOucat2/uD7NnJnu/1eyvyvRF6qxP2vi/7jGfcZd
e401T5fvb3F/eR4/+Kzf618iHh56Fvf3f5XV9zzjGun9rtk05vhzzMFfVYl7
/99K3Gv1Umxt4//Jt8qRPHiulpvvh7vxWv16zm+Qa23nxJmDq9M0nhGeOk1X
awV8vsN1msZdB0eDpvE7r980fO4E5tx966b5esnWbxr32npib3Bf4tx7N1n3
LJ9xlmf1r2vzxF5rHXXdH37W4NlALmrY0DowfO4Z9l1X3G3GN2oadxPY+uI3
MMYz3OJzNWwadxz5/wdqmXZ0
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
zRS7qKwsp3WV1nNcXGXU7UXPdSn5POql8VkSHlBH47NzjO5msVTcoVD5h08F
vP/8qaNzutHKPwp60qWtg4tyfR2Uuzs9pJ5HXTbyPdYp968WBuWZK+yEpL1n
0ApTXyFlfreIXWaioCXzout224govnG1rdUnEe2x7/2w40AFjRh0eez+bBH9
nFitk1crpjU7tkjmWymofnXJ2oKPYkq8Pbeyc66UOoSbZU8cpiCpjutklb+k
tHniyoidn+V0reJy6QhSUGFW7N0tw+T0cHVKyuxkhmKGCC5W+7NUETtk5K4n
MtrX6DlqdjhDi+/YTDhyjoXXI1zBC3ryIHyujGaFts6atZyh/sNDGOcilpzs
Xrc/bC+n9y6qFbfvKvHTnGs5c5Yr7xNb9LBfg5wOPt3mYP+JofKnApWWSjyF
8NuCkT265p9hqUE2VhAWrLzvNvURg5X4DN1HXmLdfWo/Oc25p7sm+jpD+vVT
fCQbWQq65d27gS8n4y78H7veMDQnZOrjDv1Yymy37dYSLYZMvXwuz/nFUPdB
Dt5rOrK0XmLwNqROSm8GzTP96sCQxckOfjvbK+hrxOyeixyVuCtvaWDUIoau
fHh7dXoVS6KNHa5OipZQl0iNO4+VuHyzYlVbAyVeOrIh7qTBYgnVxxZl7t4i
oyv9Ep0qh+PvfbohlRxbJ6ThQf7zF2UK6XBOvXeSKb7+SaO2J7tBRC8fuA7Y
uEBMvSILOx5X4i6v3h3O6OYJqDTy7s4btwRksPRq39dKnG+sPrx3owOf3pWr
l3a049FqoddrYU+Mr+ac2R9sHlVHQ97OU499UkV7dE94Ug+GntTvfDXbr46u
3D7R3aF/Fe1y+3yhqFRO5c9zGp0zq2l/py1LVLJK6ZFlqN/OeCmlbasabb2m
iqwOjA+L3VJMHbOH5bukSej7GON4rSFVtO3+ioPeXYrJKzJvunuEhFTc1723
nVxJ/IHHH3o/LKBv49YG5g4XQxzVdn2mncfCcto3JpCXXfmMjr7VSbDhC8nZ
tuPFMcblZBT9VOHY5hlJs65b298RUv/qb2NPPCujDqbDW+zKfUJC1U6bSzYI
6Y3NL8NSvVIafsN+VpsvmWRe2Ud/8EQBPD8ifFUg6uab/qKYWrsn2xx4kUYb
/AsDf3ri+qAuJ8qrvxTRYMGDPeq/UkjXzb3oWi5en7niIlRH+xG6f1PhqL+L
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
qr+jqXhmdG5CucRc+5qRPojyQlEOM/LBIr8H6hNHOAr1T41wPmGqaCmg+a4a
18v9+OQ7b98w6quAde/0GfQqUEg0SctrVbGQZs4Uvv3wP+QtoH05vGRuw/Kb
Ygp7v0Ga6yalgGEbAh4NUVBxzacxGocl1OHlsnt3Hsvojte2zXUjFDQp7kSK
9JSUwgaOtl1pxtD78zsPGSn3ZZSTwDWf87O2s+56LwXl2qv5r8lkaXuXTsdn
t2EgT4VwF/K9Ix8XysUyKOXPaLFfRrMK9/qbbmVIIt6w90Ya1gcRbkR5oYiX
Qz723mefauR5i2nu4jdf1lZJqO+0/KjPNgq66jt8gHk3MZmXL27f10tCT30N
M80G4dwzhK9Q3wTSAVFuG/JfIb4XnV96RQ3r8DC8itQ+Dw7NvFFM3m4rO+S+
ksDrUZ4VqiMdEPk50XkQrWOIj0J5Moi3R7iLK15C+wLX+TVNpff9brz0p+3j
zfW/Fxf9bv6Kqy+La38u4rG56oZo/UHnPrQeovUT8VfIH4v0CKT3IXyF8kKR
Txjta2gfRL4axFMhX/TBLzcnz8lT4qjNjwWj7RhKnL7B4oCmghbeNu6WFiol
/fWxH5IMGVo77+1US+U+jnCIWvaMz+YxMkrfa3ybH8zQEnO1ZxdvsbSx5GUk
+xdD7rtHBOzuytJRlV99Z77DPBLKQ0D3SR0gt/IIYcij+KHBXEOWpt949zCt
koF5DnPE11I7lTD0OdliiAOxNCXHIf1YCgN96YiXQ/ojwl1oDo7My33MabmU
DDpfmzjLiaE3qcUHfqoqyO+cVb9PkWLa7GGmSBwqpXqdQ56jh+C5gRu+3pz4
eLSIruf0GGrXVkyTCzQmTxmIcxhQbi2qI3x1N03ikppaR/KMEW35g6ppqKNK
ubXy90P9g4gHRvm9Y7qcSNnX6jU1xhpfM/j5in5l3X5zJlUMc+2Q3xL1v6A6
WmeQPoj4dq65ylxz0bn6OhBOa6pchd+dQ9WMr5rrv6N/4Xc//1zPKVznh6J+
ZLQuoXUP4Sjks0J6AcqFRj7bBuNyz/e9a0h7wlhP74VllPXWyPitVAr3kQtb
DI32NfJo4UA3wZjcOpoU6lPdrzXuw0L5QvW7H8+xthaSZvp+v16zhNTCb6RW
fxMFtX6sv6hfvZB2DD/kJA0T0Wepz+qdZpinQnOBkd6EfNpoPiDqy0N+cpTP
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
GfX0WU9v949q30HfR9X9XzpnqC+juSHx8+RzpZr7THqt+tlGF/r0/rncNqxY
7bQ3Uo4H9IseOpj17ZTjHFz2t6tJ25Ik6tUKc6JbojTJ7urfeo4Z963qtljn
bsmcLH072x2J9tfI0D6LaktZ9oEkvTrNB0n/QzqrpQHznfJlN8ol56p55+4y
iWZeWs4Jc3nfjeaG5HNFuYHEX2XVhY9zKmiUV5kCKyXvNUnIgXNu/8w0o087
8U6k+yK/LMorJF5uXZsSu4usteLPI9ErggNN/+1zwfqrlEl5DrbaopNCG+1O
X40yyBTL6JxOVnw7b3r0gy359dJx/sJt9RYaxXHmm/nH6lukd86SZ88uS5Vx
K4Jf7nTWS6VFmx5+qWG9ftWNsG+/p8ipFRertyieKnZ9sj1bVsmCvmq0l0r7
FKr+oh8Cq57eOj1RZpcK/q1/71iJfemR3NpsRP0V+TOQ3y/tp5AegPgr4rFp
Dkg6K+ofVfMsCI+p9rPEU9mK1/pZ+33p7TmbUf934y5b6d5VfVFU94hVffOI
bydfGsJddA7TuU1+O+Q7Tf4MlMtGemCa15BOhvJupm78bJr8KkWKThxv98VN
J0EXfi8xpCr7tNPznfwwKZfQP/fykVPaGaT8/tM7Pg4xWf+ec3fvPzXjPiDp
msg/gfix9rlKeGdrYsV9nvOO+A40y8Imr0okzuE5IOEx4tno55K/FuEr2ruk
/UHyHyN9O/m3034E+dbSngXdz6tfVG7RSJ8gsaM8vXyDYuRx6O8XcnsYcb+D
/BmIN+7ZZ+a4nZ1ipauz36JZzR7LSa8syx9b+wnSXxG+auGdb09D12hx2XLb
0jTHHdFfO1K10WmeD1K/RucS4SLqK1X1Fao8lWpeoepeoa30vT/6uZmBx/7d
9Z81B1TlqVT3B+l8oPOE+jXiqchHlPgo2gMivSvtK5XcXDvP5eWxkvddjeAI
6+/b329Unpt/67C/vpU2+++u/olyIGxdEd8KsTLX793uyCdGrNP+IPEMNAck
fwbaF6P5YDOHuW5HE3Xi3fP1vry+RsnfzPWPgz6c70w5OJQXQ/t6tA9IOIdy
BilnJ0fUqDILg8zS6w+/aWMmmSWnQ2hMxDCT7M6ZKzAt9wvxSqp1asdns9Tq
O+X4nLNG5KPIR4J06cRTnW5VpEB7L70MNkxd3yfcKAMrPfCaYL1+6Ydjrbvd
08v8KVeTG/iYJLTjhMpL7C0yznfKtYNtdaLNN/9mQFeDOOe45dm1Ds9/KU+Q
fNrJb4182id+3KKNep8oHQamfeqXM16WbYy+V8T6OVEeAfUdlIND/DDl4xC+
ovOB5oZ0Pc0B6bxS1T8Q72QrfwZ6fVX89rNwTgYu+nfXf5XP11Z9hKpOXjXv
hq4nvp3OJfJ1J98G1fmgKn9F+l6XLGfed5qZJB9++z1hZkqCrIs597p7d7Os
7RzaLLBTkox4FqQv1yxB1jg6+rwoZsa9LcprPtMv2+ujI1Lk9qsjniPbpUr3
vAmBnf+HvDnKzSEcRf6ixDsRLiLdO83dyPeA5n2093dhR3gOu4tmWTmjUsvt
i80yJ2XEht1t2XedfEFpvvnoWsiZqbWtv/+YU6e6njTJ9prJe+ICzMhfEY6i
vc6H9Q9t6x6fKttLF0h4H6KX2WObHLxZi/nJx2+SXcb8pZVR0VvaXOuYIod8
lty5VJHngLRPMbHgdi/nqRqxf9jyTou1SdLoSNnNnlb8T/uwNDckHTvpr4in
ou+j89VDH8edeCaNGqduCR7xQFr6DWkz7C/Wt9MckPYHCV8Rf6WaS0h4jPAP
9a2qPleq/bit9Fq2en79X3u+Z9T/M3VbzftUv0eq+YN0bqjuD5L+gfAV8Vd0
rpKvDvFX9FygPp321qlOfo/m1Mmnp0xPln35q6zuWTNZ7s7M0syuvEUmfDzW
8mqDFDlyo2gtn5yp0vqhXeu2lZjfoPkg8Vrk40T7caT3HhwSebn8e6MsvT3d
t9Fbk0TfTs6S2ZFxGvl51vHvf1S73CI3li53bBJplnqXM9W8/NIo74q1cPyz
t0VuNsobMDbCipMKFVjbNQfjK8Jp9DqExyjXhnAp6dPIP5/0dfT5FvsWGOAQ
miJpYStKh51PFfOA1ffjvNinnfYEH+d5ZP2nkYdJ//UvUXY4brH+Y/6K9Ffv
XaN7vSoVL8V+b9yr/4Cncu2li+tLvV6i79743CIiThYXmDo4y7UncsUr2H/2
Pta3U24C+dQR7qI+i/AV9X10XtE8ka5X9U9Q9cmh11HVvdvKzyq9+Wxn1P/d
dVv5M9hqj0N1vq86B6TriQ+nvo9yvuicpDrtH9H8Ytq5lVGtQ2MlpbfTLE3K
YznzMqR5Q50OcwZJf0K8FumyaP+L9MzbA/z77b2QKksvlkyNHKmXujeGZcta
i3VWtCdIfk2q+iLyHW1Rcf7Jj8et/z0kwa3xArNcj9gxuWInnuuRfwL5bjVs
/bbaSys+XVXMe0fjI2bJ1KjD0/HleK+Q+DfyeSDej/KaqX4rpeKkRXX1MjKs
3NoRj4zidiHiwukGvD9I/u10PxDPiXmXkD9IvBbxt5TLTPqrTQ67ar/LEydj
Nhgn+QZHyfnQxt8PuunRn4HyrcinnXSbdD4QHqO9QsJRdL5RneZ6xFOp7h+p
4qsfnRtoK74rvT2vM+r/jrqteF1VnaSqbpPqxGsRjlLNdyYfUep/Se9B/u1U
b9ao/z9jumvkm3/3v537WvFU5mZvh5RkHkBVh0z+ouSLRftoD9vc09z8ppcF
N1sss2tjklGZht1/89ls/e+TPzeK0EvnrX9eSfI2SZrXoQL2Rdkvi/b7SL9E
/BXt8RHuon1AVX9Ryjcknyt6H8gPn/wZ0nxeROyeasVd6zv//YcV/4X5uFQJ
q8X7C5T3TXNk8h1tqTm40j1/sgwpc+qgNkgjHi9mXAsqaxHtrtTx+Yto5Mmh
CQmxrxNl0P7le+MdWd9O+Ip8RCnfmeaDxDOTHp583feC7p32YmgPmnxgSBeh
ug+omndjK38GW/FRP9ovK0PflVH/T+qpVK+3FW+suidI5w/1a6r+DFSnvSHa
HySfK5pr0P5Ujr171hxwSZK4rWf+ubInXlb4TZ4zK9ok8/aHbegzVyPFNqXd
7LwvSbLVL1zBv5RFVi1eMX32Dq10PJSj6+o81udH5strz1SwiP/p0rm6PE2W
uEG9Z164niwp77ceLunC+2KUq/I4/m1Du5U6yfNg+NnTVw1yuvf0KYl1LZL4
NDz3GkOq7DOciM16Ui/NM3t7567NuTmUS0h6pAPvLX+sqmDFP0WyvrDPYZa1
E5/sGJrVjHiGdOxVlz+oFPPdIp+zGVY1+WCWifWPrsx9yYj4ivYWKX+H/Etp
D5F4ueorc3V3OKKXlynPprlVM8loY9EHJcoyviW/C9JZkT8D+cqmzbvarWpV
rdhfWuxfsotWMvnXc6jgxvp28r+luTblEdR4GDntxO0EyZxdqjm1ipHpjoUD
lzsYUcdOvg30PSXcRd934qlorqfqz6CqI6X6j/YdVdWBqPo2ZPBRGfX/5OeV
3nC16l4h1VX3i1V5cuofCXeRHpV078RTUT4O6XUpx5nybR3GOZ+4XFsjpvxD
ozNVTJIjf4xou7ME57uR7+iiGnZdTn5NkdK+jgVy1dWJb6v6+/b9DznOlKvi
ktSzU507OvG4sffw61JGmecu9dyteIzyXyinuFbQyWzTy5jEr+7JuyezmOVJ
53yzLDl5f5BwF12fq3WTt/XPWmT195s7zySapU7LCmEH44zol0VzPeLBKJ+a
8n3oelU/fPLBoH1DwlHDM+lmNtCliP2hv+zTHHRysVKXpS5VWadX6ILZc19z
rZTuHD2sxhStBC9y8jpkxV10fz4p+jF0QBFrP1Dr7psdY+Kl3vXGzXNfNWH+
JvmLki6L5oaEr0hnRX4LhLuoTnNA4tXpXKLribenPlQ1v0zV/4pwEb2+reaA
P9rX/VfBCent98yo/+/mg6r3uWpfQ3yUKn9OezrUJ9LeEOneybeZ9FfEX1Gf
TnMTynHbGxc36slmjbhU9bk68l6SLPL77PtPKYuEhZ/r8Ml63vf17djxUOUU
cS2z52i9ipwr9+F2l01b16dIculm5Tevsz6Hmx0+4efF+Ipy7pyeaDplWmyQ
Lo8WBrhPM4kudcLCoxc4N5D2/sjPinyr3u4Y0+SKi1mWr9vS3MPPLK1iV13w
X2mS1Y/z7nILtUi/8lNm9ogzy2S3PquraIyop6K9P/q7KGeH9hyJr6P8QeL9
yB+D9FdtR+VsN2NOqoy6kfDPOnu9DP+yt/H5GoyjVH1Hyf+KfBsoH4r4W/q+
kK8v1SmXMM8sQ5LF/6m8PL7P/sb8m5LUZFTEsFpazMkiHEV9GeUyq/oqU19J
16vq4aluqzmgrfBVhi49o54ecKwqjrLV69hqn4Wup31AwlGkO6W+lXTslJtD
+g3qr+l5Qbp38nUn/3bKxyG/BfLFIj8ler4TT0X8DPFOmvdbVzVZaZTFXuNM
WyJN0tP/27Wqzfn6YcUPrHnqZZZr40zD5vcyS57vvWINSxh3ES4inRVdT/p5
mgMSvjra+0AW40zr+/vOp83dSdaff+3Q8JpXzLhHMP36yTHLxujl3IUcoR9K
meR18R52depZP/c68VNy+qdK3yqr3wW+0ElyfHgF7xo8Fyb/q+xXyw0sn6aV
mXWWNdPPT5F3+iFjZnvwfUU4n/hVmo/Tvu250Sc3bBscJ98ijweEOD+RiwHa
U0WH6iU+pXCzkc+ey8ugXeuyjI2UnjEem1621+H+oNOp4M6avTESMLT3qYje
f8uXbIVrV5/Cvlikeyfem3RWpGMnPorON1vpKH70XO9H71X9aD18Bo+UUf9P
4jRV/SHhIlWdgOp5QvoH4uGpbyV9O9XpPCf+inS5mHsL++/kz0D6K/I1ohw6
mhuSbwP5sd8KqNP34igrTqi/I1ehsSbZP6OYh9xhHwaqk86K9E6k1yJ/LdLP
E69Ffuykz6fcQ3rfyO+C/EgJjxEPSbxlouXIi7cuWsn7OnW0XROt+CQ0n69z
tUi5LpnXJXfUinOZGUMaWnFGC8ciFyzW++dhp41zzjlqJZt7o3HZqmllUvvO
n3dbr6c5IOWY09yc9O3EG5MPMPFXvqUv9ShVMEYq9zx/3emPh9LaMVf2qAKp
yFfTfJD6ODp/iL8ivktVT6U6ByQ9vCru+lnzvl8dL6W33+dXr/8snZWt/N9s
leNM54CqLxbx9qr+oqSDJZ6K9sFn3Dw7Jf7ccylS7PRGjU+k5Gj6rteEejqp
FfepXNOoeKl+KbKlU0i03AkYsubGMAPOTci/nfbfCUeRLzfpc4jfIJ6K/Mlr
5E6ofDvVIC7Lm+/y32iSnWVW7su22oz5y7QPSPwS6aZQrw46LuLZyIeB/OQJ
vxGfRvp2mksSf1Vq2227e/1TpfugFx/GxeqkbPv7m99Z8XDmfMa4vJl0cjLw
+9MSz/Ryr3SZjotrW2Rdpeel6/6RIhd6Dqja2SNVHlneD/q7kkWaeYzPV6hU
imwe5Fq/2N/W+9651u4FnjxfnnLU8DCmcrJMCdq7K9dpjYzf2H1EUyvOp9xM
8n8bfD1zP+8m1n5r9CpT5kIJIsHab+Otn4u3sdzNJ4lxMmji0AFOH59I0evn
Dn65qJfS+3uHtt/8XHxCb2+JyBkpoaHhZb+6ML4iHEW4i/aOSfdOfBfhK1X9
lepeIeEl1TmCaj6OrXIGbZX7/LP0yekNb2TU/3e69x99f6r2Eap9E+neVf3e
CUfRnqCqPzP5t9M5P+XwiCrnd8bJ8d1LhmmWPpERG9tVzbPKiku88815USVB
rnzY1GhWo2dy3ytXm2oHDOjTTvVDM9wKLmmfLEuT1m/xtGjkUrMa9nmcLNJ2
9tvqCeHJ8vCB/dxdO5Kld8zpVRucLdLRWaLWjNdKnaCAvgMjtLLyRlr/4+78
PCVfrHVFLXWeFdNL905VtjS34ou4gnqH1/Ut6H9FOIHyoFXzBwkvUb1K8Y9d
XW+a5brf1JFfl5mlca5aZ8u2NInlavyVU1bcdy3/u3CPQLPM9WvseLavCf1L
qU6+XpQHRO8DzQ3JH4P8slTzB6/5PThf86pWhuT/0O5MwxTRH95Qf3pFC/qq
Eb4i/3bSvROv9fjYpGMuBxPEbXOHmlmKxIhrcHyjopmMuFdCfr803yfcRf4t
xHuT/pP6OMJXhKNU8ZJqP6uag6Oa36GaV/ijfSHSG3+SUf/P4CVb4Rxb4S7V
vV26nr7vVFfN51Ld0yF9O+WOUe4G9b+UPxjWZUi7ae0SZEO/BQ1CJjyT8tfr
Lzx42YD7U/TcGfznouv6AI3kzb77ns+cJJlRplJBU0nWyWiXflh26JlWxu9s
3OrhwBQJuBvUNZMH67JIx95/3yC/0Y11EttIc3tAU4P0nfh4m0Md9sWifUPa
gyN+jHRWpJPPdyJTyOpCZqmYkDnrmE5mubf2+7RJm9iPnfYZ6edSnXIJiZcj
31HCq5TLQ75Y9zb3/xZSMVW8/Y9l856lk/Zz88Yeqca+o7RnSvuDNDckHwbC
XaQ/JF6XcBTprAhfkd6S+izq1+g8IV6dzjHySVb1D6Tzk/CVqg+DrXJAVJ87
P/p5/X9tLplR/7l11e+Lqu6RzgfiqUifQHw+6RyoP6Vzkvgr0l9tcbobO69I
rOzsGLjCNzZScmVf56CZqkN9L+lPKPeZ/B5Jf0X+opSfQvzVW/syDvP26aTo
oFNhD3QGqT9t4OoB9RgvEX9FflnEU9FeIc3vyJ+KXp/8RUkPRvO+T7kq/1N0
hlFcJz7dk3zPJPHuw4PrteecIKr7Bw32rTzfKN07/ZdBl0m2tKqx+1Qr83/7
3+vFKcJt25yaJqmSX/NibQnOJSRcTfNf0t2Rny3pAIl3Jd07zQ3Jj5f822me
qOrrPnhVqVzGmdHSwN7vefamd8U4p53h0Hvmt1XzuWgfh843Og9V/ZltxV/Z
Kk/NVnOWX123k1FPn3Vb3Q+q/Ygq/qfvO/VH1N9RX6aqI6X8C9KvEr4iXRb1
1/QcmbC9yaIK6+MlyPyhvaZ2tJRu+sXxcQMD5uN8TGgS9P2xRpq5Tz69z1Uj
PZwvZq1TxiLLTM1j71mSxfh5/7THhmQZ6TD35jYX1i1TLnD4znU1S0emysZO
Q5NMy/USnty+9FxrPXfb6WUnD9HLvMQzizc5mqTG++VpF4X17ar7hjRfI96G
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
BzoPyV+UcFdstGV7zP1YuXSzYGCWElFSIDh6ztkvOszNIb8g0g+Tnzbl5pAP
POXplGv42/FZRXQS4dAqsvpXvXTyyTGyoDfzWpcdH+b8vlMv53Mv9rtT2STH
b7YJ3W79ueSTSXk3hJcI/xTJNfxTx+dm8fit6LHTa80S0ebOhyKNOK+ZdOmk
mzrgf82jeX/rzw0f7eDnb8U3h9pP7TDRhLoy2luk/UTyWSVdFvGEVCd9+4kD
90ZumKqTb95lLm3bZpAqjdb27VWX+cxqaQ6Zy/TWiqex/KDWW7WSb3/u373c
2SeEcBfxtOTbQHXyKaW5IeEr1Zxo4rVoX4b6O9p3pvNN1efBVjk7qr6Iqn36
j87N+dX3EzPqP7duq70MW92HtsoPJbxEdVV9KfH2dH6Svp1youtnG13o0/vn
ctuwYrXT3kg5HtAveuhgnhvSHjrlPpOOhfJN6DlIeCm21sSh8TVTRep0zdJk
tU7sHb4PTavGuXjk11Qx7M8neUoZxKlntXduXU1yaOhNz8EvrDgloE7fi6MM
cqH+jlyFxppk/4xiHnKH/aDIz4FwS4uK809+PG7FKSEJbo0XmOV6xI7JFTux
vzrVSSdPPBjhRtJZ0d9L7xvl7NAe6J86p5dzEvXyolof94++Jqm8Po//7NxW
vL2m0k23WSnyZP4ntznjUiXR/caGp5W5Trp32qdItBx58dZFK3lfp462a6IV
n4Tm83WurNeivQ/6XpD/FfmXEr6iOvk5zEnKeT3zo2fyrvCVddejHsj2l5sX
apLZz4F4LcJLqnvThItU97UJd9F5rppv+KN1UKqvnzE3/LXqPwv3qu5Z2Oo+
pNcnHEX7Kap7LnT+0PlAeTqkR6U+lHJj6Rym+QXxWuTPQLoU8in1mxb+ZUCx
ZBll7LE/baVGXkwb2yGiLPty03yQcnMODq1T0bNwqnhGD8pdtrdObg91jvCo
xrp30mkTnlkaMN8pX3ajXHKumnfuLpNo5qXlnDCX8RXpmtrnKuGdrYkVp3jO
O+I70CwLm7wqkTjHJDmiRpVZGGSWXn/4TRtjxTc5HUJjIoaZ8HryT6B8HPJj
Jz6N+Ct6P2k+Sz4Y5Ef6sP6hbd3jU2V76QIJ70P0Mntsk4M3rThy382X8//s
myIRbrm9+tZPlbXTTK/sK3M+DvFalBNN827St9N9Trk5hMfiUwo3G/nsubwM
2rUuy9hI6Rnjsellex3qKgl3UT6O6h4N6RmIVye/d7peVXehupekyl/R/NFW
epX0loeSUf+16ukNv6nOBwl3EV4i3EX8Ob0O8VpUp3OSeC3yZ6DznPTwlL9G
uhTSa3V5PqHH4YEayVb3+19VxibJ+eV1Zu0vyfNE8pMk/RXppYnXouc76YuI
t9kXVDQoIc0g3UauuXF3i0kG+va8FbhMPZeQcqJjl2tSLXXM8r5dncUpfc1y
p5z7l4ELeG5IvliEoyhPh/RX5ONK+Ip8NginzYpdWlnXXSeGp5WuT7XiEt3q
82fXWz/fW5+L9TJPSJEHFztXnNQvVUpufJRvbWXWX5Hf+/AiUYO3lU+W8Scz
7/2yy/p9zjs4Pqv1fns3No99fut9WeZgD02/owni2zT4VGJjs6Q08F8acClJ
QnsEGjL1SpR/vFboG1hxKd3/5N+7yWFX7Xd54mTMBuMk3+AoOR/a+PtBNz3y
yeRfRzwVzQ33Qh401Wnvhngq2jekPlR13kf4R1Vnpeovqvrc+Vm4KGOv8N9d
/9E+oqrzR9U5oGoOqapvA/WDpCMl3n7Y9iaHpy55KjvnzM6X4/VN8Y4J+a5p
pcXzlva+Sd9Oc43TA5a+yd8jXu47lu4acv+pjHFcsT3pN4PcSO7peaN/kjTz
9U9pNDVBzKHtJg+pbJbdU51dFn1OkgGV/JIb3kyUVsFD4spnZ98G0r2T7yjx
GIS7oj36DHq0TC+dO6Q52LmbpNqsswEHrM9f4n/I1538S8nXnfDMyl41/xo3
wSwek/P5Ff7TLC1eac8192e/BZrrkQ8D7TkS/0a4jnAmvQ7hLnod0tFdyNJ2
9ZAyqVJ9Z96cnqN1svh90XajrDh56sbPpsmvUqToxPF2X9x0EnTh9xJDqlqk
XJfM65I7asW5zIwhDa39RgvHIhcsbqz3o/kg+eU27XW7+9fYJFl4bWRq2ZWJ
stXvS/+qMWZxL5iwOWVxovSaO9Zu1qpYqR7cr+yNzJxjSPuAtFdIeYX0OtRP
UZ4p8eGkTyC/PuKdyJeG+lPVPB0656lO57zqXmF6wycZ88R/d/1n3W+qc0ZV
3KXqr0L8FfHn1A/S9eTPQPiK+lPye6c8NdKf0D4U4SuaDxKfQPqr/NlP7lne
NVU6bWzxecgdnfS68qzgyepcJx018VrbPI64lXP7L7/VoGLBfiYZuWhF6yQD
+5FSzjLhHNKlE99FedCEx2g+SHuCNA8ln1LyByPeifwZVPOgtwf499t7IVWW
XiyZGjlSL3VvDMuWtRbvn5KvGun9aD5Y9Llv8RbPEmXLSofMTlviRBMwqqPz
KJ4P0jzd21ju5pPEOBk0cegAp49PpOj1cwe/XGR9I+ElynMnHSb5Zanqr+hc
Us21p7kh4Sjiu2hOp8qPqfJOtsrJ/Vn8UoYP6q9VT2/3g6rukfoaVb0W8eR0
zhAeo70e4q9oLjD3ReXhq+Kipds8463rs++JpUna9mLerHuneQTNNQiPke6d
/N6Jv6I8lGLfAgMcQlMkLWxF6bDzqWIesPp+nJdFTrcqUqC9l14GG6au7xNu
lIGVHnhNaMD6arqefAboepc2ZyuEXTPKkmkf1gZoTeJY8p8BG6qYkV9CXBQV
FL3lnFH8th8Yb59kEr+Prk1K1zRLl4CnWr/NRgnPeyX/5ycmKbnilvaQ9f9T
1WtRPg7hK/J/yKoLH+dU0Iq7MgVWSt5rxYUHzrn9M5Nx17qiljrPiumle6cq
W5pb/464gnqH11YcRXXyMaNcQsq1TJt3tVvVqlqxv7TYv2QXrWTyr+dQwc0i
gR2qj12hSRZtlWyBt54my765K+v2duE8Hdor7LZ18SzPzYlS82Wf/CG3YmWB
47peUtQk8yrVHTruYKIU7NYmT8TXWEkIvbfxjKcJ+xTyyyI8pqqHJ9xF+Ip4
J9LJ07lHfBSdw6SnorkAXa/qr6Xql/Wr+Ldn+FH8O+rp7X6wle5d1WeYeG/C
V3Q9nW+0b0j8P/nkEN/l19Hvr0It4sR5xPWxs15GydCYI5O3dtRjXi3NR6iv
p7347M8K/j7HUyNa34iYN0WTxHRj4pV+JdhHq261/Y0XX0+Rby3jit9LSJWx
M6fq+lZhn1KaQx3NPfuu5maqrJ4fkZwwQy9fO/da0aQW5+/QnIt8sSivmfzS
iV+iOvFUpMsiXyzi2UhX9urEtfXdwwzi3Djiw+YFJkkZsy33lgNm9MPHPUGY
25KfA82FKU+n9MnTbz23JcsF/3JLgkYki0PlOPPj8pwLQDlN5Pe+tnNos8BO
STLiWZC+XLMEWePo6POimBn5K8r3JF8U4q/It4HmiXQO0F4M7deQLovOK1Vd
hOo+EfFUdJ6r6tVttZ/1o3FOhs7q16qnt89FVX9IdVUfBltdT3wX8e3Ez1Of
SPp26mcpH41yc+j6CdubLKqwPl6CzB/aa2pHS+mmXxwfNzBgv0+6d/J7pL3C
eatuhH37PUVOrbhYvUXxVLHrk+3Zsko8V6K9QtJrkY6d/LIIn5AuneaJhLuI
16K5IenbrwZ2WuDY1iy9c0U93DbELL8PuVCvRxDruJZ+ONa62z29zJ9yNbmB
j0lCO06ovMTegv4VNG8lPlBfvHPrLB30MqXlqBWz3xnl8LP9T+par68a41by
Ujmd3EpMeygFDVL07scP7b05F2lwny2J86qnyL7PY7yrvE2RBY1KXc5nvR/8
d1Qp/3Zjqkzp6WEJraWXtOLLejWoyTnjpNd6nOeR9Z9GHib9179E2eG4xfrP
gvlQOfbuWXPAJUnitp7558qeeFnhN3nOrGgT5iOQvpHwFdVJb6nKX1GddFmE
u+h8U83NUeW1bDWnUMVdtuK7fhXeKb3hhIz6z9Vfqfpiqea5U/9F+Irmg3S+
kb6Uzjfa1ybfBvI/pDrNNUhPQvrh0xNfPS20TyOeX5LCJ8UnSVvDiwfVSvNz
0PV9S++NOVJk6YOYRpkOp8i0HO0W5fDk/TLypSRfLMp5Gezx1RBwySBdy9iV
+LTYJHtWD6tQbA/rr0ivRTiK+CXyeSA/UsqDpjkg6edp7kl/F/m4ki8W4Vja
K6xcJ35KTv9U6Vtl9bvAFzpJjg+v4F2D58V0n9A8keaGNL8+GRq+zz00SRrv
zWUa7Zsomzb2OHh9gxn3EOl7sX/N2IAj9omyVHJWmGWMkaCYsFpfrPfHhemx
DaqOjZUqS5rPD5n6WPJdr32/zQXud6jPIp0A1en8IT8Hwl3kP2MrfbsqHlOd
D6ruG9rKp/Rn8WYZ9fRZ/1nzQVv5ZdH9r7pvSN9rVZ8HOpdoPqiq16JzmOYO
qn7vlAdN8xTKgyN8FRZ+rsOn01rp69ux46HKKeJaZs/RehV5T5/mSqTHJl8s
wg9pPi8idk/Vy4v1nf/+o5xJwnxcqoTVskjPJ6tWHHujlz9Mn0ae+N0kR+K2
Hp6cyaLsN0X7hqp5zXQ95RISjqLfk3JtyB+McnOIhyTcS3Newl3kq5bJKTpi
pI8Vby2oNtJ9qFYivlQOGe7G+J90hnSfE69Ffu/ED5OPiqoui/gu8oGhHMN8
y+zmBU55Ip1cHjW+UeuaVN4YHr1tIfu3014P6d4Jd9F5q4qvVPebVHXy9Pq2
8oHMqGfU/3/mxaq4SLVfUPWjU9VnEh6j84d4ddX5IOmySKdBdeKv6LlA/Tjl
55L+qm6Lde6WzMnSt7PdkWh/jQzts6i2lOV9fOKvKC/YoXkLw9dLOnH5nPmo
Lq9Rrm1odSS1Huu1SF9EPg+k3z5z4rce+1oZxaVix8+FLpik7NSJqZGD2beK
9O3ko0U8FeXaEP82KerBRnMHk/SYV3fivN/MsjrL97J//GPC+SDp02rkTqh8
O9UgLsub7/LfaJKdZVbuy7bajLiU3v/Ep+G51xhSZZ/hRGzWk3ppntnbO3dt
3oMgfw+qP+y0cc45R61kc280Lls1rUxq3/nzbleL5C+xc9E/q5Ll1M6py8Z3
T5aO2wx9VpXnfUOHcc4nLtfWiCn/0OhMFZPkyB8j2u603s/r+z0x2fVJlAet
DhR3evNcvK6HD/W7wvu5xF9Rrmj4uooLOi+IkdXfR58NqfC37AmI/3h2YCr6
sZAui3AU9XeEi+i8In8/6kPpnCT+n/wiVHOi6Tliq1zpH+0n/7P0YL8Kn/Nv
rf+sHAHV+1w1J9pWfRadM6TLIhxF/SnlEtL+IO2Dkx6edCaU10Z5Ousa3866
aYVGSg9ee73vuSS5dTfnqdBSFuS7yJebnqeErzoW6JBWw1snURN87nWtbpCt
+kT7x9bnO+m6aW+OcBTpmkjHTvM74pHI54H4K9oTpLxC+rvIN4zmgOQnNiDM
tfCFYL2U+zPk9XFnk4zr87KdVzX+XMiXo8L61c/an0uRd4G1S4bfT5Wjr+b5
lanCenjfhRVH+A3TSrWTt/t3O6qVB7W/Ro12Z18RytOhuWGusPt1faomSqNC
GqeIzs/FM3vZYy+CjLJ3fqs7JXMmScX7ce9n+sRLileBPMsPm6T0/t6h7Tc/
F5/Q21sickZKaGh42a8unGNFuIv4K8qDdn0YuTX75WjZc7Lgg+Di92Rd6LkB
25xSkFen84d07HSOqeIiwl3EF6nO+2zFU/0sH630hkPS2+/zb63bStdnq7xO
W9VJt0l8uCqvRecS7fuQbwPVCUc1LLTu1KKsz+VziOthp29/y/drYS+2nkvF
+SD5NhDf9bbB5/gW5TQSN7FknD57krh7z6lR1trvk58D6d5pHpR74IjsMVZc
aTSYyu7bnyoVorY33OzFvBbxKvOmRz/Ykl8vHecv3FZvoVEcZ76Zf6w+zwEp
v498pYinIl5r9HufYppwkyz/ujJtnrdZHgQdmbHtskmCTvQv9V5jFNdCmq9z
X5ik25x2V/OU5z1EmlcS31U5xGnW2KVWvHc0f9NTblY8Fnk+ofYT9n+gXJ65
jmXutKlnkItpJXpJP5OYHrosfppoRt07zQcpj5LwGPGclCNAOIr08MRfFf4z
wjGPf4L8eWdCvYiDz2SK37ibzlEGnqd//sPy6HW85HO70tz3abSUy77lkQQa
cA+F8BjhJToHqC+j16Hzh3gtOseoPyXcRbosVV8IVT8fwlGq/NXP0rdn4Jxf
SwelWrfVPoXqvE/156rup9D1VCf9FeEr0lnRPJF078Rfke6deCqaXxCOohw3
8scOPxvsGFhQK996bvrzQxmtnLzS13+gK+Mu0mXR/iDhK/IJJ9+Akh/a/f32
kxVHtUjWu+8wSflBrvpPC81i6N2j4SajXpwKHm7ZpZlJXpx7vORbNr6ecBfl
99Fcj/Tt5NNOOIr4Lh/dmGORE614qfjLiv5/mmToDk3Lc9fZt4GuJx5vnO+U
awfb6kSbb/7NgK7W18txy7Or9X0mfVehPd+aN8+rk/Mtd0e5mfSy/LB9wv3a
vNdA+6dUJxxFunfSWZEfL/mX0l4h5YfS95H8WFRx117wK6a9G9JlEb6i/lRV
l0W4i/pZVV93W+0bql6f3nBFBk5Ln7juZ12v2l/8aH8G0g8Qr07nGNUJR5G+
gvgr6mdpT5z0JJTLRvlu5PdIuix63tEeGfmBU52e48Rf+edePnJKO4OU3396
x8chJhle5Nzd+0/NyGvR3I3wGPlrES5qEFW6Vz2DSXr535n8palZ7ud9+nXR
Yc6tpr1F2nOk35/+XtKzEb6ivUKa81IOOPmnZb9abmD5NK3MrLOsmX5+irzT
Dxkz28OCOJ9yB+i+JV6L9PDkX0q4i/gryt8h3EXnBuneCUeRHynNGVX3DUlH
QfMC1fmdqo+ErXTFttJlpTfe5lfBJxn1/11dFUfZal6vqsui84peh/AV4SjS
w1NuDvm90x4TzQdpP5322eftD9vQZ65Gim1Ku9l5X5Jkq1+4gn8pzjGkXDnV
fcO2o3K2mzEnVUbdSPhnnb1ehn/Z2/h8DeavCA/QHiLxSLT3RziH/Ntpfqfq
02WMqlqkXXnr73PWceyWIyYpl9Z2iG4S81E0lyR/UdorJD8HfJ9hf5B8tBpE
vtL6Tk6VwZ/rvFmUSS97RoWdmmz9fDs6S9Sa8VqpExTQd2CEVlbeSOt/3J11
WaQDjG09qI2MTZYQ34Vr21vxV67XBc7+5cT4ivRXNDd87xrd61WpeCn2e+Ne
/Qc8lWsvXVxf6vWon6R5Is39SSdPenjSXxF/Tvp26isJ51DfSniMXodwmur8
QvX5Yis/hwxckYGv/n/mhrbSyav2F7bir1Tng+R7THNA8k+mc494fsJd1BfT
XiHNL2jfnJ4jlGOob1qlyLXbGpFekWc3F9bI+jW3J7y34qtqaQ6Zy/TWiqex
/KDWW6199f7cv3u5s56Z8g0pX5j4EOJhyG+T5nqkv2q7okn/9nlN8mZm8Xmf
P5uka8FJvu/t2FeBeC3yy6K8HsKBn3JV/qfoDCuOmvh0T/I9k8S7Dw+u1551
+G0c/RdvfmSQi08P9glbZRLnmK9DC2xh/wfiu0gPT7o4wl20nzjr1bTfWqzV
Suukvt3nf9BK7Ni7uSdWsMjXoKXlTs1PltDoqBVDmyfLUrt3jzqUt4g5dfLp
KdOTZV/+Kqt71kyWuzOzNLP7H/YKaT5OPg+14j6VaxoVL9UvRbZ0ComWOwFD
1twYZsD9EZrLkx6ecBedD8R3kV8WnVeEo+jco7qqjktVr0V1wmk/2h9edT8r
veGN9IZz/h+dKCFB
     "]], {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
gVePtpX1JhUKC0tPs9iQ4P/+h8D//w/5H+q8+7c=
      "]]}}},
  AspectRatio->1,
  Frame->True,
  FrameLabel->{None, None},
  Method->{},
  PlotRange->{{-1.979994, 1.979997}, {0.009003, 0.029765}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6065111208257103`*^9, 3.606511132214066*^9}, 
   3.606511355909781*^9, 3.6065113992499313`*^9, 3.606511445298429*^9, {
   3.6085759056512413`*^9, 3.60857597811626*^9}, 3.608895417044428*^9, {
   3.608895460895709*^9, 3.608895503088319*^9}, 3.608915016353771*^9, 
   3.608915082280607*^9, 3.6089152326398783`*^9, 3.608915326191371*^9, 
   3.6089155755336027`*^9, 3.608990765398787*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
    "\"\</Users/mgreuter/Documents/Research/Codes/histogram-fitter/master/src/\
data\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Real", ",", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "testdata", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"18", "/", "0.05"}]}], ",", 
       RowBox[{"d", "=", 
        RowBox[{"0.4", "/", "0.05"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"850", " ", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c", " ", 
                RowBox[{"Sqrt", "[", "g", "]"}]}], "-", 
               RowBox[{"d", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", "g"}], "]"}]}]}], ")"}], "^", "2"}]}], "/", 
           RowBox[{"(", 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{"1", "-", "g"}], ")"}]}], ")"}]}], "]"}], "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"g", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "g"}], ")"}], "^", "3"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", "0.0001", ",", "0.001"}], "}"}]}], "]"}]}], "]"}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.6035539278489933`*^9, 3.603553942902207*^9}, {
   3.6049301747949553`*^9, 3.604930175986545*^9}, {3.604930211295864*^9, 
   3.6049302662990932`*^9}, 3.606511073084403*^9, {3.606511128241623*^9, 
   3.606511131412725*^9}, {3.608575901673624*^9, 3.608575902352335*^9}, {
   3.608575952415876*^9, 3.608575975810545*^9}, {3.608895500842579*^9, 
   3.608895500930874*^9}, {3.608895557672502*^9, 3.608895575153903*^9}, {
   3.6088958479800863`*^9, 3.60889605421495*^9}, {3.6088960870655727`*^9, 
   3.608896116748796*^9}, {3.60889620719202*^9, 3.608896215270092*^9}, {
   3.608896646553873*^9, 3.608896646860846*^9}, {3.6088971429888983`*^9, 
   3.608897176074946*^9}, {3.60890034807612*^9, 3.608900356790352*^9}, {
   3.608900401034605*^9, 3.608900420146068*^9}, {3.608900862578524*^9, 
   3.6089008692493687`*^9}, {3.608900974458555*^9, 3.6089009771500607`*^9}, {
   3.608901959601314*^9, 3.608902000427084*^9}, {3.6089211488472*^9, 
   3.608921157002432*^9}, {3.6089744016838293`*^9, 3.608974406040724*^9}, {
   3.6089831722400618`*^9, 3.608983202108673*^9}, {3.608989211442721*^9, 
   3.6089892399843884`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxF1A1Qk3UcB/AHLVEvZaaocJDKi9BAeRuOl2RfkZeRQ162EARPSBwUQmmS
A1JIObpUlJYYlug8ION4EbDlAp0DFEO0EERgOBgDpTBxhuiR4FX7/0fP3XPP
fe77/P7P756732/V+x9F7pzFMEziv/d/T17FrRP3Bt7kMYZLz2u9MTbL/vWl
1HMhGmbt/oRtMeN+xmOgMcyKmo2LgR1pz9xWUPOwwi0z7ZzTKuKcQCTyjpTx
lTY0F6I89PT9J+F2NN+BxfoUu3lN9sTYhehXn8XWiByIwyU488Yx6ZYRR2LF
QQxZnm19lcEmds1H6JW0RcsfORFLCiFty+Zf3b+GeMlZdPcWZItZLsRBZVj4
LLwvL8KVuLoSG697ZS+e70b8cx3EgkbLpE7q9kv4sjPkp/rT7sRWSlRs7YhY
KPYwOGdeM7RO9RPfvsUh+VQLZl/0/2pshHpjG1b7tDn713oSH/oN/EbhL4WZ
6wxW5XVgv9R3l40H12BYdUFmcc300ynqgG40ywQlrde9yPeaevHAocvP+rg3
OU/dB8vJy7ryYB+SP9ZgfU7ggWmWr8Eyay22m/5qEaGmfqHFwWNR8tKSdwyO
vzyIS9v9Ytzi1hu80lYH9cOWZ7n2fuT9Mh2mUsMKesaI4z/XYcVEt5Ozgmew
VqEDe2ggKc4LpN9cHRpWl3rOKSZWcXUI/TB5do3JBtKfehD9Vc53YsTUzCAk
J1faypqIZdu0mK8e1oc4+JP6p/34zrpcOX6EmPHWwDkh9WixnuYdfbgRktA/
JNhI8vReROfbV+bXEqtud2O0/Y8M7tIA+n/vIWtJdfBgJrFqvBPm0+dOOXQT
My4dOA9x0h3fQJL7tcMrl+2ZJSPOKbgFMh9BxKybSKzRiVISqDffwMT49zbm
LcTMiWvI46bolexgYmETlme5KJOPU6ddRd0OW9aFR9SKegScH9FEh/OJt1xC
12hFxSw5tcuPEK/9OKPSIoS4pBYmyxLb/kqnllZButXx1Gk1dcAPsD3zpziI
9y6djzLIB2s4+hLqnHMIu1mat47ZRHy3GIMLPhBpE6m1RdgTscbmcCu15ARm
Fz594rFWQOdLisIe+RWNlFqSD5fGcjO7J9SqXKheS9PcFoYS1xxEJN+9Yp+C
2jUbQ0eeS1ZZbyYukODA3tGbSRnU8XthpqguWtRPrdoN2cs94gb/MLovUuDG
43J2nqeOT8TDr82bu0zCaf8JuCB/Uc7mUCMG+wwLgZqJBiYb9t0tMjoc+Y/l
shct1DmbEGVW9IVg0phvoPstgubASGTce8+3UTPu4ARHHbA4arQPppO9dqYp
jeag5bCloFlvtCuOVU65L7eNpHbEfdnzWN8Io9koberxLzhkNAupw/VvP5Ab
zWDdnGKWz+9Gz8Whv096b1sqnLHAKmNlHV84U7/EL9bUNMtohtFsXz8WW2W0
nscWcZdl9/3v8XSLV50LRDNu+OblsCNEM/X/ALyw5SM=
      "]]}, {}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
8dOmWsyTiJjSNtKCluDs/VWFtXjqnu3X3nNaEJJjM9aTWItmPky/B821gPeS
QYaEPWW8QATjxwta8Gxaf+41bS3KxNue++OnBe6hVRPiJjVoacw0KJCjBQau
9lwV21VY9C38TcyiFsheUqCdDa9AmwR3mFnWAq7bayIGVyso51nLcvk1LUj3
LyC32VVgVJh0+o8NLTBa3T83rFyBjhwzVno7taHwSGHd3fVy5D1LmKNn0ga/
+eqERx7lmPNife8dRW3g8Ak4nelShpnprloFUdpgUrVO+4ruKRZmc64txWiD
10ed0Yi5EqwoGMolxGmDBMuPW5b9JdhdLf/f+0Rt4M8Q9dXPKMG/wzTP9mZS
vov7jqgIlaAF0/0jHk+04Wf+WsV5gyfIeuftlEK/Noy0hLXzlhRjVoaETz+L
Dsip73JdeliIZiTmf0R2HXDIyIxkii9EJjqq6DfHdSA+ImrIyKsQU/wGM7p5
dOD8RHYfg2oh3jTxaWwX0wHJsW+xOdMFeO1ow846FR0QWTonRMVdgMZJGim5
l3Tg1Tp9mll1Ph7WkmDjvKIDfyO/l6o/yMf+7WMP77vpwBEx7T1aN/NRz/17
9V0vHShxzT8db52PasT4sfRgHXCJWO1moM1H6f2DnLHJOsC9U91+yzoPGWKs
S6/W6UBa7O2IDdZcXPE3yXvdoAO9668Sm+hyceSyQTrrCx14vlvBO+V3DmYb
qAS2tuqAR/bNDLfBHBQ+xqd5uFcHXjRPby7E5qBa4dxU+ZQOvHm15rDv3wO8
1h54cGmnLnD3XzNx/5qNljXeVOq7dWEfIyFw+1U2Eh65rmbQ6UKzeozVs4Js
pIm3HccDuqBjobbu5JCNKWfPFCYx6UIbzR16ra/3sIS8lyAppAsiShk1RfN3
cXpHlqs7URfqKqeKNA5noU9ep9IaSRdGP2V5sK1k4l61P/sCz+rCe8evOw69
y8RT0eceR5npwl3ad3Q2tzPx5gH6b9n2usD8+vnTIPZMlGaNsOv11YX+zijZ
KvEMDD/pdlbogS6slOhlEl1uI/PwPe7SXF1YtzG7SmtwG5/59iydeqgLNq/8
KidP3sbROsEkLNYFvrl+GvJWOorip17TSl0wKj7DqJmaju/0zDSiOnRB4fId
+yttacjvqCr/6ZcuBL3gIl+VS0X6S3JnrJd1YZH+kiQTVyquXxbXf7+qC99l
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
25PgxqQNJ2+4Mf4PmhD2lw==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 0.001236}, {0, 38343.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.000024719999999999997`, 0.000024719999999999997`}, {
   766.86, 766.86}}]], "Output",
 CellChangeTimes->{{3.6089019807232447`*^9, 3.6089020008088427`*^9}, 
   3.608902491668556*^9, 3.608914909118101*^9, 3.608915649392137*^9, 
   3.608920702127036*^9, {3.608920898595999*^9, 3.608920921671476*^9}, {
   3.6089211275816402`*^9, 3.608921157260866*^9}, 3.608974335391716*^9, 
   3.608974406855459*^9, 3.608974771301153*^9, {3.608983173485258*^9, 
   3.608983202426159*^9}, {3.608989215170961*^9, 3.608989240350881*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
    "\"\</Users/mgreuter/Documents/Research/Codes/histogram-fitter/old-\
versions/v1.5/fitter/src/data\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Real", ",", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "testdata", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"18", "/", "0.05"}]}], ",", 
       RowBox[{"d", "=", 
        RowBox[{"0.4", "/", "0.05"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"72", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c", " ", 
                RowBox[{"Sqrt", "[", "g", "]"}]}], "-", 
               RowBox[{"d", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", "g"}], "]"}]}]}], ")"}], "^", "2"}]}], "/", 
           RowBox[{"(", 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{"1", "-", "g"}], ")"}]}], ")"}]}], "]"}], "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"g", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "g"}], ")"}], "^", "3"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", "0.0003", ",", "0.0008"}], "}"}]}], "]"}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6035539278489933`*^9, 3.603553942902207*^9}, {
   3.6049301747949553`*^9, 3.604930175986545*^9}, {3.604930211295864*^9, 
   3.6049302662990932`*^9}, 3.606511073084403*^9, {3.606511128241623*^9, 
   3.606511131412725*^9}, {3.608575901673624*^9, 3.608575902352335*^9}, {
   3.608575952415876*^9, 3.608575975810545*^9}, {3.608895500842579*^9, 
   3.608895500930874*^9}, {3.608895557672502*^9, 3.608895575153903*^9}, {
   3.6088958479800863`*^9, 3.60889605421495*^9}, {3.6088960870655727`*^9, 
   3.608896116748796*^9}, {3.60889620719202*^9, 3.608896215270092*^9}, {
   3.608896646553873*^9, 3.608896646860846*^9}, {3.6088971429888983`*^9, 
   3.608897176074946*^9}, {3.608897540356689*^9, 3.608897564032193*^9}, {
   3.608897599489452*^9, 3.608897626206856*^9}, {3.608897754509183*^9, 
   3.6088977634077463`*^9}, {3.608898684322878*^9, 3.6088986844064074`*^9}, 
   3.608898795992462*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAASCPJaVTLMj+C4seYuxSGQLsmJf86
UDM/l5APerbBiECsEaZRzdgzP2Q730+NzItAWMBdJiVlND/dJAaBFQ2RQC6N
OIxd9TQ/7FG4HgUwk0AGUhYAkok1P7gehetRj5VAuOjW/t0hNj9g5dAiW0KX
QCCoGytfvjY/aJHtfD+9mEAb54UnM183P6JFtvN9hJ1AVfudcngEOD8nMQis
nPafQEc502ZOrjg/w/UoXI8LoUA69Hs61Vw5P1YOLbLdeKNARX7V/y0QOj9i
EFg5NIikQB8n64B7yDo/hxbZzjdVpUCtP+Gr34U7PxfZzvcTyKVAqJSEcH9I
PD8xCKwc2kyoQGRzrlB/ED0/3SQGgRU9qEDRJgaGBd49P6rx0k3iGahArfgZ
JjmxPj/4U+OlW9mpQIYxXyJCij8/exSuR6FdqUDDiwwSpTRAP166SQyCHKpA
bXhFaj2nQD+e76fGC+2oQAyAVjgAHUE/nu+nxgt8p0Cfg7XRA5ZBP5zEILCy
06VAjePL+V4SQj9CYOXQoremQL++44YpkkI/hxbZzrdso0CFszq9exVDP65H
4XqUj6JA/171vG6cQz93vp8ab2OgQAAeMt0bJ0Q/rBxaZDuXnUDdC/CHnbVE
P+58PzXeg5lAuUIVAw9IRT9mZmZmZoWWQCFcewKM3kU/CtejcD0qkkAisNxM
MXlGP8ZtNIA3C49Aflbt3xsYRz+KH2Pu2tOIQJRkL3Fqu0c/W0I+6NkThEDC
7yS2O2NIPzarPldbw35An4sqrq8PST/EsS5uo0B4QI3KgzTnwEk/OpLLf0gV
cUAFnwwq
      "]]}, {}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0.0002867776, 0},
  Method->{},
  PlotRange->{{0.0002867776, 0.0007859353}, {0, 3342.254}},
  PlotRangeClipping->True,
  PlotRangePadding->{{9.983154*^-6, 9.983154*^-6}, {66.84508, 
   66.84508}}]], "Output",
 CellChangeTimes->{{3.6088975475001793`*^9, 3.608897564610704*^9}, {
   3.608897620569957*^9, 3.608897626635271*^9}, {3.60889775522749*^9, 
   3.608897763626464*^9}, {3.608898680783454*^9, 3.608898684576041*^9}, 
   3.608898796242517*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{640, 750},
WindowMargins->{{Automatic, 14}, {-14, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 269, 7, 46, "Input"],
Cell[CellGroupData[{
Cell[839, 31, 152, 2, 80, "Section"],
Cell[CellGroupData[{
Cell[1016, 37, 206, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1247, 44, 413, 12, 28, "Input"],
Cell[1663, 58, 214, 6, 44, "Output"]
}, Open  ]],
Cell[1892, 67, 2028, 61, 148, "Input"],
Cell[CellGroupData[{
Cell[3945, 132, 2020, 59, 114, "Input"],
Cell[5968, 193, 73, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6078, 199, 1839, 54, 97, "Input"],
Cell[7920, 255, 71, 1, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[8040, 262, 205, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[8270, 269, 728, 21, 46, "Input"],
Cell[9001, 292, 378, 11, 62, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[9428, 309, 234, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[9687, 318, 556, 15, 63, "Input"],
Cell[10246, 335, 238, 8, 53, "Output"]
}, Open  ]],
Cell[10499, 346, 2377, 67, 131, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[12913, 418, 107, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[13045, 423, 979, 28, 80, "Input"],
Cell[14027, 453, 1079, 34, 115, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[15155, 493, 157, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[15337, 499, 1301, 34, 97, "Input"],
Cell[16641, 535, 4960, 146, 474, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[21650, 687, 234, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[21909, 696, 3225, 85, 301, "Input"],
Cell[25137, 783, 1423, 39, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26597, 827, 1332, 36, 148, "Input"],
Cell[27932, 865, 122, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28091, 872, 1492, 38, 148, "Input"],
Cell[29586, 912, 2540, 76, 269, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32163, 993, 1777, 49, 148, "Input"],
Cell[33943, 1044, 73, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34053, 1050, 1154, 31, 63, "Input"],
Cell[35210, 1083, 3435, 112, 237, "Output"]
}, Open  ]],
Cell[38660, 1198, 5298, 153, 369, "Input"],
Cell[43961, 1353, 2185, 60, 148, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[46183, 1418, 232, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[46440, 1427, 4862, 127, 369, "Input"],
Cell[51305, 1556, 95, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51437, 1562, 2233, 57, 148, "Input"],
Cell[53673, 1621, 2287, 63, 137, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56021, 1691, 107, 1, 80, "Section"],
Cell[56131, 1694, 139, 3, 30, "Text"],
Cell[56273, 1699, 6408, 156, 505, "Input"],
Cell[CellGroupData[{
Cell[62706, 1859, 133, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[62864, 1865, 934, 27, 46, "Input"],
Cell[CellGroupData[{
Cell[63823, 1896, 193, 3, 21, "Print"],
Cell[64019, 1901, 191, 3, 21, "Print"],
Cell[64213, 1906, 199, 3, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64461, 1915, 983, 29, 46, "Input"],
Cell[CellGroupData[{
Cell[65469, 1948, 120, 1, 21, "Print"],
Cell[65592, 1951, 118, 1, 21, "Print"],
Cell[65713, 1954, 124, 1, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65886, 1961, 1009, 28, 46, "Input"],
Cell[CellGroupData[{
Cell[66920, 1993, 97, 1, 21, "Print"],
Cell[67020, 1996, 94, 1, 21, "Print"],
Cell[67117, 1999, 99, 1, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[67277, 2007, 180, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[67482, 2013, 1082, 30, 63, "Input"],
Cell[CellGroupData[{
Cell[68589, 2047, 118, 1, 21, "Print"],
Cell[68710, 2050, 115, 1, 21, "Print"],
Cell[68828, 2053, 121, 1, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68998, 2060, 1075, 30, 63, "Input"],
Cell[CellGroupData[{
Cell[70098, 2094, 100, 1, 21, "Print"],
Cell[70201, 2097, 95, 1, 21, "Print"],
Cell[70299, 2100, 101, 1, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70449, 2107, 1105, 30, 63, "Input"],
Cell[CellGroupData[{
Cell[71579, 2141, 97, 1, 21, "Print"],
Cell[71679, 2144, 94, 1, 21, "Print"],
Cell[71776, 2147, 100, 1, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[71937, 2155, 184, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[72146, 2163, 1011, 29, 46, "Input"],
Cell[CellGroupData[{
Cell[73182, 2196, 559, 8, 21, "Print"],
Cell[73744, 2206, 558, 8, 21, "Print"],
Cell[74305, 2216, 563, 8, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74917, 2230, 1056, 30, 46, "Input"],
Cell[CellGroupData[{
Cell[75998, 2264, 167, 2, 21, "Print"],
Cell[76168, 2268, 165, 2, 21, "Print"],
Cell[76336, 2272, 171, 2, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76556, 2280, 1085, 30, 46, "Input"],
Cell[CellGroupData[{
Cell[77666, 2314, 142, 2, 21, "Print"],
Cell[77811, 2318, 138, 2, 21, "Print"],
Cell[77952, 2322, 146, 2, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[78159, 2331, 231, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[78415, 2338, 1504, 43, 63, "Input"],
Cell[CellGroupData[{
Cell[79944, 2385, 610, 9, 21, "Print"],
Cell[80557, 2396, 607, 9, 21, "Print"],
Cell[81167, 2407, 613, 9, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81829, 2422, 1552, 45, 80, "Input"],
Cell[CellGroupData[{
Cell[83406, 2471, 240, 3, 21, "Print"],
Cell[83649, 2476, 240, 3, 21, "Print"],
Cell[83892, 2481, 244, 3, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84185, 2490, 1610, 44, 80, "Input"],
Cell[CellGroupData[{
Cell[85820, 2538, 240, 4, 21, "Print"],
Cell[86063, 2544, 237, 4, 21, "Print"],
Cell[86303, 2550, 243, 4, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[86607, 2561, 230, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[86862, 2568, 1551, 44, 80, "Input"],
Cell[CellGroupData[{
Cell[88438, 2616, 95, 1, 21, "Print"],
Cell[88536, 2619, 94, 1, 21, "Print"],
Cell[88633, 2622, 98, 1, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88780, 2629, 1549, 45, 80, "Input"],
Cell[CellGroupData[{
Cell[90354, 2678, 149, 2, 21, "Print"],
Cell[90506, 2682, 145, 2, 21, "Print"],
Cell[90654, 2686, 152, 2, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90855, 2694, 1578, 45, 80, "Input"],
Cell[CellGroupData[{
Cell[92458, 2743, 148, 2, 21, "Print"],
Cell[92609, 2747, 143, 2, 21, "Print"],
Cell[92755, 2751, 149, 2, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[92965, 2760, 234, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[93224, 2769, 1581, 47, 63, "Input"],
Cell[CellGroupData[{
Cell[94830, 2820, 584, 8, 21, "Print"],
Cell[95417, 2830, 579, 8, 21, "Print"],
Cell[95999, 2840, 585, 8, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96633, 2854, 1626, 48, 80, "Input"],
Cell[CellGroupData[{
Cell[98284, 2906, 219, 3, 21, "Print"],
Cell[98506, 2911, 216, 3, 21, "Print"],
Cell[98725, 2916, 222, 3, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98996, 2925, 1681, 47, 80, "Input"],
Cell[CellGroupData[{
Cell[100702, 2976, 214, 3, 21, "Print"],
Cell[100919, 2981, 209, 3, 21, "Print"],
Cell[101131, 2986, 216, 3, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101420, 2997, 108, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[101553, 3002, 1212, 28, 114, "Input"],
Cell[102768, 3032, 204580, 3364, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307385, 6401, 2708, 63, 148, "Input"],
Cell[310096, 6466, 13160, 221, 267, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323293, 6692, 2500, 60, 148, "Input"],
Cell[325796, 6754, 6686, 116, 237, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
